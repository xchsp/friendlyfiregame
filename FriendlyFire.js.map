{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Animator.ts","webpack:///./src/Aseprite.ts","webpack:///./src/Assets.ts","webpack:///./src/Bird.ts","webpack:///./src/BitmapFont.ts","webpack:///./src/Bone.ts","webpack:///./src/Camera.ts","webpack:///./src/Campaign.ts","webpack:///./src/Campfire.ts","webpack:///./src/Caveman.ts","webpack:///./src/Chicken.ts","webpack:///./src/Cloud.ts","webpack:///./src/ColorGradient.ts","webpack:///./src/Conversation.ts","webpack:///./src/ConversationProxy.ts","webpack:///./src/Dance.ts","webpack:///./src/DialoguePrompt.ts","webpack:///./src/Entity.ts","webpack:///./src/Face.ts","webpack:///./src/Fire.ts","webpack:///./src/FireGfx.ts","webpack:///./src/FlameBoy.ts","webpack:///./src/FriendlyFire.ts","webpack:///./src/Game.ts","webpack:///./src/MapInfo.ts","webpack:///./src/Menu.ts","webpack:///./src/Mimic.ts","webpack:///./src/MountainRiddle.ts","webpack:///./src/MovingPlatform.ts","webpack:///./src/NPC.ts","webpack:///./src/Particles.ts","webpack:///./src/PhysicsEntity.ts","webpack:///./src/Player.ts","webpack:///./src/PlayerConversation.ts","webpack:///./src/Portal.ts","webpack:///./src/PowerShiba.ts","webpack:///./src/Quests.ts","webpack:///./src/Radio.ts","webpack:///./src/Renderer.ts","webpack:///./src/RiddleStone.ts","webpack:///./src/Scene.ts","webpack:///./src/Scenes.ts","webpack:///./src/ScriptableNPC.ts","webpack:///./src/Seed.ts","webpack:///./src/ShadowPresence.ts","webpack:///./src/Shiba.ts","webpack:///./src/Sign.ts","webpack:///./src/Signal.ts","webpack:///./src/Skull.ts","webpack:///./src/Snowball.ts","webpack:///./src/Sound.ts","webpack:///./src/SoundEmitter.ts","webpack:///./src/SpeechBubble.ts","webpack:///./src/Stone.ts","webpack:///./src/StoneDisciple.ts","webpack:///./src/SuperThrow.ts","webpack:///./src/Transition.ts","webpack:///./src/Tree.ts","webpack:///./src/Wall.ts","webpack:///./src/Wing.ts","webpack:///./src/Wood.ts","webpack:///./src/World.ts","webpack:///./src/constants.ts","webpack:///./src/easings.ts","webpack:///./src/geom/Direction.ts","webpack:///./src/graphics.ts","webpack:///./src/graphics/AffineTransform.ts","webpack:///./src/graphics/Line2.ts","webpack:///./src/graphics/Polygon2.ts","webpack:///./src/graphics/Vector2.ts","webpack:///./src/input/ControllerEvent.ts","webpack:///./src/input/ControllerEventType.ts","webpack:///./src/input/ControllerFamily.ts","webpack:///./src/input/ControllerIntent.ts","webpack:///./src/input/ControllerManager.ts","webpack:///./src/input/GamepadInput.ts","webpack:///./src/input/GamepadModel.ts","webpack:///./src/input/GamepadStyle.ts","webpack:///./src/input/Keyboard.ts","webpack:///./src/scene/AsepriteNode.ts","webpack:///./src/scene/ControlTooltipNode.ts","webpack:///./src/scene/ImageNode.ts","webpack:///./src/scene/ProgressBarNode.ts","webpack:///./src/scene/RootNode.ts","webpack:///./src/scene/SceneNode.ts","webpack:///./src/scene/SceneNodeAnimation.ts","webpack:///./src/scene/TextNode.ts","webpack:///./src/scenes/CharacterSelectionScene.ts","webpack:///./src/scenes/ControlsScene.ts","webpack:///./src/scenes/CreditsScene.ts","webpack:///./src/scenes/EndScene.ts","webpack:///./src/scenes/GameScene.ts","webpack:///./src/scenes/GotItemScene.ts","webpack:///./src/scenes/LoadingScene.ts","webpack:///./src/scenes/PauseScene.ts","webpack:///./src/scenes/TitleScene.ts","webpack:///./src/transitions/CurtainTransition.ts","webpack:///./src/transitions/FadeTransition.ts","webpack:///./src/transitions/SlideTransition.ts","webpack:///./src/util.ts","webpack:///./node_modules/tslib/tslib.js","webpack:///(webpack)/buildin/global.js"],"names":[],"mappings":"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","file":"FriendlyFire.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/FriendlyFire.js\");\n","import { Aseprite } from \"./Aseprite\";\nimport { Entity } from \"./Entity\";\nimport { RenderingLayer } from \"./Renderer\";\n\nexport type AnimationConfig = {\n    loop?: boolean;\n    callback?: Function;\n};\n\nexport type CurrentAnimationState = {\n    tag: string;\n    start: number;\n    finished: boolean;\n    duration: number;\n    config?: AnimationConfig;\n    direction?: number;\n};\n\n/**\n * The Animator class can be used to orchestrate and draw aseprite animations of an entity\n */\nexport class Animator {\n    private entity: Entity;\n    private sprite?: Aseprite;\n\n    private currentAnimation: CurrentAnimationState = {\n        tag: \"\",\n        start: 0,\n        duration: 0,\n        finished: false,\n    };\n\n    public constructor (entity: Entity) {\n        this.entity = entity;\n    }\n\n    public assignSprite(sprite: Aseprite): void {\n        this.sprite = sprite;\n    }\n\n    /**\n     * Updates the animation if all conditions are met regarding the currently playing animation.\n     *\n     * @param tag    - The animation tag to draw.\n     * @param config - Optional animation configuration.\n     */\n    private updateAnimation(tag: string, config?: AnimationConfig): void {\n        // Early out if animation tag is already set as current animation\n        if (!this.sprite) return;\n\n        // Animation Update Logic\n        // If current animation has a fixed duration, check if it was reached.\n        // If so, the animation is set to finished.\n        if (!this.currentAnimation.finished && this.currentAnimation.duration > 0) {\n            const animationTime = (this.entity.scene.gameTime * 1000) - this.currentAnimation.start;\n\n            if (animationTime + (this.entity.scene.dt * 1000) >= this.currentAnimation.duration) {\n                this.currentAnimation.finished = true;\n\n                if (this.currentAnimation.config?.callback) {\n                    this.currentAnimation.config.callback();\n                }\n            }\n        }\n\n        // Leave function if the provided animation tag is the one that is already playing since\n        // there is no need to update the current animation settings.\n        if (this.currentAnimation.tag === tag) return;\n\n        // Update Animation with new payload\n        this.currentAnimation.tag = tag;\n        this.currentAnimation.start = this.entity.scene.gameTime * 1000;\n        this.currentAnimation.config = config;\n        this.currentAnimation.finished = false;\n        this.currentAnimation.duration = this.sprite.getAnimationDurationByTag(tag) || 0;\n    }\n\n    /**\n     * Method to call from draw method of the entity to draw a specific animation by tag.\n     *\n     * @param tag    - The animation tag to draw.\n     * @param ctx    - The canvas context to draw to.\n     * @param config - Optional animation configuration.\n     */\n    public play(tag: string, direction: number, config?: AnimationConfig): void {\n        this.currentAnimation.direction = direction;\n        this.updateAnimation(tag, config);\n\n        let animationTime = (this.entity.scene.gameTime * 1000) - this.currentAnimation.start;\n\n        /**\n         * Forcefully stop the loop at the last frame, if looping is disabled.\n         * We subtract an arbitrary small number the animation duration, since the exact animation\n         * duration time will play frame 1 of the animation.\n         */\n        if (config?.loop === false) {\n            const lastFrameTime = this.currentAnimation.duration - 1;\n            animationTime = Math.min(lastFrameTime, animationTime);\n        }\n\n        /**\n         * Zero Animation timer fix.\n         * Sometimes (?), an animation time of zero does not play the first but the last frame, thus\n         * we just skip 0.\n         */\n        if (animationTime === 0) animationTime += 1;\n\n        this.draw(animationTime);\n    }\n\n    private draw(animationTime: number): void {\n        if (this.sprite) {\n            this.entity.scene.renderer.addAseprite(\n                this.sprite, this.currentAnimation.tag, this.entity.x, this.entity.y,\n                RenderingLayer.ENTITIES, this.currentAnimation.direction, animationTime\n            );\n        }\n    }\n}\n","import type {\n    AsepriteDirection, AsepriteFrameJSON, AsepriteFrameTagJSON, AsepriteJSON, AsepriteLayerJSON\n} from \"*.aseprite.json\";\nimport { loadImage } from \"./graphics\";\nimport { now } from \"./util\";\n\n/**\n * Sprite implementation which uses the Aseprite JSON format. Use the static asynchronous [[load]] method to load the\n * sprite and then use [[draw]] or [[drawTag]] to draw the sprite animation.\n */\nexport class Aseprite {\n    private readonly frames: AsepriteFrameJSON[];\n    private readonly frameTags: Record<string, AsepriteFrameTagJSON> = {};\n    private readonly frameTagDurations: Record<string, number> = {};\n    private readonly duration: number;\n    private readonly fallbackTag = \"idle\";\n\n    private constructor(private readonly json: AsepriteJSON, private readonly image: HTMLImageElement) {\n        this.frames = Object.values(json.frames);\n        this.duration = this.frames.reduce((duration, frame) => duration + frame.duration, 0);\n\n        for (const frameTag of json.meta.frameTags ?? []) {\n            let duration = 0;\n\n            for (let i = frameTag.from; i <= frameTag.to; i++) {\n                duration += this.frames[i].duration;\n            }\n\n            this.frameTags[frameTag.name] = frameTag;\n            this.frameTagDurations[frameTag.name] = duration;\n        }\n    }\n\n    /**\n     * Loads the sprite from the given source.\n     *\n     * @param source - The URL pointing to the JSON file of the sprite.\n     * @return The loaded sprite.\n     */\n    public static async load(source: string): Promise<Aseprite> {\n        const json = await (await fetch(source)).json() as AsepriteJSON;\n        const baseURL = new URL(source, location.href);\n        const image = await loadImage(new URL(json.meta.image, baseURL));\n\n        return new Aseprite(json, image);\n    }\n\n    /**\n     * Returns the sprite width in pixels.\n     *\n     * @return The sprite width in pixels.\n     */\n    public get width(): number {\n        return this.frames[0].sourceSize.w;\n    }\n\n    /**\n     * Returns the sprite height in pixels.\n     *\n     * @return The sprite height in pixels.\n     */\n    public get height(): number {\n        return this.frames[0].sourceSize.h;\n    }\n\n    private calculateFrameIndex(\n        time: number = now(), duration = this.duration, from = 0, to = this.frames.length - 1,\n        direction: AsepriteDirection = \"forward\"\n    ): number {\n        let delta = direction === \"reverse\" ? -1 : 1;\n\n        if (direction === \"pingpong\") {\n            duration = duration * 2 - this.frames[from].duration - this.frames[to].duration;\n        }\n\n        let frameTime = time % duration;\n        let frameIndex = direction === \"reverse\" ? to : from;\n\n        while (\n            (\n                (delta > 0 && frameIndex < to)\n                || (delta < 0 && frameIndex > from)\n            ) && frameTime >= this.frames[frameIndex].duration\n        ) {\n            frameTime -= this.frames[frameIndex].duration;\n            frameIndex += delta;\n\n            if (frameIndex === to) {\n                delta = -delta;\n            }\n        }\n\n        return frameIndex;\n    }\n\n    /**\n     * Returns the frame index to be drawn at the given time.\n     *\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     * @return The frame index to draw.\n     */\n    public getFrameIndex(time: number = now()): number {\n        return this.calculateFrameIndex(time);\n    }\n\n    /**\n     * Draws a single sprite animation frame.\n     *\n     * @param ctx   - The canvas context to draw to.\n     * @param index - The frame index to draw.\n     * @param x     - The X position in pixels to draw to the sprite at.\n     * @param y     - The Y position in pixels to draw to the sprite at.\n     */\n    public drawFrame(ctx: CanvasRenderingContext2D, index: number, x: number, y: number): void {\n        const frame = this.frames[index];\n\n        if (frame == null) {\n            throw new Error(\"Frame index not found: \" + index);\n        }\n\n        ctx.drawImage(\n            this.image,\n            frame.frame.x, frame.frame.y,\n            frame.frame.w, frame.frame.h,\n            Math.round(x) + frame.spriteSourceSize.x, Math.round(y) + frame.spriteSourceSize.y,\n            frame.spriteSourceSize.w, frame.spriteSourceSize.h\n        );\n    }\n\n    /**\n     * Returns the frame index of a tagged sprite animation at the given time.\n     *\n     * @param tag  - The animation tag to draw.\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     * @return The frame index to draw.\n     */\n    public getTaggedFrameIndex(tag: string, time: number = now()): number {\n        const frameTag = this.frameTags[tag] || this.frameTags[this.fallbackTag];\n        if (frameTag == null) {\n            throw new Error(`Frame tag not found and fallback is not available as well. Tag: '${tag}' | FallbackTag: '${this.fallbackTag}'`);\n        }\n        return this.calculateFrameIndex(\n            time, this.frameTagDurations[tag], frameTag.from, frameTag.to, frameTag.direction\n        );\n    }\n\n    /**\n     * Return the full animation duration for a specific animation tag.\n     *\n     * @param tag - The animation tag to get the duration from.\n     * @return The animation duration.\n     */\n    public getAnimationDurationByTag(tag: string): number {\n        const duration = this.frameTagDurations[tag] || this.frameTagDurations[this.fallbackTag];\n        if (duration == null) {\n            throw new Error(`Frame tag not found and fallback is not available as well. Tag: '${tag}' | FallbackTag: '${this.fallbackTag}'`);\n        }\n\n        return duration;\n    }\n\n    /**\n     * Draws a tagged sprite animation.\n     *\n     * @param ctx  - The canvas context to draw to.\n     * @param tag  - The animation tag to draw.\n     * @param x    - The X position in pixels to draw to the sprite at.\n     * @param y    - The Y position in pixels to draw to the sprite at.\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     */\n    public drawTag(ctx: CanvasRenderingContext2D, tag: string, x: number, y: number, time: number = now()): void {\n        this.drawFrame(ctx, this.getTaggedFrameIndex(tag, time), x, y);\n    }\n\n    /**\n     * Draws the untagged sprite animation (Simply all defined frames).\n     *\n     * @param ctx  - The canvas context to draw to.\n     * @param x    - The X position in pixels to draw to the sprite at.\n     * @param y    - The Y position in pixels to draw to the sprite at.\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     */\n    public draw(ctx: CanvasRenderingContext2D, x: number, y: number, time: number = now()): void {\n        const frameIndex = this.calculateFrameIndex(time);\n        this.drawFrame(ctx, frameIndex, x, y);\n    }\n\n    /**\n     * Returns the layer with the given name.\n     *\n     * @param name - The layer name.\n     * @return The found layer. Null if none.\n     */\n    public getLayer(name: string): AsepriteLayerJSON | null {\n        return this.json.meta.layers?.find(layer => layer.name === name) ?? null;\n    }\n}\n","import { AppInfoJSON } from \"appinfo.json\";\nimport { Aseprite } from \"./Aseprite\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { loadImage } from \"./graphics\";\nimport { Sound } from \"./Sound\";\n\nconst assets = new Map<string, unknown>();\n\nexport interface AssetOptions {\n    map?: (asset: any) => unknown;\n}\n\nclass AssetRequest<\n        S extends string | string[] = string | string[],\n        A extends (S extends string ? unknown : unknown[]) = (S extends string ? unknown : unknown[])> {\n    constructor(\n        private readonly target: any,\n        private readonly propertyKey: string | symbol,\n        public readonly src: S,\n        private readonly options: AssetOptions\n    ) {}\n\n    public resolve(asset: A): void {\n        this.target[this.propertyKey] = this.options.map ? this.options.map(asset) : asset;\n    }\n}\n\nconst assetRequests: AssetRequest[] = [];\n\nexport function asset(src: string | string[], options: AssetOptions = {}): PropertyDecorator {\n    return (target: Object, propertyKey: string | symbol): void => {\n        assetRequests.push(new AssetRequest(target, propertyKey, src, options));\n    };\n}\n\nexport class Assets {\n    private async loadAsset(src: string): Promise<unknown> {\n        let asset = assets.get(src);\n\n        if (asset == null) {\n            if (src.endsWith(\".aseprite.json\")) {\n                asset = await Aseprite.load(\"assets/\" + src);\n            } else if (src.endsWith(\".font.json\")) {\n                asset = await BitmapFont.load(\"assets/\" + src);\n            } else if (src.endsWith(\".png\")) {\n                asset = await loadImage(src);\n            } else if (src.endsWith(\".mp3\")) {\n                asset = await Sound.load(\"assets/\" + src);\n            } else if (src.endsWith(\".ogg\")) {\n                asset = await Sound.load(\"assets/\" + src);\n            } else if (src === \"appinfo.json\") {\n                asset = await (await fetch(\"appinfo.json\")).json() as AppInfoJSON;\n            } else {\n                throw new Error(\"Unknown asset format: \" + src);\n            }\n\n            assets.set(src, asset);\n        }\n\n        return asset;\n    }\n\n    public async load(onProgress?: (total: number, loaded: number) => void): Promise<void> {\n        const total = assetRequests.length;\n        let loaded = 0;\n\n        if (onProgress) {\n            onProgress(total, loaded);\n        }\n\n        let request;\n\n        while ((request = assetRequests.pop()) != null) {\n            if (typeof request.src === \"string\") {\n                request.resolve(await this.loadAsset(request.src));\n            } else {\n                request.resolve(await Promise.all(request.src.map(src => this.loadAsset(src))));\n            }\n\n            loaded++;\n\n            if (onProgress) {\n                onProgress(total, loaded);\n            }\n        }\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { calculateVolume, rnd, rndItem } from \"./util\";\nimport { Conversation } from \"./Conversation\";\nimport conversation from \"../assets/dialog/bird.dialog.json\";\nimport { DOUBLE_JUMP_COLORS, GRAVITY, PLAYER_ACCELERATION_AIR } from \"./constants\";\nimport { entity } from \"./Entity\";\nimport { Environment } from \"./World\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { ParticleEmitter, valueCurves } from \"./Particles\";\nimport { RenderingLayer } from \"./Renderer\";\nimport { Sound } from \"./Sound\";\n\nenum BirdState {\n    WAITING_LEFT,\n    FLYING_RIGHT,\n    WAITING_RIGHT,\n    FLYING_LEFT\n}\n\nconst WAITING_TIME = 5;\nconst JUMP_INTERVAL = 0.3;\nconst MAX_SPEED = 4;\n\n@entity(\"bird\")\nexport class Bird extends NPC {\n    @asset(\"sprites/bird.aseprite.json\")\n    private static sprite: Aseprite;\n    @asset(\"sounds/jumping/jump_neutral.ogg\")\n    private static jumpSound: Sound;\n    private doubleJumpEmitter: ParticleEmitter;\n    private move: 0 | 1 | -1  = 1;\n    private minAltitude: number;\n    private jumpHeight = 1.5;\n    private waitTimer = 0;\n    private state = BirdState.WAITING_LEFT;\n    private jumpTimer = 0;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 28, 24);\n        this.minAltitude = y;\n        this.conversation = new Conversation(conversation, this);\n\n        this.doubleJumpEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 90, y: rnd(-1, 0) * 100 }),\n            color: () => rndItem(DOUBLE_JUMP_COLORS),\n            size: rnd(1, 2),\n            gravity: {x: 0, y: -120},\n            lifetime: () => rnd(0.4, 0.6),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n        this.setMaxVelocity(MAX_SPEED);\n    }\n\n    private isWaiting(): boolean {\n        return this.state === BirdState.WAITING_LEFT || this.state === BirdState.WAITING_RIGHT;\n    }\n\n    protected jump(): void {\n        this.jumpTimer = JUMP_INTERVAL;\n        this.setVelocityY(Math.sqrt(2 * this.jumpHeight * GRAVITY));\n        this.doubleJumpEmitter.setPosition(this.x, this.y + 20);\n        this.doubleJumpEmitter.emit(20);\n\n        const vol = calculateVolume(this.distanceToPlayer, 0.4);\n\n        if (vol > 0) {\n            Bird.jumpSound.setVolume(vol);\n            Bird.jumpSound.stop();\n            Bird.jumpSound.play();\n        }\n    }\n\n    protected canJump(): boolean {\n        return this.jumpTimer === 0;\n    }\n\n    protected updatePosition(newX: number, newY: number): void {\n        this.x = newX;\n        this.y = newY;\n\n        // Check collision with the environment and correct player position and movement\n        if (this.pullOutOfGround() !== 0 || this.pullOutOfCeiling() !== 0) {\n            this.setVelocityY(0);\n        }\n\n        if (this.pullOutOfWall() !== 0) {\n            this.setVelocityX(0);\n        }\n    }\n\n    private pullOutOfGround(): number {\n        let pulled = 0, col = 0;\n\n        if (this.getVelocityY() <= 0) {\n            const world = this.scene.world;\n            const height = world.getHeight();\n            col = world.collidesWith(this.x, this.y, [ this ], [ Environment.WATER ]);\n\n            while (this.y < height && col) {\n                pulled++;\n                this.y++;\n                col = world.collidesWith(this.x, this.y);\n            }\n        }\n\n        return pulled;\n    }\n\n    private pullOutOfCeiling(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        while (\n            this.y > 0\n            && world.collidesWith(\n                this.x, this.y + this.height,\n                [ this ],\n                [ Environment.PLATFORM, Environment.WATER ]\n            )\n        ) {\n            pulled++;\n            this.y--;\n        }\n\n        return pulled;\n    }\n\n    private pullOutOfWall(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        if (this.getVelocityX() > 0) {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x + this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x--;\n                pulled++;\n            }\n        } else {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x - this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x++;\n                pulled++;\n            }\n        }\n\n        return pulled;\n    }\n\n    private nextState(): void {\n        if (this.state === BirdState.FLYING_LEFT) {\n            this.state = BirdState.WAITING_LEFT;\n        } else {\n            this.state = this.state + 1;\n        }\n    }\n\n    public isReadyForConversation(): boolean | null {\n        const superResult = super.isReadyForConversation();\n        return (superResult && this.isWaiting());\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(Bird.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES, this.direction);\n        if (this.scene.showBounds) this.drawBounds();\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n        this.move = 0;\n\n        // Triggers\n        const triggerCollisions = this.scene.world.getTriggerCollisions(this);\n\n        if (this.jumpTimer > 0) {\n            this.jumpTimer -= dt;\n            if (this.jumpTimer < 0) {\n                this.jumpTimer = 0;\n            }\n        }\n\n        if ((this.state === BirdState.WAITING_LEFT || this.state === BirdState.WAITING_RIGHT) && !this.hasActiveConversation()) {\n            this.waitTimer += dt;\n            if (this.waitTimer >= WAITING_TIME) {\n                this.waitTimer = 0;\n                this.nextState();\n            }\n        }\n\n        if (this.state === BirdState.FLYING_RIGHT || this.state === BirdState.FLYING_LEFT) {\n            this.move = this.state === BirdState.FLYING_RIGHT ? 1 : -1;\n            if (this.y < this.minAltitude && this.canJump()) {\n                this.jump();\n            }\n\n            if (this.state === BirdState.FLYING_RIGHT && triggerCollisions.length > 0 && triggerCollisions.find(t => t.name === \"bird_nest_right\")) {\n                this.nextState();\n            }\n\n            if (this.state === BirdState.FLYING_LEFT && triggerCollisions.length > 0 && triggerCollisions.find(t => t.name === \"bird_nest_left\")) {\n                this.nextState();\n            }\n        }\n\n        // Bird acceleration\n        if (this.move !== 0) {\n            this.direction = this.move;\n            this.accelerateX(PLAYER_ACCELERATION_AIR * dt * this.move);\n        } else {\n            if (this.getVelocityX() > 0) {\n                this.decelerateX(PLAYER_ACCELERATION_AIR * dt);\n            } else {\n                this.decelerateX(-PLAYER_ACCELERATION_AIR * dt);\n            }\n        }\n\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { FontJSON } from \"*.font.json\";\nimport { loadImage } from \"./graphics.js\";\n\nconst CHAR_SPACING = 1;\n\nexport class BitmapFont {\n    private sourceImage: HTMLImageElement;\n    private canvas: HTMLCanvasElement;\n    private colorMap: Record<string, number>;\n    private charMap: string;\n    private charWidths: number[];\n    private compactablePrecursors: string[][];\n    private charStartPoints: number[];\n    private charCount: number;\n    private charReverseMap: Record<string, number>;\n    public charHeight!: number;\n\n    private constructor(\n        sourceImage: HTMLImageElement, colors: Record<string, string>, charMap: string,\n        charWidths: number[], compactablePrecursors: string[][], charMargin = 1\n    ) {\n        this.sourceImage = sourceImage;\n        this.canvas = document.createElement(\"canvas\");\n        this.colorMap = this.prepareColors(colors);\n        this.charMap = charMap;\n        this.charWidths = charWidths;\n        this.compactablePrecursors = compactablePrecursors;\n        this.charStartPoints = [];\n        this.charCount = charMap.length;\n        this.charReverseMap = {};\n\n        for (let i = 0; i < this.charCount; i++) {\n            this.charStartPoints[i] = (i === 0) ? 0 : this.charStartPoints[i - 1] + this.charWidths[i - 1] + charMargin;\n            const char = this.charMap[i];\n            this.charReverseMap[char] = i;\n        }\n    }\n\n    /**\n     * Loads the sprite from the given source.\n     *\n     * @param source - The URL pointing to the JSON file of the sprite.\n     * @return The loaded sprite.\n     */\n    public static async load(source: string): Promise<BitmapFont> {\n        const json = await (await fetch(source)).json() as FontJSON;\n        const baseURL = new URL(source, location.href);\n        const image = await loadImage(new URL(json.image, baseURL));\n        const characters = json.characterMapping.map(charDef => charDef.char).join(\"\");\n        const widths = json.characterMapping.map(charDef => charDef.width);\n        const compactablePrecursors = json.characterMapping.map(charDef => charDef.compactablePrecursors || []);\n\n        return new BitmapFont(image, json.colors, characters, widths, compactablePrecursors, json.margin);\n    }\n\n    private prepareColors(colorMap: { [x: string]: string; }): { [x: string]: number } {\n        const result: { [x: string]: number} = {};\n        const colors = Object.keys(colorMap);\n        const count = colors.length;\n        const w = this.canvas.width = this.sourceImage.width;\n        const h = this.sourceImage.height;\n        this.canvas.height = h * count;\n        this.charHeight = h;\n        const ctx = this.canvas.getContext(\"2d\")!;\n\n        // Fill with font\n        for (let i = 0; i < count; i++) {\n            result[colors[i]] = i;\n            ctx.drawImage(this.sourceImage, 0, h * i);\n        }\n\n        // Colorize\n        ctx.globalCompositeOperation = \"source-in\";\n\n        for (let i = 0; i < count; i++) {\n            ctx.fillStyle = colorMap[colors[i]];\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(0, h * i, w, h);\n            ctx.clip();\n            ctx.fillRect(0, 0, w, h * count);\n            ctx.restore();\n        }\n\n        ctx.globalCompositeOperation = \"source-over\";\n\n        return result;\n    }\n\n    private getCharIndex(char: string): number {\n        let charIndex = this.charReverseMap[char];\n\n        if (charIndex == null) {\n            // To signalize missing char, use last char, which is a not-def glyph\n            charIndex = this.charCount - 1;\n        }\n\n        return charIndex;\n    }\n\n    private drawCharacter(ctx: CanvasRenderingContext2D, char: number, color: string): void {\n        const colorIndex = this.colorMap[color];\n        const charIndex = (typeof char === \"number\") ? char : this.getCharIndex(char);\n        const charX = this.charStartPoints[charIndex], charY = colorIndex * this.charHeight;\n\n        ctx.drawImage(\n            this.canvas, charX, charY, this.charWidths[charIndex], this.charHeight,\n            0, 0, this.charWidths[charIndex], this.charHeight\n        );\n    }\n\n    public drawText(\n        ctx: CanvasRenderingContext2D, text: string, x: number, y: number, color: string, align = 0,\n        alpha = 1\n    ): void {\n        ctx.save();\n        ctx.translate(x, y);\n\n        // Ugly hack to correct text position to exact pixel boundary because Chrome renders broken character images\n        // when exactly between two pixels (Firefox doesn't have this problem).\n        if (ctx.getTransform) {\n            const transform = ctx.getTransform();\n            ctx.translate(\n                Math.round(transform.e) - transform.e,\n                Math.round(transform.f) - transform.f\n            );\n        }\n\n        text = \"\" + text;\n        ctx.globalAlpha *= alpha;\n\n        const { width } = this.measureText(text);\n        ctx.translate(-align * width, 0);\n\n        let precursorChar = null;\n\n        for (const currentChar of text) {\n            const index = this.getCharIndex(currentChar);\n            const spaceReduction = precursorChar && this.compactablePrecursors[index].includes(precursorChar) ? 1 : 0;\n            ctx.translate(-spaceReduction, 0);\n            this.drawCharacter(ctx, index, color);\n            ctx.translate(this.charWidths[index] + CHAR_SPACING, 0);\n            precursorChar = currentChar;\n        }\n\n        ctx.restore();\n    }\n\n    public measureText(text: string): { width: number, height: number } {\n        let width = 0;\n        let precursorChar = null;\n        for (const currentChar of text) {\n            const index = this.getCharIndex(currentChar);\n            const spaceReduction = precursorChar && this.compactablePrecursors[index].includes(precursorChar) ? 1 : 0;\n            width += this.charWidths[index] - spaceReduction + CHAR_SPACING;\n            precursorChar = currentChar;\n        }\n\n        if (text.length > 0) {\n            width -= CHAR_SPACING;\n        }\n\n        return { width, height: this.charHeight };\n    }\n\n    public drawTextWithOutline(\n        ctx: CanvasRenderingContext2D, text: string, xPos: number, yPos: number, textColor: string,\n        outlineColor: string, align = 0\n    ): void {\n        for (let yOffset = yPos - 1; yOffset <= yPos + 1; yOffset++) {\n            for (let xOffset = xPos - 1; xOffset <= xPos + 1; xOffset++) {\n                if (xOffset !== xPos || yOffset !== yPos) {\n                    this.drawText(ctx, text, xOffset, yOffset, outlineColor, align);\n                }\n            }\n        }\n\n        this.drawText(ctx, text, xPos, yPos, textColor, align);\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { Conversation } from \"./Conversation\";\nimport { entity } from \"./Entity\";\nimport { Environment } from \"./World\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\nimport { RenderingLayer } from \"./Renderer\";\nimport { Sound } from \"./Sound\";\n\n@entity(\"bone\")\nexport class Bone extends PhysicsEntity {\n    @asset(\"sprites/bone.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/throwing/success.mp3\")\n    private static successSound: Sound;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 20, 10);\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(Bone.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n    }\n\n    public isCarried(): boolean {\n        return this.scene.player.isCarrying(this);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        const player = this.scene.player;\n\n        if (!this.isCarried() && this.distanceTo(player) < 20) {\n            player.carry(this);\n        }\n\n        if (!this.isCarried() && this.scene.world.collidesWith(this.x, this.y - 5) === Environment.WATER) {\n            const vx = this.getVelocityX();\n            this.setVelocity(vx, 10);\n        }\n\n        if (Conversation.getGlobals()[\"$gotBoneQuest\"] && !this.isCarried() && this.distanceTo(this.scene.powerShiba) < 20) {\n            Bone.successSound.play();\n            this.scene.powerShiba.feed();\n            this.scene.removeGameObject(this);\n        }\n    }\n}\n","import { Bounds } from \"./Entity\";\nimport { clamp, isDev, rnd, shiftValue } from \"./util\";\nimport { Fire } from \"./Fire\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { ValueCurve, valueCurves } from \"./Particles\";\nimport { Vector2Like } from \"./graphics/Vector2\";\n\nexport interface CamFocus {\n    x: number;\n    y: number;\n    duration: number;\n    startTime: number;\n    endTime: number;\n    zoom: number;\n    rotation: number;\n    progress: number;\n    dead: boolean;\n    force: number;\n    curve: ValueCurve;\n    resolve?: Function;\n}\n\ninterface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\ntype OverBoundData = {\n    left: boolean;\n    right: boolean;\n    top: boolean;\n    bottom: boolean;\n};\n\nexport class Camera {\n    public x = 0;\n    public y = 0;\n    public zoom = 1;\n    public rotation = 0;\n    private focuses: CamFocus[] = [];\n    private time = 0;\n    private interpolationTime!: number;\n    private zoomingOut = false;\n    private currentBarTarget = 0;\n    private currentBarHeight = 0;\n    private bounds?: Bounds;\n\n    constructor(\n        protected scene: GameScene, private target: Vector2Like, interpolationTime = 0.5,\n        private barHeight = 0.1\n    ) {\n        if (interpolationTime > 1) {\n            throw new Error(\"Camera interpolation time may not exceed 1\");\n        }\n\n        this.interpolationTime = interpolationTime / 2;\n\n        if (isDev()) {\n            console.log(\"Dev mode, press “Tab” to zoom out & click somewhere to teleport there.\");\n            document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n            document.addEventListener(\"keyup\", this.handleKeyUp.bind(this));\n            this.scene.game.canvas.addEventListener(\"click\", this.handleClick.bind(this));\n        }\n\n        this.currentBarTarget = 0;\n        this.currentBarHeight = 0;\n        this.x = target.x;\n        this.y = target.y;\n    }\n\n    public setBounds(bounds: Bounds | undefined): void {\n        this.bounds = bounds;\n    }\n\n    public getBounds(): Bounds | undefined {\n        return this.bounds;\n    }\n\n    private handleKeyDown(e: KeyboardEvent): void {\n        if (e.key === \"Tab\") {\n            if (!e.repeat) {\n                this.zoomingOut = true;\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    }\n\n    private handleKeyUp(e: KeyboardEvent): void {\n        if (e.key === \"Tab\") {\n            this.zoomingOut = false;\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    }\n\n    private handleClick(e: MouseEvent): void {\n        if (this.zoomingOut) {\n            const rect = this.scene.game.canvas.getBoundingClientRect();\n            const cx = e.clientX - rect.x, cy = e.clientY - rect.y;\n            const px = cx / rect.width, py = cy / rect.height;\n            const worldRect = this.getVisibleRect();\n            const tx = worldRect.x + px * worldRect.width, ty = worldRect.y + (1 - py) * worldRect.height;\n\n            // Teleport player\n            this.scene.player.x = tx;\n            this.scene.player.y = ty;\n\n            this.scene.player.setVelocity(0, 0);\n            this.zoomingOut = false;\n        }\n    }\n\n    public getVisibleRect(x = this.x, y = this.y): Rectangle {\n        const cnv = this.scene.game.canvas;\n        const cw = cnv.width;\n        const ch = cnv.height;\n        const offx = cw / 2 / this.zoom;\n        const offy = ch / 2 / this.zoom;\n\n        return {\n            x: x - offx,\n            y: y - offy,\n            width: offx * 2,\n            height: offy * 2\n        };\n    }\n\n    public isPointVisible(x: number, y: number, radius = 0): boolean {\n        const visibleRect = this.getVisibleRect();\n\n        return (\n            x >= visibleRect.x - radius\n            && y >= visibleRect.y - radius\n            && x <= visibleRect.x + visibleRect.width + radius\n            && y <= visibleRect.y + visibleRect.height + radius\n        );\n    }\n\n    public setCinematicBar(target: number): void {\n        this.currentBarTarget = target;\n    }\n\n    private getBaseCameraTarget() {\n        // Base position always on target (player)\n        let xTarget = this.target.x;\n        let yTarget = this.target.y + 30;\n\n        if (this.bounds) {\n            const targetVisibleRect = this.getVisibleRect(xTarget, yTarget);\n\n            const overBounds: OverBoundData = {\n                left: (targetVisibleRect.x < this.bounds.x),\n                right: (targetVisibleRect.x + targetVisibleRect.width) > (this.bounds.x + this.bounds.width),\n                top: (targetVisibleRect.y + targetVisibleRect.height) > this.bounds.y,\n                bottom: targetVisibleRect.y < (this.bounds.y - this.bounds.height)\n            };\n\n            // Bound clip left / right\n            if (targetVisibleRect.width >= this.bounds.width) {\n                const visibleCenterX = targetVisibleRect.x + targetVisibleRect.width / 2;\n                const boundCenterX = this.bounds.x + this.bounds.width / 2;\n                const diff = boundCenterX - visibleCenterX;\n                xTarget += diff;\n            } else if (overBounds.left) {\n                const diff = this.bounds.x - targetVisibleRect.x;\n                xTarget += diff;\n            } else if (overBounds.right) {\n                const diff = (this.bounds.x + this.bounds.width) - (targetVisibleRect.x + targetVisibleRect.width);\n                xTarget += diff;\n            }\n\n            // Bound clip top / bottom\n            if (targetVisibleRect.height >= this.bounds.height) {\n                const visibleCenterY = (targetVisibleRect.y + targetVisibleRect.height) - targetVisibleRect.height / 2;\n                const boundCenterY = this.bounds.y - this.bounds.height / 2;\n                const diff = boundCenterY - visibleCenterY;\n                yTarget += diff;\n            } else if (overBounds.top) {\n                const diff = this.bounds.y - (targetVisibleRect.y + targetVisibleRect.height);\n                yTarget += diff;\n            } else if (overBounds.bottom) {\n                const diff = (this.bounds.y - this.bounds.height) - targetVisibleRect.y;\n                yTarget += diff;\n            }\n        }\n\n        return {\n            x: xTarget,\n            y: yTarget\n        };\n    }\n\n    public update(dt: number, time: number): void {\n        this.time = time;\n\n        // Base position always on target (player)\n        const baseCamTarget = this.getBaseCameraTarget();\n        this.x = baseCamTarget.x;\n        this.y = baseCamTarget.y;\n\n        // Cam Shake during apocalypse\n        if (this.scene.fire.isAngry() || this.scene.apocalypse) {\n            this.applyApocalypticShake(this.scene.fire);\n        }\n\n        this.zoom = this.zoomingOut ? 0.2 : 1;\n        this.rotation = 0;\n\n        // On top of that, apply cam focus(es)\n        for (const focus of this.focuses) {\n            this.updateAndApplyFocus(focus);\n        }\n\n        // Drop any focus that is done\n        this.focuses = this.focuses.filter(f => !f.dead);\n        // Update bar target towards goal\n        this.currentBarHeight = shiftValue(this.currentBarHeight, this.currentBarTarget, dt * 1.5);\n        // Reset bar to vanish automatically if not continuously set to 1\n        this.currentBarTarget = 0;\n    }\n\n    private applyApocalypticShake(shakeSource: Fire): void {\n        const dx = this.x - shakeSource.x, dy = this.y - shakeSource.y;\n        const dis = Math.sqrt(dx * dx + dy * dy);\n        const maxDis = 200;\n\n        if (dis < maxDis) {\n            const intensity = (shakeSource.intensity - 5) / 15;\n\n            if (intensity > 0) {\n                const shake = 5 * intensity * (1 - dis / maxDis) * (this.scene.player.playerConversation ? 0.5 : 1);\n                this.x += rnd(-1, 1) * shake;\n                this.y += rnd(-1, 1) * shake;\n            }\n        }\n    }\n\n    /**\n     * Returns true if cam target (player) currently has full attention, or is showing something else for the moment.\n     */\n    public isOnTarget(): boolean {\n        return this.focuses.length === 0;\n    }\n\n    /**\n     * Returns strength of camera focus on something other than the player. E.g. when camera focuses on some place to\n     * show the player, the focus force will be between 0 and 1 during interpolation and exactly 1 while fully focusing\n     * on that spot. This e.g. can be used for cinematic bars at top and bottom, scaling their height.\n     */\n    public getFocusForce(): number {\n        return this.focuses.reduce((a, b) => Math.max(a, b.force), 0);\n    }\n\n    public applyTransform(ctx: CanvasRenderingContext2D): void {\n        ctx.scale(this.zoom, this.zoom);\n        ctx.rotate(this.rotation);\n        ctx.translate(-this.x, this.y);\n    }\n\n    public focusOn(\n        duration: number, x: number, y: number, zoom = 1, rotation = 0,\n        curve = valueCurves.cos(this.interpolationTime)\n    ): Promise<void> {\n        const focus: CamFocus = {\n            x,\n            y,\n            duration,\n            zoom,\n            rotation,\n            startTime: this.time,\n            endTime: this.time + duration,\n            progress: 0,\n            dead: false,\n            force: 0,\n            curve\n        };\n\n        this.focuses.push(focus);\n\n        return new Promise((resolve, reject) => {\n            focus.resolve = resolve;\n            this.updateAndApplyFocus(focus);\n        });\n    }\n\n    public updateAndApplyFocus(focus: CamFocus): void {\n        focus.progress = clamp((this.time - focus.startTime) / focus.duration, 0, 1);\n        focus.dead = (focus.progress >= 1);\n\n        if (!focus.dead) {\n            // Fade in and out of focus using force lerping from 0 to 1 and back to 0 over time\n            const force = focus.force = focus.curve.get(focus.progress);\n\n            // Apply to camera state\n            const f1 = 1 - force;\n            this.x = f1 * this.x + force * focus.x;\n            this.y = f1 * this.y + force * focus.y;\n            const originalSize = 1 / this.zoom, targetSize = 1 / focus.zoom;\n            const currentSize = f1 * originalSize + force * targetSize;\n\n            this.zoom = 1 / currentSize;\n            this.rotation = f1 * this.rotation + force * focus.rotation;\n        } else {\n            if (focus.resolve) {\n                focus.resolve();\n                focus.resolve = undefined;\n            }\n        }\n    }\n\n    public addCinematicBarsToRenderer(force = this.getFocusForce()): void {\n        force = Math.max(force, this.getFocusForce(), this.currentBarHeight);\n\n        this.scene.renderer.add({\n            type: RenderingType.BLACK_BARS,\n            layer: RenderingLayer.BLACK_BARS,\n            color: \"black\",\n            height: this.barHeight,\n            force\n        });\n    }\n\n    public drawBars(ctx: CanvasRenderingContext2D, force = this.getFocusForce()): void {\n        force = Math.max(force, this.getFocusForce(), this.currentBarHeight);\n        ctx.save();\n        ctx.fillStyle = \"black\";\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        const f = 0.5 - 0.5 * Math.cos(Math.PI * force);\n        const h = ctx.canvas.height * this.barHeight * f;\n        ctx.fillRect(0, 0, ctx.canvas.width, h);\n        ctx.fillRect(0, ctx.canvas.height - h, ctx.canvas.width, h);\n        ctx.restore();\n    }\n}\n","import caveman from \"../assets/dialog/caveman.dialog.json\";\nimport { Conversation } from \"./Conversation\";\nimport type { DialogJSON } from \"*.dialog.json\";\nimport { FaceModes } from \"./Face\";\nimport fire0 from \"../assets/dialog/fire0.dialog.json\";\nimport fire1 from \"../assets/dialog/fire1.dialog.json\";\nimport fire2 from \"../assets/dialog/fire2.dialog.json\";\nimport fire3 from \"../assets/dialog/fire3.dialog.json\";\nimport fire4 from \"../assets/dialog/fire4.dialog.json\";\nimport flameboy1 from \"../assets/dialog/flameboy1.dialog.json\";\nimport flameboy2 from \"../assets/dialog/flameboy2.dialog.json\";\nimport { Game } from \"./Game\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport powershiba2 from \"../assets/dialog/powershiba2.dialog.json\";\nimport { Quest, QuestA, QuestATrigger, QuestB, QuestKey, QuestC } from \"./Quests\";\nimport seed1 from \"../assets/dialog/seed1.dialog.json\";\nimport shadowpresence1 from \"../assets/dialog/shadowpresence1.dialog.json\";\nimport shiba1 from \"../assets/dialog/shiba1.dialog.json\";\nimport shiba2 from \"../assets/dialog/shiba2.dialog.json\";\nimport shiba3 from \"../assets/dialog/shiba3.dialog.json\";\nimport shiba4 from \"../assets/dialog/shiba4.dialog.json\";\nimport shiba5 from \"../assets/dialog/shiba5.dialog.json\";\nimport { Signal } from \"./Signal\";\nimport spider1 from \"../assets/dialog/spider1.dialog.json\";\nimport stone1 from \"../assets/dialog/stone1.dialog.json\";\nimport stone2 from \"../assets/dialog/stone2.dialog.json\";\nimport stonedisciple1 from \"../assets/dialog/stonedisciple1.dialog.json\";\nimport stonedisciple2 from \"../assets/dialog/stonedisciple2.dialog.json\";\nimport tree0 from \"../assets/dialog/tree0.dialog.json\";\nimport tree1 from \"../assets/dialog/tree1.dialog.json\";\nimport tree2 from \"../assets/dialog/tree2.dialog.json\";\nimport { valueCurves } from \"./Particles\";\nimport wing1 from \"../assets/dialog/wing1.dialog.json\";\n\nexport type CampaignState = \"start\" | \"finished\";\n\nconst allDialogs: Record<string, DialogJSON> = {\n    \"caveman\": caveman,\n    \"fire0\": fire0,\n    \"fire1\": fire1,\n    \"fire2\": fire2,\n    \"fire3\": fire3,\n    \"fire4\": fire4,\n    \"stone1\": stone1,\n    \"stone2\": stone2,\n    \"stonedisciple1\": stonedisciple1,\n    \"stonedisciple2\": stonedisciple2,\n    \"seed1\": seed1,\n    \"tree0\": tree0,\n    \"tree1\": tree1,\n    \"tree2\": tree2,\n    \"shiba1\": shiba1,\n    \"shiba2\": shiba2,\n    \"shiba3\": shiba3,\n    \"shiba4\": shiba4,\n    \"shiba5\": shiba5,\n    \"powershiba2\": powershiba2,\n    \"spider1\": spider1,\n    \"flameboy1\": flameboy1,\n    \"flameboy2\": flameboy2,\n    \"wing1\": wing1,\n    \"shadowpresence1\": shadowpresence1,\n};\n\nexport enum CharacterAsset {\n    FEMALE, MALE\n}\n\nexport enum VoiceAsset {\n    FEMALE, MALE\n}\n\nexport class Campaign {\n    public onStatesChanged = new Signal<CampaignState[]>();\n    public states: CampaignState[] = [\"start\"];\n    public readonly quests = [\n        new QuestA(this),\n        new QuestB(this),\n        new QuestC(this)\n    ];\n    public gameScene?: GameScene | undefined;\n\n    public selectedCharacter = CharacterAsset.FEMALE;\n    public selectedVoice = VoiceAsset.FEMALE;\n\n    constructor(public game: Game) {}\n\n    public getQuest(key: QuestKey): Quest {\n        const ending = this.quests.find(ending => ending.key === key);\n        if (!ending) throw new Error(`Cannot find quest with key ${key}`);\n        return ending;\n    }\n\n    public toggleCharacterAsset(): void {\n        this.selectedCharacter = this.selectedCharacter === CharacterAsset.MALE ? CharacterAsset.FEMALE : CharacterAsset.MALE;\n    }\n\n    public toggleVoiceAsset(): void {\n        this.selectedVoice = this.selectedVoice === VoiceAsset.MALE ? VoiceAsset.FEMALE : VoiceAsset.MALE;\n    }\n\n    /**\n     * Init campaign. Assign Game Scene and enable all initial dialog trees\n     * @param gameScene Game Scene\n     */\n    public begin(gameScene: GameScene) {\n        this.gameScene = gameScene;\n\n        // Rest quest progress\n        this.quests.forEach(q => {\n            q.reset();\n        });\n\n        this.getQuest(QuestKey.A).trigger(QuestATrigger.JUST_ARRIVED);\n\n        // Setup initial NPC dialogs\n        this.runAction(\"enable\", null, [\"caveman\", \"caveman\"]);\n        this.runAction(\"enable\", null, [\"fire\", \"fire0\"]);\n        this.runAction(\"enable\", null, [\"tree\", \"tree0\"]);\n        this.runAction(\"enable\", null, [\"stone\", \"stone1\"]);\n        this.runAction(\"enable\", null, [\"stonedisciple\", \"stonedisciple1\"]);\n        this.runAction(\"enable\", null, [\"flameboy\", \"flameboy1\"]);\n        this.runAction(\"enable\", null, [\"wing\", \"wing1\"]);\n        this.runAction(\"enable\", null, [\"spider\", \"spider1\"]);\n        this.runAction(\"enable\", null, [\"shadowpresence\", \"shadowpresence1\"]);\n    }\n\n    public hasState(state: CampaignState) {\n        return this.states.includes(state);\n    }\n\n    public setStates(states: CampaignState[]) {\n        this.states = states;\n        this.onStatesChanged.emit(this.states);\n    }\n\n    public removeState(state: CampaignState) {\n        if (this.hasState(state)) {\n            this.states.splice(this.states.indexOf(state), 1);\n            this.onStatesChanged.emit(this.states);\n        }\n    }\n\n    public addState(state: CampaignState) {\n        if (!this.hasState(state)) {\n            this.states.push(state);\n            this.onStatesChanged.emit(this.states);\n        }\n    }\n\n    /**\n     * Run action is only allowed when active scene is GameScene\n     * @param action - action string\n     * @param npc    - targeted npc\n     * @param params - params consisting of string array\n     */\n    public runAction(action: string, npc?: NPC | null, params: string[] = []): void {\n        if (this.gameScene) {\n            switch (action) {\n                case \"angry\":\n                    npc?.face?.setMode(FaceModes.ANGRY);\n                    break;\n                case \"neutral\":\n                    npc?.face?.setMode(FaceModes.NEUTRAL);\n                    break;\n                case \"bored\":\n                    npc?.face?.setMode(FaceModes.BORED);\n                    break;\n                case \"amused\":\n                    npc?.face?.setMode(FaceModes.AMUSED);\n                    break;\n                case \"sad\":\n                    npc?.face?.setMode(FaceModes.SAD);\n                    break;\n                case \"zoomin\":\n                    this.gameScene.camera.zoom += 1;\n                    break;\n                case \"zoomout\":\n                    this.gameScene.camera.zoom -= 1;\n                    break;\n                case \"treezoom\":\n                    const forestPointer = this.gameScene.pointsOfInterest.find(poi => poi.name === \"forest\");\n\n                    if (forestPointer) {\n                        this.gameScene.camera.focusOn(\n                            8,\n                            forestPointer.x, forestPointer.y,\n                            1,\n                            0,\n                            valueCurves.cos(0.35)\n                        );\n                    }\n\n                    break;\n                case \"mountainzoom\":\n                    const mountainPointer = this.gameScene.pointsOfInterest.find(poi => poi.name === \"mountain\");\n\n                    if (mountainPointer) {\n                        this.gameScene.camera.focusOn(\n                            8,\n                            mountainPointer.x, mountainPointer.y,\n                            1,\n                            0,\n                            valueCurves.cos(0.35)\n                        );\n                    }\n\n                    break;\n                case \"riverzoom\":\n                    const riverPointer = this.gameScene.pointsOfInterest.find(poi => poi.name === \"river\");\n\n                    if (riverPointer) {\n                        this.gameScene.camera.focusOn(\n                            8,\n                            riverPointer.x, riverPointer.y,\n                            1,\n                            0,\n                            valueCurves.cos(0.35)\n                        );\n                    }\n\n                    break;\n                case \"crazyzoom\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.APOCALYPSE_STARTED);\n                    const duration = 12;\n\n                    this.gameScene.camera.focusOn(\n                        duration,\n                        this.gameScene.fire.x, this.gameScene.fire.y + 15,\n                        8,\n                        -2 * Math.PI, valueCurves.cubic\n                    ).then(() => this.gameScene!.beginApocalypse());\n\n                    this.gameScene.fire.conversation = null;\n                    this.gameScene.fireFuryEndTime = this.gameScene.gameTime + duration + 8;\n                    break;\n                case \"friendshipEnding\":\n                    this.gameScene.beginFriendshipEnding();\n                    break;\n                case \"talkedtofire\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.TALKED_TO_FIRE);\n                    break;\n                case \"giveBone\":\n                    Conversation.setGlobal(\"gaveBoneToPowerShiba\", \"true\");\n                    this.runAction(\"enable\", null, [\"shiba\", \"shiba3\"]);\n                    this.runAction(\"enable\", null, [\"powershiba\", \"powershiba2\"]);\n                    break;\n                case \"shibaNextState\":\n                    this.gameScene.shiba.nextState();\n                    break;\n                case \"talkedtotree\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.TALKED_TO_TREE);\n                    break;\n                case \"gotFireQuest\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_QUEST_FROM_FIRE);\n                    Conversation.setGlobal(\"gotFireQuest\", \"true\");\n                    this.runAction(\"enable\", null, [\"tree\", \"tree1\"]);\n                    break;\n                case \"endgameA\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.BEAT_GAME);\n                    this.getQuest(QuestKey.A).finish();\n                    this.gameScene.fire.conversation = null;\n                    this.gameScene.gameOver();\n                    break;\n                case \"endgameB\":\n                    this.getQuest(QuestKey.B).finish();\n                    this.gameScene.fire.conversation = null;\n                    this.gameScene.gameOver();\n                    break;\n                case \"endgameC\":\n                    this.getQuest(QuestKey.C).finish();\n                    this.gameScene.caveman.conversation = null;\n                    this.gameScene.gameOver();\n                    break;\n                case \"game\":\n                    this.addState(params[0] as any);\n                    break;\n                case \"enableRunning\":\n                    this.gameScene.player.enableRunning();\n                    break;\n                case \"doublejump\":\n                    this.gameScene.player.enableDoubleJump();\n                    break;\n                case \"multijump\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_MULTIJUMP);\n                    this.gameScene.player.enableMultiJump();\n                    break;\n                case \"friendship\":\n                    this.gameScene.player.enableFriendship();\n                    break;\n                case \"spawnseed\":\n                    this.gameScene.tree.spawnSeed();\n                    break;\n                case \"spawnwood\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.TREE_DROPPED_WOOD);\n                    this.gameScene.tree.spawnWood();\n                    break;\n                case \"talkedToStone\":\n                    if (this.getQuest(QuestKey.A).getHighestTriggerIndex() === QuestATrigger.PLANTED_SEED) {\n                        this.getQuest(QuestKey.A).trigger(QuestATrigger.TALKED_TO_STONE);\n                    }\n                    break;\n                case \"pickupstone\":\n                    this.gameScene.stone.pickUp();\n                    break;\n                case \"learnraindance\":\n                    this.gameScene.player.enableRainDance();\n                    break;\n                case \"talkedToFireWithWood\":\n                    if (this.getQuest(QuestKey.A).getHighestTriggerIndex() === QuestATrigger.GOT_WOOD) {\n                        this.getQuest(QuestKey.A).trigger(QuestATrigger.TALKED_TO_FIRE_WITH_WOOD);\n                    }\n                    break;\n                case \"dance\":\n                    setTimeout(() => {\n                        this.gameScene!.player.startDance(+params[0] || 1);\n                    }, 500);\n\n                    break;\n                case \"wakeupchest\":\n                    this.gameScene.mimic.nextState();\n                    break;\n                case \"enable\":\n                    const char = params[0], dialogName = params[1];\n\n                    const npcMap: Record<string, NPC> = {\n                        \"fire\": this.gameScene.fire,\n                        \"stone\": this.gameScene.stone,\n                        \"stonedisciple\": this.gameScene.stoneDisciple,\n                        \"tree\": this.gameScene.tree,\n                        \"seed\": this.gameScene.seed,\n                        \"flameboy\": this.gameScene.flameboy,\n                        \"wing\": this.gameScene.wing,\n                        \"caveman\": this.gameScene.caveman,\n                        \"shadowpresence\": this.gameScene.shadowPresence,\n                        \"shiba\": this.gameScene.shiba,\n                        \"powershiba\": this.gameScene.powerShiba\n                    };\n\n                    const targetNpc = npcMap[char];\n                    const dialog = allDialogs[dialogName];\n\n                    if (targetNpc && dialog) {\n                        targetNpc.conversation = new Conversation(dialog, targetNpc);\n                    }\n\n                    break;\n                case \"disable\":\n                    const char1 = params[0];\n\n                    const npcMap1: Record<string, NPC> = {\n                        \"fire\": this.gameScene.fire,\n                        \"stone\": this.gameScene.stone,\n                        \"stonedisciple\": this.gameScene.stoneDisciple,\n                        \"tree\": this.gameScene.tree,\n                        \"seed\": this.gameScene.seed,\n                        \"flameboy\": this.gameScene.flameboy,\n                        \"wing\": this.gameScene.wing,\n                        \"caveman\": this.gameScene.caveman,\n                        \"shadowpresence\": this.gameScene.shadowPresence,\n                        \"shiba\": this.gameScene.shiba,\n                        \"powershiba\": this.gameScene.powerShiba\n                    };\n\n                    const targetNpc1 = npcMap1[char1];\n\n                    if (targetNpc1) {\n                        targetNpc1.conversation = null;\n                    }\n\n                    break;\n            }\n        }\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { entity, Entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { RenderingLayer } from \"./Renderer\";\n\n@entity(\"campfire\")\nexport class Campfire extends Entity {\n    @asset(\"sprites/campfire.aseprite.json\")\n    private static sprite: Aseprite;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 14, 28, false);\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(\n            Campfire.sprite,\n            \"idle\",\n            this.x, this.y - 2,\n            RenderingLayer.ENTITIES\n        );\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n    }\n\n    public update(): void {}\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { RenderingLayer } from \"./Renderer\";\n\n@entity(\"caveman\")\nexport class Caveman extends NPC {\n    @asset(\"sprites/caveman.aseprite.json\")\n    private static sprite: Aseprite;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 18, 24);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(\n            Caveman.sprite,\n            \"idle\",\n            this.x, this.y,\n            RenderingLayer.ENTITIES,\n            this.direction\n        );\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { Conversation } from \"./Conversation\";\nimport conversation from \"../assets/dialog/chicken.dialog.json\";\nimport { entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { RenderingLayer } from \"./Renderer\";\n\n@entity(\"chicken\")\nexport class Chicken extends NPC {\n    @asset(\"sprites/chicken.aseprite.json\")\n    private static sprite: Aseprite;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 24, 18);\n\n        this.lookAtPlayer = false;\n        this.conversation = new Conversation(conversation, this);\n    }\n\n    public getInteractionText(): string {\n        if (!this.met) {\n            return \"Touch\";\n        } else {\n            return \"Talk\";\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(\n            Chicken.sprite,\n            \"idle\",\n            this.x, this.y,\n            RenderingLayer.ENTITIES,\n            this.direction\n        );\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { CollidableGameObject, GameScene } from \"./scenes/GameScene\";\nimport { entity } from \"./Entity\";\nimport { Environment } from \"./World\";\nimport { GameObjectProperties } from \"./MapInfo\";\nimport { ParticleEmitter, valueCurves } from \"./Particles\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\nimport { PIXEL_PER_METER } from \"./constants\";\nimport { RenderingLayer } from \"./Renderer\";\nimport { rnd, rndInt, timedRnd } from \"./util\";\n\n@entity(\"cloud\")\nexport class Cloud extends PhysicsEntity implements CollidableGameObject {\n    @asset(\"sprites/cloud3.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sprites/raindrop.png\")\n    private static raindrop: HTMLImageElement;\n\n    private startX: number;\n    private startY: number;\n    private targetX: number;\n    private targetY: number;\n    private velocity: number;\n\n    private rainEmitter: ParticleEmitter;\n    private raining = 0;\n    private isRainCloud = false;\n\n    public constructor(scene: GameScene, x: number, y: number, properties: GameObjectProperties, canRain = false) {\n        super(scene, x, y, 74, 5);\n        this.setFloating(true);\n        this.startX = this.targetX = x;\n        this.startY = this.targetY = y;\n        this.isRainCloud = canRain;\n        this.velocity = properties.velocity / PIXEL_PER_METER;\n\n        if (properties.direction === \"right\") {\n            this.targetX = x + properties.distance;\n            this.setVelocityX(this.velocity);\n        } else if (properties.direction === \"left\") {\n            this.targetX = x - properties.distance;\n            this.setVelocityX(-this.velocity);\n        } else if (properties.direction === \"up\") {\n            this.targetY = y + properties.distance;\n            this.setVelocityY(this.velocity);\n        } else if (properties.direction === \"down\") {\n            this.targetY = y - properties.distance;\n            this.setVelocityY(-this.velocity);\n        }\n\n        this.rainEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            offset: () => ({x: rnd(-1, 1) * 26, y: rnd(-1, 1) * 5}),\n            velocity: () => ({\n                x: this.getVelocityX() * PIXEL_PER_METER + rnd(-1, 1) * 5,\n                y: this.getVelocityY() * PIXEL_PER_METER - rnd(50, 80)\n            }),\n            color: () => Cloud.raindrop,\n            size: 4,\n            gravity: {x: 0, y: -100},\n            lifetime: () => rnd(0.7, 1.2),\n            alpha: 0.6,\n            alphaCurve: valueCurves.linear.invert()\n        });\n    }\n\n    public startRain(time: number = Infinity) {\n        this.raining = time;\n    }\n\n    public isRaining(): boolean {\n        return this.raining > 0;\n    }\n\n    public canRain(): boolean {\n        return this.isRainCloud;\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(\n            Cloud.sprite,\n            \"idle\",\n            this.x, this.y,\n            RenderingLayer.PLATFORMS\n        );\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        if (this.getVelocityY() > 0) {\n            if (this.y >= Math.max(this.startY, this.targetY)) {\n                this.y = Math.max(this.startY, this.targetY);\n                this.setVelocityY(-this.velocity);\n            }\n        } else if (this.getVelocityY() < 0) {\n            if (this.y <= Math.min(this.startY, this.targetY)) {\n                this.y = Math.min(this.startY, this.targetY);\n                this.setVelocityY(this.velocity);\n            }\n        }\n\n        if (this.getVelocityX() > 0) {\n            if (this.x >= Math.max(this.targetX, this.startX)) {\n                this.x = Math.max(this.targetX, this.startX);\n                this.setVelocityX(-this.velocity);\n            }\n        } else if (this.getVelocityX() < 0) {\n            if (this.x <= Math.min(this.startX, this.targetX)) {\n                this.x = Math.min(this.startX, this.targetX);\n                this.setVelocityX(this.velocity);\n            }\n        }\n\n        if (this.raining) {\n            this.raining -= dt;\n\n            if (this.raining <= 0) {\n                this.raining = 0;\n            } else {\n                if (timedRnd(dt, 0.1)) {\n                    this.rainEmitter.setPosition(this.x, this.y);\n                    this.rainEmitter.emit(rndInt(1, 4));\n                }\n            }\n        }\n    }\n\n    public collidesWith(x: number, y: number): number {\n        if (\n            x >= this.x - this.width / 2\n            && x <= this.x + this.width / 2\n            && y >= this.y\n            && y <= this.y + this.height\n        ) {\n            return Environment.PLATFORM;\n        }\n\n        return Environment.AIR;\n    }\n}\n","import { clamp, rndItem } from \"./util\";\nimport { getImageData } from \"./graphics\";\n\nexport class ColorGradient {\n    constructor(private mapping: (p: number) => number[]) {}\n\n    public get(p: number): number[] {\n        return this.mapping(clamp(p, 0, 0.9999999999));\n    }\n\n    public getCss(p: number): string {\n        const color = this.get(p);\n\n        return `rgba(${color[0]},${color[1]},${color[2]},${color[3]})`;\n    }\n\n    public static fromTable(table: number[][]): ColorGradient {\n        const items = table.length;\n        const grad = new ColorGradient((v) => {\n            const index = Math.floor(v * items);\n            return table[index];\n        });\n\n        return grad;\n    }\n\n    public static fromImage(img: HTMLImageElement): ColorGradient {\n        const data = getImageData(img);\n        const pixels = data.data;\n        const w = img.naturalWidth, h = img.naturalHeight;\n        let p = 0;\n\n        if (h === 1) {\n            // mapping each value to single unique color\n            const colors: number[][] = [];\n\n            for (let x = 0; x < w; x++) {\n                colors.push([pixels[p++], pixels[p++], pixels[p++], pixels[p++]]);\n            }\n\n            return ColorGradient.fromTable(colors);\n        } else {\n            // mapping each value to randomly selected color of given set\n            const colors: number[][][] = [];\n\n            for (let x = 0; x < w; x++) {\n                colors[x] = [];\n\n                for (let y = 0; y < h; y++) {\n                    const p = 4 * (x + w * y);\n                    colors[x].push([pixels[p], pixels[p + 1], pixels[p + 2], pixels[p + 3]]);\n                }\n            }\n\n            const items = w;\n\n            return new ColorGradient((v) => {\n                const index = Math.floor(v * items);\n                return rndItem(colors[index]);\n            });\n        }\n    }\n}\n","import { DialogJSON } from \"*.dialog.json\";\nimport { NPC } from \"./NPC\";\n\nexport interface Interaction {\n    npcLine: ConversationLine | null;\n    options: ConversationLine[];\n    spoiledOptions: ConversationLine[];\n}\n\n// Actions that shall be executed before an NPC talks, not after\nconst earlyActions = [\n    \"angry\",\n    \"sad\",\n    \"amused\",\n    \"neutral\",\n    \"bored\"\n];\n\nexport class Conversation {\n    private static globalVariables: Record<string, string> = {};\n    private states: string[];\n    private data: {[key: string]: ConversationLine[]};\n    private state!: string;\n    private stateIndex = 0;\n    private endConversation = false;\n    private localVariables: Record<string, string> = {};\n    private skippedLines = 0; // help variable to make goBack() work with skipped dialog lines due to conditions\n\n    constructor(json: DialogJSON, private readonly npc: NPC) {\n        this.states = Object.keys(json);\n        this.data = {};\n\n        for (const state of this.states) {\n            this.data[state] = json[state].map(line => new ConversationLine(line, this));\n        }\n\n        this.setState(\"entry\");\n        this.endConversation = false;\n    }\n\n    public setState(name = \"entry\"): void {\n        if (!this.states.includes(name)) {\n            throw new Error(\"State name \" + name + \" does not exist in conversation\");\n        }\n\n        this.state = name;\n        this.stateIndex = 0;\n    }\n\n    public getNextInteraction(): Interaction | null {\n        if (this.endConversation) {\n            this.endConversation = false;\n            return null;\n        }\n\n        this.skippedLines = 0;\n\n        const result: Interaction = {\n            npcLine: null,\n            options: [],\n            spoiledOptions: []\n        };\n\n        // Does NPC speak?\n        const line = this.getNextLine();\n\n        if (line == null) {\n            // Conversation is over without changing state or anything\n            return null;\n        } else {\n            if (line.isNpc) {\n                result.npcLine = line;\n            } else {\n                this.goBack(1 + this.skippedLines);\n            }\n        }\n\n        // Does Player react?\n        this.skippedLines = 0;\n        let option = this.getNextLine();\n\n        while (option && !option.isNpc) {\n            // TODO: Identify spoiled options (that don't lead to anything new for the player) and\n            //       sort accordingly.\n            result.options.push(option);\n            this.skippedLines = 0;\n            option = this.getNextLine();\n        }\n\n        if (option && !option.isNpc) {\n            this.goBack();\n        } else {\n            this.goBack(1 + this.skippedLines);\n        }\n\n        this.skippedLines = 0;\n\n        return result;\n    }\n\n    public runAction(action: string[]): void {\n        switch (action[0]) {\n            case \"end\":\n                this.endConversation = true;\n                break;\n            case \"set\":\n                this.setVariable(action[1], action[2]);\n                break;\n            default:\n                this.npc.scene.game.campaign.runAction(action[0], this.npc, action.slice(1));\n        }\n    }\n\n    private setVariable(name = \"\", value = \"true\"): void {\n        if (name.startsWith(\"$\")) {\n            // Global variable\n            Conversation.globalVariables[name] = value;\n        } else {\n            // Local variable\n            this.localVariables[name] = value;\n        }\n    }\n\n    public static setGlobal(varname: string, value = \"true\"): void {\n        if (!varname.startsWith(\"$\")) {\n            varname = \"$\" + varname;\n        }\n\n        Conversation.globalVariables[varname] = value;\n    }\n\n    public static getGlobals(): Record<string, string> {\n        return Conversation.globalVariables;\n    }\n\n    public static resetGlobals(): void {\n        Conversation.globalVariables = {};\n    }\n\n    private getVariable(name: string): string {\n        if (name.startsWith(\"$\")) {\n            return Conversation.globalVariables[name];\n        } else {\n            return this.localVariables[name];\n        }\n    }\n\n    private goBack(steps = 1): void {\n        if (steps <= 0) {\n            return;\n        }\n\n        this.stateIndex -= steps;\n        this.skippedLines = 0;\n    }\n\n    private getNextLine(ignoreDisabled = false): ConversationLine | null {\n        if (this.stateIndex >= this.data[this.state].length) {\n            return null;\n        }\n\n        const line = this.data[this.state][this.stateIndex++];\n\n        // console.log(line.condition);\n        if (line.condition && (!ignoreDisabled && !this.testCondition(line.condition))) {\n            this.skippedLines++;\n            return this.getNextLine(ignoreDisabled);\n        }\n\n        return line;\n    }\n\n    private testCondition(condition: string): boolean {\n        const self = this;\n        const subconditions = condition.split(\",\");\n        const result = subconditions.some(evaluateFragment);\n\n        return result;\n\n        function evaluateFragment(s: string): boolean {\n            if (s.startsWith(\"not \")) {\n                return !evaluateFragment(s.substr(4));\n            } else {\n                if (s.includes(\"!=\")) {\n                    const values = s.split(\"!=\").map(s => s.trim());\n                    return self.getVariable(values[0]) !== values[1];\n                } else if (s.includes(\"=\")) {\n                    const values = s.split(\"=\").map(s => s.trim());\n                    return self.getVariable(values[0]) === values[1];\n                } else if (s.includes(\">\")) {\n                    const values = s.split(\">\").map(s => s.trim());\n                    return parseFloat(self.getVariable(values[0])) > parseFloat(values[1]);\n                } else if (s.includes(\"<\")) {\n                    const values = s.split(\"<\").map(s => s.trim());\n                    return parseFloat(self.getVariable(values[0])) < parseFloat(values[1]);\n                }\n            }\n\n            // Variable name only\n            const v = self.getVariable(s.trim());\n            return v != null && v !== \"\" && v !== \"0\" && v !== \"false\";\n        }\n    }\n\n    public hasEnded(): boolean {\n        return this.endConversation;\n    }\n}\n\nconst MAX_CHARS_PER_LINE = 50;\n\nexport class ConversationLine {\n    public static OPTION_MARKER = \"►\";\n    public readonly line: string;\n    public readonly condition: string | null;\n    public readonly targetState: string | null;\n    public readonly actions: string[][];\n    public readonly isNpc: boolean;\n    private visited = false;\n\n    constructor(\n        public readonly full: string,\n        public readonly conversation: Conversation\n    ) {\n        this.isNpc = !full.startsWith(\"►\");\n        this.line = ConversationLine.extractText(full, this.isNpc);\n        this.condition = ConversationLine.extractCondition(full);\n        this.targetState = ConversationLine.extractState(full);\n        this.actions = ConversationLine.extractActions(full);\n        this.visited = false;\n    }\n\n    public executeBeforeLine(): void {\n        if (this.actions.length > 0) {\n            for (const action of this.actions) {\n                if (this.isEarlyAction(action[0])) {\n                    this.conversation.runAction(action);\n                }\n            }\n        }\n    }\n\n    public execute(): void {\n        this.visited = true;\n\n        if (this.targetState != null) {\n            this.conversation.setState(this.targetState);\n        }\n\n        if (this.actions.length > 0) {\n            for (const action of this.actions) {\n                if (!this.isEarlyAction(action[0])) {\n                    this.conversation.runAction(action);\n                }\n            }\n        }\n    }\n\n    public isEarlyAction(s: string): boolean {\n        return earlyActions.includes(s);\n    }\n\n    public wasVisited(): boolean {\n        return this.visited;\n    }\n\n    private static extractText(line: string, autoWrap = false): string {\n        // Remove player option sign\n        if (line.startsWith(ConversationLine.OPTION_MARKER)) { line = line.substr(1); }\n\n        // Remove conditions\n        if (line.trim().startsWith(\"[\") && line.includes(\"]\")) {\n            line = line.substr(line.indexOf(\"]\") + 1).trim();\n        }\n\n        // Remove actions and state changes\n        const atPos = line.indexOf(\"@\");\n        const exclPos = line.search(/\\![a-zA-Z]/);\n\n        if (atPos >= 0 || exclPos >= 0) {\n            const minPos = (atPos >= 0 && exclPos >= 0) ? Math.min(atPos, exclPos) : (atPos >= 0) ? atPos : exclPos;\n            line = line.substr(0, minPos).trim();\n        }\n\n        // Auto wrap to some character count\n        if (autoWrap) {\n            return ConversationLine.wrapString(line, MAX_CHARS_PER_LINE);\n        }\n\n        return line;\n    }\n\n    private static extractCondition(line: string): string | null {\n        const conditionString = line.match(/\\[[a-zA-Z0-9\\_\\<\\>\\!\\=\\$ ]+\\]/g);\n\n        if (conditionString && conditionString[0]) {\n            return conditionString[0].substr(1, conditionString[0].length - 2);\n        }\n\n        return null;\n    }\n\n    private static extractState(line: string): string | null {\n        const stateChanges = line.match(/(@[a-zA-Z0-9\\_]+)/g);\n\n        if (stateChanges && stateChanges.length > 0) {\n            const stateName = stateChanges[0].substr(1);\n            return stateName;\n        }\n\n        return null;\n    }\n\n    private static extractActions(line: string): string[][] {\n        let actions = line.match(/(\\![a-zA-Z][a-zA-Z0-9\\_\\$ ]*)+/g);\n        const result = [];\n\n        if (actions) {\n            actions = actions.join(\" \").split(\"!\").map(action => action.trim()).filter(s => s.length > 0);\n\n            for (const action of actions) {\n                const segments = action.split(\" \");\n                result.push(segments);\n            }\n        }\n\n        return result;\n    }\n\n    public static wrapString(s: string, charsPerLine: number): string {\n        let currentLength = 0, lastSpace = -1;\n\n        for (let i = 0; i < s.length; i++) {\n            const char = s[i];\n\n            if (char === \"\\n\") {\n                // New line\n                currentLength = 0;\n            } else {\n                if (char === \" \") {\n                    lastSpace = i;\n                }\n\n                currentLength++;\n\n                if (currentLength >= charsPerLine) {\n                    if (lastSpace >= 0) {\n                        // Add cut at last space\n                        s = s.substr(0, lastSpace) + \"\\n\" + s.substr(lastSpace + 1);\n                        currentLength = i - lastSpace;\n                        lastSpace = -1;\n                    } else {\n                        // Cut mid-word\n                        s = s.substr(0, i + 1) + \"\\n\" + s.substr(i + 1);\n                        currentLength = 0;\n                    }\n                }\n            }\n        }\n\n        return s;\n    }\n}\n","import { Conversation } from \"./Conversation\";\nimport { GameObjectProperties } from \"./MapInfo\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\n\nexport class ConversationProxy extends NPC {\n    public conversation: Conversation;\n\n    public constructor(scene: GameScene, x: number, y: number, properties: GameObjectProperties) {\n        super(scene, x, y, 16, 16);\n\n        this.conversation = this.generateConversation(this.prepareContent(properties.content));\n        this.scene.addGameObject(this);\n    }\n\n    private prepareContent(content?: string ): string[] {\n        if (!content) {\n            return [\"Nothing…\"];\n        }\n\n        return content.split(\":::\");\n    }\n\n    private generateConversation(lines: string[]): Conversation {\n        const json: Record<string, string[]> = { \"entry\": [] };\n\n        lines.forEach((line, index) => {\n            if (index === lines.length - 1) {\n                line += \" @entry !end\";\n            }\n\n            json.entry.push(line);\n        });\n\n        return new Conversation(json, this);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (this.scene.showBounds) this.drawBounds();\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(): void {\n        if (!this.hasActiveConversation()) {\n            this.scene.removeGameObject(this);\n        }\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { ControllerEvent } from \"./input/ControllerEvent\";\nimport { ControllerManager } from \"./input/ControllerManager\";\nimport { ControllerSpriteMap } from \"./input/ControllerFamily\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { Sound } from \"./Sound\";\nimport { ValueCurve, valueCurves } from \"./Particles\";\n\nexport class Dance {\n    @asset(\"sounds/dancing/success.mp3\")\n    private static successSound: Sound;\n\n    @asset(\"sounds/dancing/fail.mp3\")\n    private static failSound: Sound;\n\n    @asset(\"music/raindance.ogg\")\n    private static raindance_music: Sound;\n\n    @asset(\"music/dancing_queen.ogg\")\n    private static treedance_music: Sound;\n\n    @asset(\"sprites/dancing_ui_bar.png\")\n    private static bar: HTMLImageElement;\n\n    @asset(\"sprites/dancing_ui_indicator.png\")\n    private static indicator: HTMLImageElement;\n\n    @asset(\"sprites/dancing_ui_keys.aseprite.json\")\n    private static keys: Aseprite;\n\n    /** When the dance was created and visible to the player for the first time */\n    private openTime!: number;\n    /** Time of the first note, depends on openTime and warmupBeats */\n    private startTime!: number;\n    /** Progress time relative to startTime. So starts out negative during warmup. */\n    private progress = 0;\n    private duration: number;\n    private currentKey = \"\";\n    private currentDistanceToIdealTime = 0;\n    private allKeys = [\"1\", \"2\"];\n    private keys: string[];\n    private alphaCurve: ValueCurve;\n    private mistakes = 0;\n    private lastMistake = 0;\n    private lastSuccess = 0;\n    private performance: Record<string, boolean>[] = [];\n    private currentIndex = 0;\n    private success = false;\n\n    constructor(\n        private scene: GameScene,\n        private x: number,\n        private y: number,\n        private bpm = 128,\n        keys = \"\", // can contain \"1\" or \"2\" for single keys, or \"3\" for both at once\n        private warmupBeats = 8,\n        private allowedMistakes = 3,\n        private timeTolerance = 0.75,\n        private readonly withMusic = true,\n        private readonly musicIndex = 1 // 0 tree-dance, 1 for raindance\n    ){\n        this.duration = keys.length;\n        this.keys = [];\n        this.performance = [];\n\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            this.keys[i] = key === \" \" ? \"\" : key === \"3\" ? \"12\" : key;\n            this.performance[i] = {};\n        }\n\n        this.begin();\n        this.alphaCurve = valueCurves.cos(0.15);\n    }\n\n    public wasSuccessful(): boolean {\n        return this.success;\n    }\n\n    public hasStarted(): boolean {\n        return this.progress > 0;\n    }\n\n    public getTimeSinceLastMistake(): number {\n        return this.progress - this.lastMistake;\n    }\n\n    public getTimeSinceLastSuccess(): number {\n        return this.progress - this.lastSuccess;\n    }\n\n    private begin(): void {\n        this.openTime = this.scene.gameTime;\n        this.startTime = this.openTime + this.warmupBeats / this.bpm * 60;\n        this.currentKey = \"\";\n        this.currentDistanceToIdealTime = 0;\n        this.mistakes = 0;\n        this.lastMistake = -Infinity;\n        this.lastSuccess = -Infinity;\n        this.currentIndex = 0;\n        this.performance = this.performance.map(() => ({}));\n        this.success = false;\n        Dance.raindance_music.stop();\n        Dance.raindance_music.setVolume(0);\n        Dance.treedance_music.stop();\n        Dance.treedance_music.setVolume(0);\n    }\n\n    public setPosition(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n    }\n\n    // Called by parent\n    public handleButtonDown(e: ControllerEvent): void {\n        if (!e.repeat && this.hasStarted()) {\n            const key = e.isPlayerDance1 ? \"1\" : \"2\";\n            if (this.allKeys.indexOf(key) >= 0) {\n                if (this.currentKey.includes(key)) {\n                    if (this.currentDistanceToIdealTime <= this.timeTolerance) {\n                        this.keySuccess(key);\n                        return;\n                    }\n                }\n\n                const nxt = this.currentIndex + 1;\n\n                if (this.keys[nxt] && this.keys[nxt].includes(key)) {\n                    if (this.progress - (nxt + 0.5) < this.timeTolerance) {\n                        this.keySuccess(key, nxt);\n                        return;\n                    }\n                }\n\n                this.keyFailure(key);\n            }\n        }\n    }\n\n    private keySuccess(key: string, index = this.currentIndex): void {\n        for (const char of key) {\n            if (index === this.currentIndex) {\n                this.currentKey = this.currentKey.replace(char, \"\");\n            }\n\n            this.performance[index][char] = true;\n        }\n        if (index === this.currentIndex && this.currentKey.length === 0 || this.keys[index].length === 0) {\n            this.lastSuccess = this.progress;\n            Dance.successSound.stop();\n        }\n    }\n\n    private keyFailure(key: string): void {\n        if (!this.currentKey.includes(key)) {\n            this.registerMistake();\n            Dance.failSound.play();\n        }\n    }\n\n    private keyMissed(key: string): void {\n        if (this.performance[this.currentIndex]) {\n            for (const char of key) {\n                this.performance[this.currentIndex][char] = false;\n            }\n        }\n\n        this.registerMistake();\n    }\n\n    private registerMistake(): void {\n        this.mistakes++;\n        this.lastMistake = this.progress;\n        Dance.failSound.play();\n\n        if (this.mistakes > this.allowedMistakes) {\n            this.loseGame();\n        }\n    }\n\n    private loseGame(): void {\n        // Simply reset for now\n        this.begin();\n    }\n\n    public update(): boolean {\n        const time = this.scene.gameTime - this.startTime;\n        this.progress = time * this.bpm / 60;\n        const prevIndex = this.currentIndex;\n        this.currentIndex = Math.floor(this.progress);\n        this.updateMusic();\n\n        // Next key?\n        if (this.currentIndex > prevIndex) {\n            // Missed last one?\n            if (this.currentKey.length > 0) {\n                this.keyMissed(this.currentKey);\n                this.currentKey = \"\";\n                return false;\n            }\n\n            // Proceed\n            this.currentKey = this.keys[this.currentIndex] || \"\";\n\n            for (const char of this.currentKey) {\n                if (this.performance[this.currentIndex] && this.performance[this.currentIndex][char]) {\n                    this.currentKey = this.currentKey.replace(char, \"\");\n                }\n            }\n        }\n\n        if (this.progress >= this.duration) {\n            // Done! Success! Yeah!\n            this.success = true;\n            this.resetMusic();\n            return true;\n        }\n\n        if (this.currentKey) {\n            this.currentDistanceToIdealTime = Math.abs(this.progress - (this.currentIndex + 0.5));\n        } else {\n            this.currentDistanceToIdealTime = 0;\n        }\n\n        return false;\n    }\n\n    private updateMusic(): void {\n        if (!this.withMusic) {\n            return;\n        }\n\n        if (this.progress < 0 && !Dance.raindance_music.isPlaying()) {\n            const fade = -this.progress / this.warmupBeats;\n            this.scene.fadeActiveBackgroundTrack(fade);\n        } else {\n            // own music paused\n            if (this.musicIndex === 0 && !Dance.treedance_music.isPlaying()) {\n                Dance.treedance_music.setVolume(0.8);\n                Dance.treedance_music.play();\n                GameScene.bgm1.setVolume(0);\n                GameScene.bgm2.setVolume(0);\n            }\n\n            if (this.musicIndex === 1 && !Dance.raindance_music.isPlaying()) {\n                Dance.raindance_music.setVolume(0.8);\n                Dance.raindance_music.play();\n                GameScene.bgm1.setVolume(0);\n                GameScene.bgm2.setVolume(0);\n            }\n        }\n    }\n\n    public resetMusic(): void {\n        Dance.raindance_music.stop();\n        Dance.treedance_music.stop();\n        this.scene.resetMusicVolumes();\n    }\n\n    public addDanceToRenderQueue(): void {\n        this.scene.renderer.add({\n            type: RenderingType.DANCE,\n            layer: RenderingLayer.UI,\n            dance: this\n        });\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const controller: ControllerSpriteMap = ControllerManager.getInstance().controllerSprite;\n        ctx.save();\n        ctx.translate(this.x, -this.y);\n\n        // Key Bar\n        const w = 100;\n        const h = 18;\n        const w2 = w / 2;\n        const h2 = h / 2;\n\n        ctx.drawImage(Dance.bar, Dance.bar.width / -2, 1 + Dance.bar.height / -2);\n\n        // Feedback\n        if (this.progress - this.lastMistake < 1) {\n            ctx.fillStyle = \"red\";\n            ctx.globalAlpha = (1 - this.progress + this.lastMistake) * 0.6;\n            ctx.fillRect(-w2 + 2, -h2 + 1, w - 4, h);\n        }\n\n        if (this.progress - this.lastSuccess < 1) {\n            ctx.fillStyle = \"green\";\n            ctx.globalAlpha = (1 - this.progress + this.lastSuccess) * 0.1;\n            ctx.fillRect(-w2 + 2, -h2 + 1, w - 4, h);\n        }\n\n        // Upcoming keys\n        ctx.globalAlpha = 1;\n        ctx.textAlign = \"center\";\n        const sweetX = w2 - 16;\n        const y1 = -8;\n        const y2 = 1;\n        ctx.fillStyle = \"black\";\n\n        for (let i = Math.floor(this.progress) - 2; i < this.progress + 8; i++) {\n            const keys = this.keys[i];\n\n            if (keys) {\n                const diff = i - this.progress;\n                const x = sweetX - diff * 20 - 6;\n                const xp = (x - (-w2)) / w;\n                const alpha = this.alphaCurve.get(xp);\n                ctx.globalAlpha = alpha;\n\n                if (keys.includes(\"1\")) {\n                    ctx.strokeStyle = \"#ff8010\";\n\n                    if (this.performance[i][\"1\"] != null) {\n                        ctx.fillStyle = this.performance[i][\"1\"] ? \"#70F070\" : \"#F06060\";\n                        ctx.fillRect(x - 4, y1, 9, 9);\n                    } else {\n                        Dance.keys.drawTag(\n                            ctx,\n                            `${controller}-dance1`,\n                            x + Dance.keys.width / -2, y1\n                        );\n                    }\n                }\n\n                if (keys.includes(\"2\")) {\n                    ctx.strokeStyle = \"blue\";\n\n                    if (this.performance[i][\"2\"] != null) {\n                        ctx.fillStyle = this.performance[i][\"2\"] ? \"#70F070\" : \"#F06060\";\n                        ctx.fillRect(x - 4, y2, 9, 9);\n                    } else {\n                        Dance.keys.drawTag(\n                            ctx,\n                            `${controller}-dance2`,\n                            x + Dance.keys.width / -2, y2\n                        );\n                    }\n                }\n            }\n        }\n\n        // Sweet spot\n        ctx.globalAlpha = 1;\n        ctx.drawImage(Dance.indicator, sweetX - 8, 1 + Dance.indicator.height / -2);\n        ctx.drawImage(Dance.indicator, sweetX + 4, 1 + Dance.indicator.height / -2);\n        ctx.restore();\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { RenderingLayer } from \"./Renderer\";\n\nexport class DialoguePrompt {\n    @asset(\"sprites/dialogue.aseprite.json\")\n    private static sprite: Aseprite;\n\n    private scene: GameScene;\n    private x: number;\n    private y: number;\n    private timeAlive = 0;\n    private floatAmount = 2;\n    private floatSpeed = 5;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        this.scene = scene;\n        this.x = x;\n        this.y = y;\n    }\n\n    public draw(): void {\n        const floatOffsetY = Math.sin(this.timeAlive * this.floatSpeed) * this.floatAmount;\n\n        this.scene.renderer.addAseprite(\n            DialoguePrompt.sprite,\n            \"idle\",\n            this.x, this.y - floatOffsetY,\n            RenderingLayer.ENTITIES\n        );\n    }\n\n    public update(dt: number, anchorX: number, anchorY: number): void {\n        this.timeAlive += dt;\n        this.x = anchorX;\n        this.y = anchorY;\n    }\n}\n","import { Animator } from \"./Animator\";\nimport { GameObject, GameScene } from \"./scenes/GameScene\";\nimport { GameObjectProperties } from \"./MapInfo\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\n\nexport interface EntityDistance {\n    source: Entity;\n    target: Entity;\n    distance: number;\n}\n\nexport type Bounds = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n};\n\ntype EntityConstructor = new (scene: GameScene, x: number, y: number, properties: GameObjectProperties) => Entity;\n\nconst entities = new Map<string, EntityConstructor>();\n\nexport function entity(name: string): (target: EntityConstructor) => void {\n    return (type: EntityConstructor) => {\n        entities.set(name, type);\n    };\n}\n\nexport function createEntity(\n    name: string, scene: GameScene, x: number, y: number, properties: GameObjectProperties\n): Entity {\n    const constructor = entities.get(name);\n\n    if (!constructor) {\n        throw new Error(\"Entity not found: \" + name);\n    }\n\n    return new constructor(scene, x, y, properties);\n}\n\nexport abstract class Entity implements GameObject {\n    protected timeAlive = 0;\n    protected animator = new Animator(this);\n\n    constructor(\n        public scene: GameScene,\n        public x: number,\n        public y: number,\n        public width = 0,\n        public height = 0,\n        public isTrigger = true\n    ) {}\n\n    abstract draw(ctx: CanvasRenderingContext2D): void;\n\n    public update(dt: number): void {\n        this.timeAlive += dt;\n    }\n\n    public distanceTo(entity: Entity): number {\n        const a = this.x - entity.x;\n        const b = this.y - entity.y;\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    public get distanceToPlayer(): number {\n        return this.distanceTo(this.scene.player);\n    }\n\n    protected getClosestEntityInRange(range: number): Entity | null {\n        const sortedEntityDistances = this.getEntitiesInRange(range).sort(\n            (a, b ) => { return a.distance - b.distance; }\n        );\n\n        if (sortedEntityDistances[0]) {\n            return sortedEntityDistances[0].target;\n        } else {\n            return null;\n        }\n    }\n\n    protected getEntitiesInRange(range: number): EntityDistance[] {\n        const entitiesInRange: EntityDistance[] = [];\n\n        this.scene.gameObjects.forEach(gameObject => {\n            if (gameObject instanceof Entity && gameObject !== this) {\n                const distance = this.distanceTo(gameObject);\n\n                if (distance < range) {\n                    entitiesInRange.push({source: this, target: gameObject, distance});\n                }\n            }\n        });\n\n        return entitiesInRange;\n    }\n\n    protected getClosestEntity(): Entity {\n        const entitiesInRange: EntityDistance[] = [];\n\n        this.scene.gameObjects.forEach(gameObject => {\n            if (gameObject instanceof Entity && gameObject !== this) {\n                const distance = this.distanceTo(gameObject);\n                entitiesInRange.push({source: this, target: gameObject, distance});\n            }\n        });\n\n        entitiesInRange.sort((a, b ) => { return a.distance - b.distance; });\n\n        return entitiesInRange[0].target;\n    }\n\n    public getBounds(margin = 0): Bounds {\n        const width = this.width + (margin * 2);\n        const height = this.height + (margin * 2);\n        const x = this.x - (this.width / 2) - margin;\n        const y = this.y - -this.height + margin;\n        return { x, y, width, height };\n    }\n\n    protected drawBounds(): void {\n        this.scene.renderer.add({\n            type: RenderingType.RECT,\n            layer: RenderingLayer.DEBUG,\n            position: {\n                x: this.getBounds().x,\n                y: -this.getBounds().y\n            },\n            lineColor: \"red\",\n            dimension: {\n               width: this.getBounds().width,\n               height: this.getBounds().height\n            }\n        });\n    }\n\n    /**\n     * Checks wether this entity is currently colliding with the provided named trigger.\n     * @param triggerName the trigger name to check against.\n     */\n    protected isCollidingWithTrigger(triggerName: string): boolean {\n        const collisions = this.scene.world.getTriggerCollisions(this);\n\n        if (collisions.length === 0) {\n            return false;\n        }\n\n        return collisions.findIndex(o => o.name === triggerName) > -1;\n    }\n\n    public remove(): void {\n        this.scene.removeGameObject(this);\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\n\nexport enum FaceModes {\n    BLINK = \"blink\",\n    NEUTRAL = \"neutral\",\n    ANGRY = \"angry\",\n    BORED = \"bored\",\n    AMUSED = \"amused\",\n    SAD = \"sad\",\n    DISGUSTED = \"disgusted\"\n}\n\nexport enum EyeType {\n    STANDARD = 0,\n    TREE = 1,\n    STONE = 2,\n    FLAMEBOY = 3,\n    STONEDISCIPLE = 4\n}\n\nexport class Face {\n    @asset([\n        \"sprites/eyes/standard.aseprite.json\",\n        \"sprites/eyes/tree.aseprite.json\",\n        \"sprites/eyes/stone.aseprite.json\",\n        \"sprites/eyes/flameboy.aseprite.json\",\n        \"sprites/eyes/stonedisciple.aseprite.json\",\n    ])\n    private static sprites: Aseprite[];\n\n    private mode = FaceModes.NEUTRAL;\n    private direction = 1; // 1 = right, -1 = left\n\n    constructor(\n        private scene: GameScene,\n        private owner: NPC,\n        private eyeType: EyeType,\n        private offX = 0,\n        private offY = 20\n    ) {}\n\n    public setMode(mode: FaceModes): void {\n        this.mode = mode;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const sprite = Face.sprites[this.eyeType];\n\n        this.scene.renderer.add({\n            type: RenderingType.ASEPRITE,\n            layer: RenderingLayer.ENTITIES,\n            asset: sprite,\n            scale: {\n                x: this.direction,\n                y: 1\n            },\n            translation: {\n                x: this.owner.x + this.offX,\n                y: -this.owner.y - this.offY\n            },\n            position: {\n                x: -sprite.width >> 1,\n                y: -sprite.height\n            },\n            animationTag: this.mode,\n            time: this.scene.gameTime * 1000\n        });\n    }\n\n    public toggleDirection(direction = this.direction > 0 ? -1 : 1): void {\n        if (direction !== this.direction) {\n            this.direction = direction;\n        }\n    }\n    public setDirection(direction: number): void {\n        this.direction = direction;\n    }\n}\n","import { asset } from \"./Assets\";\nimport { entity } from \"./Entity\";\nimport { EyeType, Face, FaceModes } from \"./Face\";\nimport { FireGfx } from \"./FireGfx\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { ParticleEmitter, valueCurves } from \"./Particles\";\nimport { PIXEL_PER_METER } from \"./constants\";\nimport { QuestATrigger, QuestKey } from \"./Quests\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { rnd, rndInt, shiftValue } from \"./util\";\nimport { ShibaState } from \"./Shiba\";\nimport { Sound } from \"./Sound\";\nimport { SoundEmitter } from \"./SoundEmitter\";\nimport { Wood } from \"./Wood\";\n\nexport const SHRINK_SIZE = 2;\n\nexport enum FireState {\n    IDLE,\n    ANGRY,\n    BEING_PUT_OUT,\n    PUT_OUT\n}\n\n@entity(\"fire\")\nexport class Fire extends NPC {\n    @asset(\"sprites/smoke.png\")\n    private static smokeImage: HTMLImageElement;\n\n    @asset(\"sprites/steam.png\")\n    private static steamImage: HTMLImageElement;\n\n    @asset(\"sounds/fire/fire.ogg\")\n    private static fireAmbience: Sound;\n    private soundEmitter: SoundEmitter;\n\n    public intensity = 5;\n\n    public state = FireState.IDLE;\n\n    public angry = false; // fire will be angry once wood was fed\n\n    public beingPutOut = false;\n\n    public growthTarget = 5;\n\n    public growth = 1;\n\n    private averageParticleDelay = 0.1;\n    private averageSteamDelay = 0.05;\n\n    private isVisible = true;\n\n    private fireGfx = new FireGfx();\n\n    private sparkEmitter: ParticleEmitter;\n    private smokeEmitter: ParticleEmitter;\n    private steamEmitter: ParticleEmitter;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 1.5 * PIXEL_PER_METER, 1.85 * PIXEL_PER_METER);\n\n        this.soundEmitter = new SoundEmitter(this.scene, this.x, this.y, Fire.fireAmbience, 0.7, 0.2);\n\n        this.smokeEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            offset: () => ({ x: rnd(-1, 1) * 3 * this.intensity, y: rnd(2) * this.intensity }),\n            velocity: () => ({ x: rnd(-1, 1) * 15, y: 4 + rnd(3) }),\n            color: () => Fire.smokeImage,\n            size: () => rndInt(24, 32),\n            gravity: {x: 0, y: 8},\n            lifetime: () => rnd(5, 8),\n            alpha: () => rnd(0.2, 0.45),\n            angleSpeed: () => rnd(-1, 1) * 1.5,\n            blendMode: \"source-over\",\n            alphaCurve: valueCurves.cos(0.1, 0.5),\n            breakFactor: 0.85\n        });\n\n        this.steamEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x + 10, y: this.y},\n            offset: () => ({ x: rnd(-1, 1) * 3, y: 0 }),\n            velocity: () => ({ x: rnd(-1, 2) * 5, y: 50 + rnd(3) }),\n            color: () => Fire.steamImage,\n            size: () => rndInt(12, 18),\n            gravity: {x: 0, y: 8},\n            lifetime: () => rnd(1, 3),\n            alpha: () => rnd(0.5, 0.8),\n            angleSpeed: () => rnd(-1, 1) * 3,\n            blendMode: \"source-over\",\n            alphaCurve: valueCurves.cos(0.1, 0.5),\n            renderingLayer: RenderingLayer.ENTITIES,\n            zIndex: 1,\n            breakFactor: 0.5\n        });\n\n        this.sparkEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 30, y: rnd(50, 100) }),\n            color: () => FireGfx.gradient.getCss(rnd() ** 0.5),\n            size: 2,\n            gravity: {x: 0, y: -100},\n            lifetime: () => rnd(1, 1.5),\n            blendMode: \"screen\",\n            alpha: () => rnd(0.3, 1),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n\n        this.face = new Face(scene, this, EyeType.STANDARD, 0, 6);\n    }\n\n    public showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() === QuestATrigger.JUST_ARRIVED ||\n            (\n                this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() >= QuestATrigger.GOT_WOOD &&\n                this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.TALKED_TO_FIRE_WITH_WOOD\n            ) ||\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() === QuestATrigger.THROWN_WOOD_INTO_FIRE ||\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() === QuestATrigger.BEAT_FIRE\n        );\n    }\n\n    public isRendered(): boolean {\n        return this.isVisible;\n    }\n\n    public isAngry(): boolean {\n        return this.state === FireState.ANGRY;\n    }\n\n    public isBeingPutOut(): boolean {\n        return this.state === FireState.BEING_PUT_OUT;\n    }\n\n    public isPutOut(): boolean {\n        return this.state === FireState.PUT_OUT;\n    }\n\n    public setState(state: FireState): void {\n        this.state = state;\n        if (state === FireState.BEING_PUT_OUT || state === FireState.PUT_OUT) {\n            Fire.fireAmbience.stop();\n        }\n    }\n\n    public drawToCanvas(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.translate(this.x, -this.y);\n        ctx.scale(this.intensity / 5, this.intensity / 5);\n        this.fireGfx.draw(ctx, 0, 0);\n\n        ctx.restore();\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (!this.isVisible) {\n            return;\n        }\n\n        this.scene.renderer.add({ type: RenderingType.FIRE, layer: RenderingLayer.ENTITIES, entity: this });\n        this.drawFace(ctx);\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        if (this.thinkBubble) {\n            this.thinkBubble.draw(ctx);\n        }\n\n        this.speechBubble.draw(ctx);\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n    }\n\n    public update(dt: number): void {\n        if (this.state === FireState.ANGRY && !this.beingPutOut) {\n            this.face?.setMode(FaceModes.ANGRY);\n        } else if (this.state === FireState.BEING_PUT_OUT) {\n            this.face?.setMode(FaceModes.DISGUSTED);\n        }\n\n        if (this.intensity !== this.growthTarget) {\n            this.intensity = shiftValue(this.intensity, this.growthTarget, this.growth * dt);\n        }\n\n        if (\n            this.scene.friendshipCutscene\n            && this.scene.shiba.getState() === ShibaState.KILLING_FIRE\n            && this.intensity <= SHRINK_SIZE\n        ) {\n            this.scene.shiba.nextState();\n        }\n\n        if (!this.scene.camera.isPointVisible(this.x, this.y, 200)) {\n            this.isVisible = false;\n            return;\n        }\n\n        this.isVisible = true;\n\n        if (!this.isBeingPutOut() && !this.isPutOut()) {\n            let particleChance = dt - rnd() * this.averageParticleDelay;\n\n            while (particleChance > 0) {\n                if (rnd() < 0.5) {\n                    this.sparkEmitter.emit();\n                }\n\n                if (rnd() < 0.32) {\n                    this.smokeEmitter.emit();\n                }\n\n                particleChance -= rnd() * this.averageParticleDelay;\n            }\n\n            this.soundEmitter.update();\n        }\n\n        if (this.isBeingPutOut()) {\n            let steamParticleChance = dt - rnd() * this.averageSteamDelay;\n\n            while (steamParticleChance > 0) {\n                this.steamEmitter.emit();\n                steamParticleChance -= rnd() * this.averageSteamDelay;\n            }\n        }\n\n        if (this.isVisible) {\n            this.fireGfx.update();\n        }\n\n        if (this.showDialoguePrompt()) {\n            this.dialoguePrompt.update(dt, this.x, this.y + 32);\n        }\n\n        this.speechBubble.update(this.x, this.y);\n    }\n\n    public feed(wood: Wood): void {\n        wood.remove();\n\n        // Handle end of the world\n        this.state = FireState.ANGRY;\n        this.growthTarget = 14;\n\n        this.scene.startApocalypseMusic();\n\n        // Disable remaining dialogs\n        this.conversation = null;\n\n        // Remove any reachable NPCs\n        for (const npc of [this.scene.shadowPresence]) {\n            if (npc) {\n                this.scene.removeGameObject(npc);\n            }\n        }\n\n        // Player thoughts\n        [\n            [\"What…\", 2, 2],\n            [\"What have I done?\", 6, 3],\n            [\"I trusted you! I helped you!\", 10, 3]\n        ].forEach(line => setTimeout(() => {\n            this.scene.player.think(line[0] as string, line[2] as number * 1000);\n        }, (line[1] as number) * 1000));\n\n        // Give fire new dialog\n        setTimeout(() => {\n            this.scene.game.campaign.runAction(\"enable\", null, [\"fire\", \"fire2\"]);\n        }, 13500);\n    }\n}\n","import { asset } from \"./Assets\";\nimport { clamp, orientPow, rnd } from \"./util\";\nimport { ColorGradient } from \"./ColorGradient\";\n\nexport class FireGfx {\n    @asset(\"gradients/fire.png\", { map: (image: HTMLImageElement) => ColorGradient.fromImage(image) })\n    public static gradient: ColorGradient;\n\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n    private data: number[][];\n    private decayData: number[][];\n    private imageData: ImageData;\n    private returnColor: number[] = [0, 0, 0, 255];\n    private bottomLine: number[] = [];\n    private nextUpdate = -Infinity;\n    private age = 0;\n    private startTime = 0;\n\n    constructor(\n        private w = 48,\n        private h = 64,\n        private coneShaped = true,\n        private updateMs = 33\n    ) {\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.width = this.w;\n        this.canvas.height = this.h;\n        this.context = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        this.imageData = this.context.getImageData(0, 0, this.w, this.h);\n        this.data = [];\n        this.decayData = [];\n\n        this.init();\n    }\n\n    private init(): void {\n        this.age = 0;\n        this.nextUpdate = -Infinity;\n        this.startTime = Date.now();\n\n        const decay = this.decayData;\n        const data = this.data;\n\n        for (let y = 0; y < this.h; y++) {\n            const row: number[] = data[y] = [];\n            const decayRow: number[] = decay[y] = [];\n            const yrel = y / (this.h - 1);\n\n            for (let x = 0; x < this.w; x++) {\n                row[x] = 0;\n                decayRow[x] = this.getDecay(x / (this.w - 1), yrel);\n            }\n        }\n\n        const bottom = data[this.h - 1];\n\n        for (let x = 0; x < this.w; x++) {\n            const xrel = x / (this.w - 1);\n            const stuffedXrel = this.coneShaped ? clamp(2 * xrel - 0.5, 0, 1) : xrel;\n            const smooth = 0.5 - 0.5 * Math.cos(2 * Math.PI * stuffedXrel);\n            bottom[x] = 1.25 * Math.pow(smooth, 0.5);\n        }\n\n        this.bottomLine = bottom.slice();\n    }\n\n    private getDecay(xrel: number, yrel: number): number {\n        if (xrel > 0.5) {\n            xrel = 1 - xrel;\n        }\n\n        if (this.coneShaped) {\n            yrel = 1.2 * yrel;\n\n            if (yrel > 1) {\n                return 0.02;\n            }\n        }\n\n        return 0.02 + (0.5 - xrel) * 0.1 + Math.pow(1 - yrel, 8);\n    }\n\n    public update(): void {\n        const t = Date.now();\n        this.age = t - this.startTime;\n\n        if (t >= this.nextUpdate) {\n            this.nextUpdate = t + this.updateMs;\n            this.updateStep();\n            this.render();\n        }\n    }\n\n    private updateStep(): void {\n        const data = this.data;\n        let fromRow = data[0];\n        let fromX = 0, toCenter = 0;\n        let  toCenter1 = 1;\n        const midX = (this.w - 1) * 0.5;\n        const yThreshold = this.coneShaped ? this.h * 0.8 : Infinity;\n\n        // Let all fire rows move upward, so update rows from top to bottom\n        for (let y = 0; y < this.h - 1; y++) {\n            const row = fromRow, decayRow = this.decayData[y];\n            fromRow = data[y + 1];\n\n            if (y > yThreshold) {\n                const yp = (y - yThreshold) / (this.h - yThreshold);\n                toCenter = 0.15 * yp * yp;\n                toCenter1 = 1 - toCenter;\n            }\n\n            for (let x = 0; x < this.w; x++) {\n                fromX = clamp(x + rnd(-1, 1) * rnd(), 0.3, this.w - 1.3);\n\n                if (toCenter) {\n                    fromX = toCenter * midX + toCenter1 * fromX;\n                }\n\n                const fromX1 = Math.floor(fromX), fx = fromX - fromX1;\n                const v = fx * fromRow[fromX1 + 1] + (1 - fx) * fromRow[fromX1] - decayRow[x] + rnd(-0.03, 0.02);\n                row[x] = clamp(v, 0, Infinity);\n            }\n        }\n\n        // Bottom line always stays mostly the same, only minor variations\n        const row = data[this.h - 1];\n        const t = this.age * 6 / 1000;\n        const skew = 0.5 * orientPow(Math.sin(t) * Math.sin(t * 0.353) * Math.sin(t * 0.764)\n            * Math.sin(t * 0.5433) * Math.sin(t * 1.634) * Math.sin(t * 1.342), 1.5);\n        const exponent = (skew > 0) ? 1 + skew : 1 / (1 - skew);\n\n        for (let x = 0; x < this.w; x++) {\n            const f = 1.2 + (0.8 * Math.sin(t) * Math.sin(0.1 * x * t) * Math.sin(-0.07 * x * t)) ** 2;\n            const baseX = Math.floor((this.w - 1) * (x / (this.w - 1)) ** exponent);\n            row[x] = this.bottomLine[baseX] * f;\n        }\n    }\n\n    private render(): void {\n        const pixels = this.imageData.data;\n        const data = this.data;\n        let p = 0, col = [0];\n\n        for (let y = 0; y < this.h; y++) {\n            const row = data[y];\n\n            for (let x = 0; x < this.w; x++) {\n                col = this.valueToColor(row[x]);\n                pixels[p++] = col[0];\n                pixels[p++] = col[1];\n                pixels[p++] = col[2];\n                pixels[p++] = col[3];\n            }\n        }\n\n        this.context.putImageData(this.imageData, 0, 0);\n    }\n\n    public valueToColor(v: number): number[] {\n        return FireGfx.gradient.get(clamp(v, 0, 1));\n    }\n\n    public oldValueToColor(v: number): number[] {\n        v = clamp(v, 0, 1);\n        const v255 = 255 * v;\n        this.returnColor[0] = 255;\n        this.returnColor[1] = v255;\n        this.returnColor[2] = v255 * v;\n        this.returnColor[3] = v255;\n\n        return this.returnColor;\n    }\n\n    public getImage(): HTMLCanvasElement {\n        return this.canvas;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, x = 0, y = 0): void {\n        const img = this.getImage();\n        ctx.drawImage(img, x - img.width / 2, -y - img.height);\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { entity } from \"./Entity\";\nimport { EyeType, Face, FaceModes } from \"./Face\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { QuestATrigger, QuestKey } from \"./Quests\";\nimport { RenderingLayer } from \"./Renderer\";\nimport { Sound } from \"./Sound\";\nimport { SoundEmitter } from \"./SoundEmitter\";\n\n@entity(\"flameboy\")\nexport class FlameBoy extends NPC {\n    @asset(\"sprites/flameboy.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/fire/fire2.ogg\")\n    private static fireAmbience: Sound;\n    private soundEmitter: SoundEmitter;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 26, 54);\n        this.face = new Face(scene, this, EyeType.FLAMEBOY, 0, 5);\n        this.defaultFaceMode = FaceModes.BORED;\n        this.face.setMode(this.defaultFaceMode);\n        this.soundEmitter = new SoundEmitter(this.scene, this.x, this.y, FlameBoy.fireAmbience, 0.7, 0.2);\n    }\n\n    protected showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() >= QuestATrigger.THROWN_STONE_INTO_WATER\n            && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_MULTIJUMP\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const animationTag = \"idle\";\n        this.scene.renderer.addAseprite(FlameBoy.sprite, animationTag, this.x, this.y, RenderingLayer.ENTITIES, this.direction);\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        this.drawFace(ctx, false);\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        this.dialoguePrompt.update(dt, this.x, this.y + 32);\n        this.speechBubble.update(this.x, this.y);\n        this.soundEmitter.update();\n    }\n}\n","import { Game } from \"./Game\";\nimport { LoadingScene } from \"./scenes/LoadingScene\";\n\nexport class FriendlyFire extends Game {\n    public constructor() {\n        super();\n    }\n}\n\nconst game = new FriendlyFire();\ngame.scenes.setScene(LoadingScene);\n(window as any).game = game;\ngame.start();\n","import { Assets } from \"./Assets\";\nimport { Campaign } from \"./Campaign\";\nimport { clamp } from \"./util\";\nimport { ControllerManager } from \"./input/ControllerManager\";\nimport { createCanvas, getRenderingContext } from \"./graphics\";\nimport { GAME_CANVAS_HEIGHT, GAME_CANVAS_WIDTH } from \"./constants\";\nimport { GamepadInput } from \"./input/GamepadInput\";\nimport { Keyboard } from \"./input/Keyboard\";\nimport { Scenes } from \"./Scenes\";\n\n/**\n * Max time delta (in s). If game freezes for a few seconds for whatever reason, we don't want\n * updates to jump too much.\n */\nconst MAX_DT = 0.1;\n\n/** Number of seconds the mouse is visible after moving it */\nconst MOUSE_TIMEOUT = 2.0;\n\nexport abstract class Game {\n    public readonly controllerManager = ControllerManager.getInstance();\n    public readonly keyboard = new Keyboard();\n    public readonly gamepad = new GamepadInput();\n    public readonly scenes = new Scenes(this);\n    public readonly assets = new Assets();\n    public readonly campaign = new Campaign(this);\n\n    public backgroundColor: string = \"black\";\n\n    public canvas: HTMLCanvasElement;\n    private readonly ctx: CanvasRenderingContext2D;\n    private readonly gameLoopCallback = this.gameLoop.bind(this);\n    private gameLoopId: number | null = null;\n    private lastUpdateTime: number = performance.now();\n    private mouseTimeout: number = MOUSE_TIMEOUT;\n\n    public constructor(public readonly width: number = GAME_CANVAS_WIDTH, public readonly height: number = GAME_CANVAS_HEIGHT) {\n        const canvas = this.canvas = createCanvas(width, height);\n        // Desynchronized sounds like a good idea but unfortunately it prevents pixelated graphics\n        // on some systems (Chrome+Windows+NVidia for example which forces bilinear filtering). So\n        // it is deactivated here.\n        this.ctx = getRenderingContext(canvas, \"2d\", { alpha: false, desynchronized: false });\n        const style = canvas.style;\n        style.position = \"absolute\";\n        style.margin = \"auto\";\n        style.left = style.top = style.right = style.bottom = \"0\";\n        style.imageRendering = \"pixelated\";\n        style.imageRendering = \"crisp-edges\";\n        document.body.appendChild(this.canvas);\n        this.updateCanvasSize();\n        window.addEventListener(\"resize\", () => this.updateCanvasSize());\n        window.addEventListener(\"pointermove\", () => this.mouseMoved());\n\n        // Use Alt+Enter to toggle fullscreen mode.\n        window.addEventListener(\"keydown\", async (event) => {\n            if (event.altKey && event.key === \"Enter\") {\n                const lockingEnabled = \"keyboard\" in navigator && \"lock\" in navigator.keyboard && typeof navigator.keyboard.lock === \"function\";\n                // If the browser is in full screen mode AND fullscreen has been triggered by our own keyboard shortcut...\n                if (window.matchMedia(\"(display-mode: fullscreen)\").matches && document.fullscreenElement != null) {\n                    if (lockingEnabled) {\n                        navigator.keyboard.unlock();\n                    }\n                    await document.exitFullscreen();\n                } else {\n                    if (lockingEnabled) {\n                        await navigator.keyboard.lock([\"Escape\"]);\n                    }\n                    await document.body.requestFullscreen();\n                }\n            }\n        });\n\n    }\n\n    private mouseMoved(): void {\n        this.canvas.style.cursor = \"default\";\n        this.mouseTimeout = MOUSE_TIMEOUT;\n    }\n\n    private updateMouse(dt: number): void {\n        if (this.mouseTimeout > 0) {\n            this.mouseTimeout = Math.max(0, this.mouseTimeout - dt);\n\n            if (this.mouseTimeout === 0) {\n                this.canvas.style.cursor = \"none\";\n            }\n        }\n    }\n\n    private updateCanvasSize(): void {\n        const { width, height } = this;\n\n        const scale = Math.max(\n            1,\n            Math.floor(Math.min(window.innerWidth / width, window.innerHeight / height))\n        );\n\n        const style = this.canvas.style;\n        style.width = width * scale + \"px\";\n        style.height = height * scale + \"px\";\n    }\n\n    private gameLoop(): void {\n        const currentUpdateTime = performance.now();\n        const dt = clamp((currentUpdateTime - this.lastUpdateTime) / 1000, 0, MAX_DT);\n        this.update(dt);\n        this.lastUpdateTime = currentUpdateTime;\n\n        const { ctx, width, height } = this;\n        ctx.save();\n        ctx.imageSmoothingEnabled = false;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.fillRect(0, 0, width, height);\n        this.draw(ctx, width, height);\n        ctx.restore();\n\n        this.nextFrame();\n    }\n\n    private nextFrame(): void {\n        this.gameLoopId = requestAnimationFrame(this.gameLoopCallback);\n    }\n\n    protected update(dt: number): void {\n        this.gamepad.update();\n        this.updateMouse(dt);\n        this.scenes.update(dt);\n    }\n\n    protected draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        this.scenes.draw(ctx, width, height);\n    }\n\n    public start(): void {\n        if (this.gameLoopId == null) {\n            this.lastUpdateTime = performance.now();\n            this.nextFrame();\n        }\n    }\n\n    public stop(): void {\n        if (this.gameLoopId != null) {\n            cancelAnimationFrame(this.gameLoopId);\n            this.gameLoopId = null;\n        }\n    }\n}\n","import json, { MapLayerJSONType, MapObjectJSON } from \"../assets/maps/level.json\";\nimport { Vector2Like } from \"./graphics/Vector2\";\n\nexport enum MapObjectType {\n    ENTITY = \"entity\",\n    TRIGGER = \"trigger\",\n    POINTER = \"pointer\",\n    GATE = \"gate\",\n    BOUNDS = \"bounds\",\n    SOUND = \"sound\"\n}\n\nexport interface GameObjectProperties {\n    direction?: \"up\" | \"down\" | \"left\" | \"right\";\n    distance: number;\n    velocity: number;\n    target?: string;\n    duration?: number;\n    teleportY?: number;\n    disableParticles?: boolean;\n    setGlobalKey?: string;\n    setGlobalVal?: string;\n    setDialogEntity?: string;\n    setDialogValue?: string;\n    content?: string;\n    bgm?: string;\n    identifier?: string;\n    intensity?: number;\n    volume?: number;\n    sound?: string;\n    col?: number;\n    row?: number;\n}\n\nexport interface GameObjectInfo {\n    x: number;\n    y: number;\n    name: string;\n    type: string;\n    width: number;\n    height: number;\n    properties: GameObjectProperties;\n}\n\nexport class MapInfo {\n    private getLayer<T extends string>(type: T, name: string): MapLayerJSONType<T> | null {\n        return <MapLayerJSONType<T>>json.layers.find(layer => layer.type === type && layer.name === name) ?? null;\n    }\n\n    private getObject(name: string): MapObjectJSON | null {\n        return this.getLayer(\"objectgroup\", \"objects\")?.objects.find(object => object.name === name) ?? null;\n    }\n\n    private getObjects(type?: string): MapObjectJSON[] {\n        return this.getLayer(\"objectgroup\", \"objects\")?.objects.filter(object => !type || object.type === type) ?? [];\n    }\n\n    public getPlayerStart(): Vector2Like {\n        const mapHeight = MapInfo.getMapSize().height;\n        const object = this.getObject(\"player\");\n\n        if (object) {\n            return { x: object.x, y: mapHeight - object.y };\n        } else {\n            return { x: 0, y: 0 };\n        }\n    }\n\n    public getGameObjectInfos(type: MapObjectType): GameObjectInfo[] {\n        const mapHeight = MapInfo.getMapSize().height;\n\n        return this.getObjects(type).map(object => ({\n            name: object.name,\n            x: object.x,\n            y: mapHeight - object.y,\n            type: object.type,\n            width: object.width,\n            height: object.height,\n            properties: (object.properties ?? []).reduce((props, property) => {\n                props[property.name] = property.value;\n                return props;\n            }, {})\n        }));\n    }\n\n    public getEntities(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.ENTITY);\n    }\n\n    public getSounds(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.SOUND);\n    }\n\n    public getPointers(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.POINTER);\n    }\n\n    public getTriggerObjects(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.TRIGGER);\n    }\n\n    public getBoundObjects(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.BOUNDS);\n    }\n\n    public getGateObjects(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.GATE);\n    }\n\n    public static normalizeCoordinates(objects: MapObjectJSON[]): MapObjectJSON[] {\n        const mapHeight = MapInfo.getMapSize().height;\n        objects.forEach(o => { o.y = mapHeight - o.y; });\n\n        return objects;\n    }\n\n    public static getMapSize(): { width: number, height: number } {\n        return {\n            width: json.width * json.tilewidth,\n            height: json.height * json.tileheight\n        };\n    }\n}\n","import { asset } from \"./Assets\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { Signal } from \"./Signal\";\nimport { Sound } from \"./Sound\";\nimport { SceneNode, SceneNodeArgs } from \"./scene/SceneNode\";\nimport { FriendlyFire } from \"./FriendlyFire\";\n\nexport enum MenuAlignment { LEFT, CENTER, RIGHT }\n\n/**\n * Simple MenuItem Class for usage in a MenuList.\n * Currently, each item is only rendered as simple text. The focused state is visualized via an\n * additional `►` character as prefix. The item instances don't need to be manually drawn, since the\n * MenuList class' draw method will take care of it.\n */\nexport class MenuItem {\n    public id: string;\n    public label: string;\n    private font: BitmapFont;\n    private color: \"black\" | \"white\";\n    public x: number;\n    public y: number;\n    public enabled: boolean;\n    public focused: boolean;\n\n    @asset(\"sprites/menu_selector.png\")\n    private static selectorImage: HTMLImageElement;\n\n    public constructor(\n        id: string, label: string, font: BitmapFont, color: \"black\" | \"white\", x: number, y: number,\n        enabled = true\n    ) {\n        this.id = id;\n        this.label = label;\n        this.font = font;\n        this.color = color;\n        this.x = x;\n        this.y = y;\n        this.enabled = enabled;\n        this.focused = false;\n    }\n\n    /**\n     * Draw method for a single ListItem. Is automatically called when the parent\n     * MenuList's draw method is called.\n     *\n     * @param ctx CanvasRenderingContext2D\n     */\n    public draw(ctx: CanvasRenderingContext2D, align: MenuAlignment) {\n        ctx.save();\n        const alpha = this.enabled ? 1 : 0.35;\n\n        let x = this.x;\n        const y = this.y;\n\n        const text = this.label;\n        const width = this.font.measureText(text).width;\n\n\n        if (align === MenuAlignment.CENTER) {\n            x -= Math.round(width / 2);\n        }\n\n        this.font.drawText(ctx, text, x, y, this.color, 0, alpha);\n\n        if (this.focused) {\n            ctx.drawImage(MenuItem.selectorImage, x - 13, y + 2);\n        }\n\n        ctx.restore();\n    }\n}\n\nexport interface MenuListArgs extends SceneNodeArgs {\n    align?: MenuAlignment;\n}\n\n/**\n * A simple MenuList that can hold MenuItems and navigate them in two directions via methods. On\n * each navigational change, the new MenuItem is focused. When calling the `executeAction` method a\n * signal is emitted containing the focused MenuItem's ID. Disabled MenuItems will be skipped\n * automatically when navigating. The draw method of the list instance has to be called to have all\n * containing buttons be drawn automatically.\n */\nexport class MenuList extends SceneNode<FriendlyFire> {\n    @asset(\"sounds/interface/click.mp3\")\n    public static click: Sound;\n    @asset(\"sounds/interface/confirm.mp3\")\n    public static confirm: Sound;\n    @asset(\"sounds/interface/select.mp3\")\n    public static select: Sound;\n    @asset(\"sounds/interface/bass.mp3\")\n    public static pause: Sound;\n\n    private align: MenuAlignment;\n    private items: MenuItem[] = [];\n    public onActivated = new Signal<string>();\n\n    public constructor({ align = MenuAlignment.LEFT, ...args }: MenuListArgs = {}) {\n        super(args);\n        this.align = align;\n    }\n\n    /**\n     * Adds an arbitrary number of menu items to the menu list\n     * The first available menu item will be focused automatically\n     * @param items\n     */\n    public addItems(...items: MenuItem[]): void {\n        this.items.push(...items);\n        this.focusFirstItem();\n    }\n\n    /**\n     * Clears all menu items from the menu instance\n     */\n    public reset(): void {\n        this.items = [];\n    }\n\n    /**\n     * Sets an arbitrary number of menu items to the menu list and overrides any previously added\n     * items. The first available menu item will be focused automatically.\n     */\n    public setItems(...items: MenuItem[]): this {\n        this.items = [...items];\n        this.focusFirstItem();\n        return this;\n    }\n\n    /**\n     * Finds and focuses the first available item if no item was focused before.\n     */\n    private focusFirstItem(): void {\n        if (!this.getFocusedItem()) {\n            const index = this.items.findIndex(item => item.enabled);\n\n            if (index > -1) {\n                this.items[index].focused = true;\n            }\n        }\n    }\n\n    private getFocusedItem(): MenuItem | undefined {\n        return this.items.find(item => item.focused);\n    }\n\n    private getFocusedItemIndex(): number {\n        return this.items.findIndex(item => item.focused);\n    }\n\n    private unfocusAllItems(): void {\n        this.items.forEach(item => { item.focused = false; });\n    }\n\n    private focusItem(item: MenuItem): void {\n        this.unfocusAllItems();\n        item.focused = true;\n    }\n\n    /**\n     * Recursive method to focus the next item in the direction provided in the argument.\n     * @param currentIndex - The index of the currently focused item in the items array\n     * @param direction    - Direction in which the next item should be searched for.\n     *                       Either 1 (forwards) or -1 (backwards)\n     */\n    private findAndFocusNextItem(currentIndex: number, direction: -1 | 1): void {\n        const min = direction > 0 ? 0 : (this.items.length - 1);\n        const max = direction > 0 ? (this.items.length - 1) : 0;\n        const nextIndex = (currentIndex === max) ? min : currentIndex + direction;\n\n        const nextItem = this.items[nextIndex];\n\n        if (nextItem.enabled) {\n            this.focusItem(this.items[nextIndex]);\n        } else {\n            this.findAndFocusNextItem(nextIndex, direction);\n        }\n\n        MenuList.click.stop();\n        MenuList.click.play();\n    }\n\n    /**\n     * Method to navigate the focus of the menu list to the next item\n     */\n    public next(): void {\n        this.findAndFocusNextItem(this.getFocusedItemIndex(), 1);\n    }\n\n    /**\n     * Method to navigate the focus of the menu list to the previous item\n     */\n    public prev(): void {\n        this.findAndFocusNextItem(this.getFocusedItemIndex(), -1);\n    }\n\n    public executeAction(sound: Sound = MenuList.confirm): void {\n        const focusedButton = this.getFocusedItem();\n\n        if (focusedButton && focusedButton.enabled) {\n            sound.stop();\n            sound.play();\n            this.onActivated.emit(focusedButton.id);\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.items.forEach(item => {\n            item.draw(ctx, this.align);\n        });\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { Conversation } from \"./Conversation\";\nimport conversation from \"../assets/dialog/mimic.dialog.json\";\nimport { entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { Sound } from \"./Sound\";\n\nenum MimicState { SLEEPING, OPEN_UP, IDLE }\n\n@entity(\"mimic\")\nexport class Mimic extends NPC {\n    @asset(\"sprites/mimic.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/item/chest.ogg\")\n    private static openingSound: Sound;\n\n    private state = MimicState.SLEEPING;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 46, 24);\n        this.lookAtPlayer = false;\n        this.direction = 1;\n        this.conversation = new Conversation(conversation, this);\n        this.animator.assignSprite(Mimic.sprite);\n    }\n\n    public nextState(): void {\n        this.state++;\n\n        if (this.state === MimicState.OPEN_UP) {\n            Mimic.openingSound.play();\n        }\n    }\n\n    public getInteractionText(): string {\n        if (!this.met) {\n            return \"Open\";\n        } else {\n            return \"Talk\";\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        switch (this.state) {\n            case MimicState.SLEEPING:\n                this.animator.play(\"sleeping\", this.direction);\n                break;\n            case MimicState.OPEN_UP:\n                this.animator.play(\"open\", this.direction, { loop: false, callback: this.nextState.bind(this) });\n                break;\n            case MimicState.IDLE:\n                this.animator.play(\"idle\", this.direction);\n                break;\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { Conversation } from \"./Conversation\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { Sound } from \"./Sound\";\nimport { asset } from \"./Assets\";\n\nconst AMOUNT_GATE_COLS = 3;\nconst AMOUNT_GATE_ROWS = 5;\n\nexport class MountainRiddle {\n    private attemptCount = 0;\n    private failed = false;\n    private cleared = false;\n    private solution: number[];\n\n    @asset(\"sounds/item/fanfare.mp3\")\n    private static sound: Sound;\n\n    public constructor() {\n        this.solution = this.getRandomizedSolution();\n    }\n\n    private getRandomizedSolution(): number[] {\n        const solution: number[] = [];\n\n        for (let index = 0; index < AMOUNT_GATE_ROWS; index++) {\n            solution.push(Math.floor(Math.random() * Math.floor(AMOUNT_GATE_COLS)));\n        }\n\n        return solution;\n    }\n\n    public isCorrectGate(col: number, row: number): boolean {\n        return this.solution[row] === col;\n    }\n\n    public checkGate(col: number, row: number): void {\n        if (!this.failed && !this.cleared && !this.isCorrectGate(col, row)) {\n            this.failRiddle();\n        }\n    }\n\n    public wasAttempted(): boolean {\n        return this.attemptCount > 0;\n    }\n\n    public registerAttempt(): void {\n        this.attemptCount++;\n    }\n\n    public failRiddle(): void {\n        Conversation.setGlobal(\"gotTeleported\", \"true\");\n        this.failed = true;\n        this.registerAttempt();\n        GameScene.wrong.play();\n    }\n\n    public isFailed(): boolean {\n        return this.failed;\n    }\n\n    public resetRiddle(): void {\n        if (this.failed && !this.cleared) {\n            this.solution = this.getRandomizedSolution();\n            this.failed = false;\n        }\n    }\n\n    public isCleared(): boolean {\n        return this.cleared;\n    }\n\n    public clearRiddle(): void {\n        if (!this.cleared) {\n            MountainRiddle.sound.play();\n            this.failed = false;\n            this.cleared = true;\n        }\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { CollidableGameObject, GameScene } from \"./scenes/GameScene\";\nimport { entity } from \"./Entity\";\nimport { Environment } from \"./World\";\nimport { GameObjectProperties } from \"./MapInfo\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\nimport { PIXEL_PER_METER } from \"./constants\";\nimport { RenderingLayer } from \"./Renderer\";\n\n@entity(\"movingplatform\")\nexport class MovingPlatform extends PhysicsEntity implements CollidableGameObject {\n    @asset(\"sprites/stoneplatform.aseprite.json\")\n    private static sprite: Aseprite;\n\n    private startX: number;\n    private startY: number;\n    private targetX: number;\n    private targetY: number;\n    private velocity: number;\n\n    public constructor(scene: GameScene, x: number, y: number, properties: GameObjectProperties) {\n        super(scene, x, y, 68, 12);\n        this.setFloating(true);\n        this.startX = this.targetX = x;\n        this.startY = this.targetY = y;\n        this.velocity = properties.velocity / PIXEL_PER_METER;\n        if (properties.direction === \"right\") {\n            this.targetX = x + properties.distance;\n            this.setVelocityX(this.velocity);\n        } else if (properties.direction === \"left\") {\n            this.targetX = x - properties.distance;\n            this.setVelocityX(-this.velocity);\n        } else if (properties.direction === \"up\") {\n            this.targetY = y + properties.distance;\n            this.setVelocityY(this.velocity);\n        } else if (properties.direction === \"down\") {\n            this.targetY = y - properties.distance;\n            this.setVelocityY(-this.velocity);\n        }\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(MovingPlatform.sprite, \"idle\", this.x, this.y, RenderingLayer.PLATFORMS);\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        if (this.getVelocityY() > 0) {\n            if (this.y >= Math.max(this.startY, this.targetY)) {\n                this.y = Math.max(this.startY, this.targetY);\n                this.setVelocityY(-this.velocity);\n            }\n        } else if (this.getVelocityY() < 0) {\n            if (this.y <= Math.min(this.startY, this.targetY)) {\n                this.y = Math.min(this.startY, this.targetY);\n                this.setVelocityY(this.velocity);\n            }\n        }\n\n        if (this.getVelocityX() > 0) {\n            if (this.x >= Math.max(this.targetX, this.startX)) {\n                this.x = Math.max(this.targetX, this.startX);\n                this.setVelocityX(-this.velocity);\n            }\n        } else if (this.getVelocityX() < 0) {\n            if (this.x <= Math.min(this.startX, this.targetX)) {\n                this.x = Math.min(this.startX, this.targetX);\n                this.setVelocityX(this.velocity);\n            }\n        }\n    }\n\n    public collidesWith(x: number, y: number): number {\n        if (\n            x >= this.x - this.width / 2\n            && x <= this.x + this.width / 2\n            && y >= this.y\n            && y <= this.y + this.height\n        ) {\n            return Environment.PLATFORM;\n        }\n\n        return Environment.AIR;\n    }\n}\n","import { Conversation } from \"./Conversation\";\nimport { DialoguePrompt } from \"./DialoguePrompt\";\nimport { Face, FaceModes } from \"./Face\";\nimport { Greeting } from \"./Greeting\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\nimport { sleep } from \"./util\";\nimport { SpeechBubble } from \"./SpeechBubble\";\n\n// Seconds NPC can't be talked to after a conversation has ended\nconst PAUSE_AFTER_CONVERSATION = 1.5;\n\nexport abstract class NPC extends PhysicsEntity {\n    public direction = 1;\n    public face: Face | null = null;\n    public defaultFaceMode = FaceModes.NEUTRAL;\n    public greeting: Greeting | null = null;\n    public conversation: Conversation | null = null;\n    public thinkBubble: SpeechBubble | null = null;\n    public speechBubble = new SpeechBubble(this.scene, this.x, this.y);\n    public lookAtPlayer = true;\n    public dialoguePrompt = new DialoguePrompt(this.scene, this.x, this.y);\n    private lastEndedConversation = -Infinity;\n    protected met = false;\n\n    protected drawFace(ctx: CanvasRenderingContext2D, lookAtPlayer = true): void {\n        if (this.face) {\n            // Look at player\n            if (lookAtPlayer) {\n                const dx = this.scene.player.x - this.x;\n                this.face.toggleDirection((dx > 0) ? 1 : -1);\n                this.face.draw(ctx);\n            } else {\n                this.face.setDirection(this.direction);\n                this.face.draw(ctx);\n            }\n        }\n    }\n\n    public async think(message: string, time: number): Promise<void> {\n        if (this.thinkBubble) {\n            this.thinkBubble.hide();\n            this.thinkBubble = null;\n        }\n\n        const thinkBubble = this.thinkBubble = new SpeechBubble(this.scene, this.x, this.y);\n        thinkBubble.setMessage(message);\n        thinkBubble.show();\n\n        await sleep(time);\n\n        if (this.thinkBubble === thinkBubble) {\n            thinkBubble.hide();\n            this.thinkBubble = null;\n        }\n    }\n\n    public hasMet(): boolean {\n        return false;\n    }\n\n    public meet(): void {\n        this.met = true;\n    }\n\n    public getInteractionText(): string {\n        return \"Talk\";\n    }\n\n    protected showDialoguePrompt(): boolean {\n        if (this.hasActiveConversation() || !this.scene.player.isControllable) {\n            return false;\n        }\n\n        return true;\n    }\n\n    protected drawDialoguePrompt(): void {\n        this.dialoguePrompt.draw();\n    }\n\n    protected drawGreeting(ctx: CanvasRenderingContext2D): void {\n        this.greeting?.draw(ctx);\n    }\n\n    protected updateGreeting(): void {\n        this.greeting?.update();\n    }\n\n    public registerEndedConversation(): void {\n        this.lastEndedConversation = this.scene.gameTime;\n    }\n\n    public isReadyForConversation(): boolean | null {\n        return (\n            this.conversation\n            && !this.scene.player.isCarrying(this)\n            && this.scene.gameTime - this.lastEndedConversation > PAUSE_AFTER_CONVERSATION\n        );\n    }\n\n    public hasActiveConversation(): boolean {\n        return (this.scene.player.playerConversation !== null && this.scene.player.playerConversation.npc === this);\n    }\n\n    public toggleDirection(direction = this.direction > 0 ? -1 : 1): void {\n        if (direction !== this.direction) {\n            this.direction = direction;\n        }\n    }\n\n    public update(dt: number): void {\n        if (this.lookAtPlayer) {\n            const dx = this.scene.player.x - this.x;\n            this.toggleDirection((dx > 0) ? 1 : -1);\n        }\n\n        super.update(dt);\n    }\n}\n","import { GameScene } from \"./scenes/GameScene\";\nimport { GRAVITY } from \"./constants\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { Vector2Like } from \"./graphics/Vector2\";\n\ntype ParticleAppearance = string | HTMLImageElement | HTMLCanvasElement;\n\ntype NumberGenerator = () => number;\n\ntype VectorGenerator = () => Vector2Like;\n\ntype ParticleAppearanceGenerator = () => ParticleAppearance;\n\nexport interface ParticleEmitterArguments {\n    position: Vector2Like;\n    offset?: Vector2Like | VectorGenerator;\n    velocity?: Vector2Like | VectorGenerator;\n    color?: ParticleAppearance | ParticleAppearanceGenerator;\n    alpha?: number | NumberGenerator;\n    size?: number | NumberGenerator;\n    gravity?: Vector2Like | VectorGenerator;\n    lifetime?: number | NumberGenerator;\n    breakFactor?: number;\n    blendMode?: string;\n    alphaCurve?: ValueCurve;\n    sizeCurve?: ValueCurve;\n    angle?: number | NumberGenerator;\n    angleSpeed?: number | NumberGenerator;\n    renderingLayer?: RenderingLayer;\n    zIndex?: number;\n    update?: (p: Particle) => void;\n}\n\nexport class Particles {\n    private scene: GameScene;\n    private emitters: ParticleEmitter[] = [];\n\n    public constructor(scene: GameScene) {\n        this.scene = scene;\n    }\n\n    public update(dt: number): void {\n        this.emitters.forEach(emitter => emitter.update(dt));\n    }\n\n    public addEmittersToRenderingQueue(): void {\n        this.emitters.forEach(emitter => {\n            this.scene.renderer.add({\n                type: RenderingType.PARTICLE_EMITTER,\n                layer: emitter.renderingLayer,\n                zIndex: emitter.zIndex,\n                emitter\n            });\n        });\n    }\n\n    // Direct drawing of particles is deactivated since it's handled via rendering engine\n    public draw(ctx: CanvasRenderingContext2D): void {}\n\n    public addEmitter(emitter: ParticleEmitter): void {\n        this.emitters.push(emitter);\n    }\n\n    public dropEmitter(emitter: ParticleEmitter): boolean {\n        const index = this.emitters.indexOf(emitter);\n\n        if (index >= 0) {\n            this.emitters.splice(index, 1);\n            return true;\n        }\n\n        return false;\n    }\n\n    public createEmitter(args: ParticleEmitterArguments) {\n        const emitter = new ParticleEmitter(args);\n        this.addEmitter(emitter);\n\n        return emitter;\n    }\n}\n\nexport class ParticleEmitter {\n    private particles: Particle[];\n    private x: number;\n    private y: number;\n    private offsetGenerator: VectorGenerator;\n    private velocityGenerator: VectorGenerator;\n    private colorGenerator: ParticleAppearanceGenerator;\n    private sizeGenerator: NumberGenerator;\n    private gravityGenerator: VectorGenerator;\n    private lifetimeGenerator: NumberGenerator;\n    private alphaGenerator: NumberGenerator;\n    private angleGenerator: NumberGenerator;\n    private angleSpeedGenerator: NumberGenerator;\n    public gravity: Vector2Like;\n    public breakFactor: number;\n    private blendMode: string;\n    public alphaCurve: ValueCurve;\n    public sizeCurve: ValueCurve;\n    public renderingLayer: RenderingLayer;\n    public zIndex: number;\n    private updateMethod: ((p: Particle) => void) | undefined;\n\n    constructor(args: ParticleEmitterArguments) {\n        this.particles = [];\n        this.x = args.position.x;\n        this.y = args.position.y;\n        this.offsetGenerator = toGenerator(args.offset ?? ({x: 0, y: 0}));\n        this.velocityGenerator = toGenerator(args.velocity ?? ({x: 0, y: 0}));\n        this.colorGenerator = toGenerator(args.color ?? \"white\");\n        this.alphaGenerator = toGenerator(args.alpha ?? 1);\n        this.sizeGenerator = toGenerator(args.size ?? 4);\n        this.gravityGenerator = toGenerator(args.gravity ?? {x: 0, y: GRAVITY});\n        this.lifetimeGenerator = toGenerator(args.lifetime ?? 5);\n        this.angleGenerator = toGenerator(args.angle ?? 0);\n        this.angleSpeedGenerator = toGenerator(args.angleSpeed ?? 0);\n        this.gravity = this.gravityGenerator();\n        this.breakFactor = args.breakFactor || 1;\n        this.blendMode = args.blendMode || \"source-over\";\n        this.alphaCurve = args.alphaCurve || valueCurves.constant;\n        this.sizeCurve = args.sizeCurve || valueCurves.constant;\n        this.renderingLayer = args.renderingLayer || RenderingLayer.PARTICLES;\n        this.zIndex = args.zIndex !== undefined ? args.zIndex : 0;\n        this.updateMethod = args.update;\n\n        function toGenerator<tp>(obj: tp | (() => tp)): (() => tp) {\n            if (obj instanceof Function) {\n                return obj;\n            } else {\n                return () => obj;\n            }\n        }\n    }\n\n    public setPosition(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n    }\n\n    public clear(): void {\n        this.particles = [];\n    }\n\n    public emit(count = 1): void {\n        for (let i = 0; i < count; i++) {\n            this.emitSingle();\n        }\n    }\n\n    public emitSingle(): Particle {\n        const v = this.velocityGenerator();\n        const off = this.offsetGenerator();\n\n        const particle = new Particle(\n            this,\n            this.x + off.x,\n            this.y + off.y,\n            v.x,\n            v.y,\n            this.angleGenerator(),\n            this.angleSpeedGenerator(),\n            this.colorGenerator(),\n            this.sizeGenerator(),\n            this.lifetimeGenerator(),\n            this.alphaGenerator()\n        );\n\n        this.particles.push(particle);\n\n        return particle;\n    }\n\n    public update(dt: number): void {\n        this.gravity = this.gravityGenerator();\n\n        for (let i = this.particles.length - 1; i >= 0; i--) {\n            if (this.particles[i].update(dt)) {\n                this.particles.splice(i, 1);\n            }\n        }\n\n        if (this.updateMethod) {\n            for (const p of this.particles) {\n                this.updateMethod(p);\n            }\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.globalCompositeOperation = this.blendMode;\n        this.particles.forEach(p => p.draw(ctx));\n        ctx.restore();\n    }\n}\n\nexport class Particle {\n    private halfSize: number;\n    private originalLifetime: number;\n    private progress: number = 0;\n\n    constructor(\n        private emitter: ParticleEmitter,\n        public x: number,\n        public y: number,\n        public vx = 0,\n        public vy = 0,\n        private angle = 0,\n        private angleSpeed = 0,\n        private imageOrColor: ParticleAppearance = \"white\",\n        public readonly size = 4,\n        private lifetime = 1,\n        private alpha = 1\n    ) {\n        this.halfSize = this.size / 2;\n        this.originalLifetime = this.lifetime;\n        this.progress = 0;\n    }\n\n    public update(dt: number): boolean {\n        // Life\n        this.lifetime -= dt;\n\n        if (this.lifetime <= 0) {\n            // Tell parent that it may eliminate this particle\n            return true;\n        } else {\n            this.progress = 1 - (this.lifetime / this.originalLifetime);\n        }\n\n        // Gravity\n        this.vx += this.emitter.gravity.x * dt;\n        this.vy += this.emitter.gravity.y * dt;\n\n        if (this.emitter.breakFactor !== 1) {\n            const factor = this.emitter.breakFactor ** dt;\n            this.vx *= factor;\n            this.vy *= factor;\n        }\n\n        // Movement\n        this.x += this.vx * dt;\n        this.y += this.vy * dt;\n        this.angle += this.angleSpeed * dt;\n\n        return false;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.globalAlpha = this.alpha * this.emitter.alphaCurve.get(this.progress);\n        ctx.translate(this.x, -this.y);\n\n        if (this.angle) {\n            ctx.rotate(this.angle);\n        }\n\n        if (this.imageOrColor instanceof Object) {\n            // Image\n            const img = this.imageOrColor;\n            const w = ((<any>img).naturalWidth || img.width), h = ((<any>img).naturalHeight || img.height);\n            const sz = Math.max(w, h);\n            ctx.drawImage(img, -this.halfSize, -this.halfSize, this.size * w / sz, this.size * h / sz);\n        } else {\n            // Color\n            ctx.fillStyle = (this.imageOrColor as string);\n            ctx.fillRect(-this.halfSize, -this.halfSize, this.size, this.size);\n        }\n\n        ctx.restore();\n    }\n}\n\nexport class ValueCurve {\n    private mapping: number[] = [];\n\n    constructor(private readonly func: (p: number) => number, private readonly steps = 1023) {\n        for (let i = 0; i <= steps; i++) {\n            this.mapping[i] = func(i / steps);\n        }\n    }\n\n    public get(p: number): number {\n        const i = Math.round(p * this.steps);\n        return this.mapping[i < 0 ? 0 : i > this.steps ? this.steps : i];\n    }\n\n    public getExact(p: number): number {\n        return this.func(p);\n    }\n\n    public invert(): ValueCurve {\n        return new ValueCurve((p) => this.getExact(1 - p), this.steps);\n    }\n\n    public append(otherCurve: ValueCurve, relativeLength = 1): ValueCurve {\n        const total = 1 + relativeLength;\n        const mid = (total - relativeLength) / total;\n        return new ValueCurve((p) => p < mid ? this.getExact(p / mid) :\n                otherCurve.getExact((p - mid) / relativeLength),\n                Math.max(this.steps, otherCurve.steps));\n    }\n}\n\nfunction trapezeFunction(v: number, v1: number = v): ((p: number) => number) {\n    return (p: number) => p < v ? p / v : p > 1 - v1 ? (1 - p) / v1 : 1;\n}\n\nexport const valueCurves = {\n    constant: new ValueCurve((p) => 1, 1), // always 1\n    linear: new ValueCurve((p) => p), // linear 0 to 1\n    trapeze: (v: number = 0.1, v1: number = v) => new ValueCurve(trapezeFunction(v, v1)), // blocky 0 to 1 to 0\n    cos: (v: number = 0.1, v1: number = v) => // smooth 0 to 1 to 0\n            new ValueCurve((p) => 0.5 - 0.5 * Math.cos(Math.PI * trapezeFunction(v, v1)(p))),\n    cubic: new ValueCurve((p) => 3 * p * p - 2 * p * p * p) // smooth 0 to 1\n};\n","import { DROWNING_VELOCITY, GRAVITY, PIXEL_PER_METER, TERMINAL_VELOCITY } from \"./constants\";\nimport { Entity } from \"./Entity\";\nimport { Environment } from \"./World\";\nimport { GameObject } from \"./scenes/GameScene\";\nimport { Player } from \"./Player\";\n\nexport abstract class PhysicsEntity extends Entity {\n    private velocityX = 0;\n    private velocityY = 0;\n    private maxVelocityX = Infinity;\n    private maxVelocityY = Infinity;\n    private floating = false;\n    private ground: GameObject | null = null;\n\n    // This property describes how much the player hitbox grows when\n    // this entity is carried. Defaults to the entities own height.\n    public carryHeight = this.height;\n\n    protected lastGroundPosition = { x: 0, y: 0 };\n\n    public setFloating(floating: boolean): void {\n        this.floating = floating;\n\n        if (floating) {\n            this.setVelocity(0, 0);\n        }\n    }\n\n    public isFloating(): boolean {\n        return this.floating;\n    }\n\n    public setMaxVelocity(maxVelocityX: number, maxVelocityY = maxVelocityX): void {\n        this.maxVelocityX = maxVelocityX;\n        this.maxVelocityY = maxVelocityY;\n    }\n\n    public accelerate(x: number, y: number): void {\n        this.accelerateX(x);\n        this.accelerateY(y);\n    }\n\n    public accelerateX(x: number): void {\n        if (x > 0) {\n            this.velocityX = Math.min(this.maxVelocityX, this.velocityX + x);\n        } else {\n            this.velocityX = Math.max(-this.maxVelocityX, this.velocityX + x);\n        }\n    }\n\n    public accelerateY(y: number): void {\n        this.velocityY = Math.min(this.maxVelocityY, this.velocityY + y);\n    }\n\n    public decelerate(x: number, y: number): void {\n        this.decelerateX(x);\n        this.decelerateY(y);\n    }\n\n    public decelerateX(x: number): void {\n        if (x > 0) {\n            this.velocityX = Math.max(0, this.velocityX - x);\n        } else {\n            this.velocityX = Math.min(0, this.velocityX - x);\n        }\n    }\n\n    public decelerateY(y: number): void {\n        this.velocityY = Math.max(0, this.velocityY - y);\n    }\n\n    public setVelocity(x: number, y: number): void {\n        this.velocityX = x;\n        this.velocityY = y;\n    }\n\n    public setVelocityX(x: number): void {\n        this.velocityX = x;\n    }\n\n    public setVelocityY(y: number): void {\n        this.velocityY = y;\n    }\n\n    public getVelocityX(): number {\n        return this.velocityX;\n    }\n\n    public getVelocityY(): number {\n        return this.velocityY;\n    }\n\n    private checkCollision(x: number, y: number, ignore?: Environment[]): Environment {\n        return this.scene.world.collidesWith(x, y, [ this ], ignore);\n    }\n\n    private checkCollisionBox(x: number, y: number, ignore?: Environment[]): Environment {\n        for (let i = -this.width / 2; i < this.width / 2; i++) {\n            let env = this.checkCollision(x + i, y, ignore);\n\n            if (env !== Environment.AIR) {\n                return env;\n            }\n\n            env = this.checkCollision(x + i, y + this.height, ignore);\n\n            if (env !== Environment.AIR) {\n                return env;\n            }\n        }\n\n        for (let i = 0; i < this.height; i++) {\n            let env = this.checkCollision(x - this.width / 2, y + i, ignore);\n\n            if (env !== Environment.AIR) {\n                return env;\n            }\n\n            env = this.checkCollision(x + this.width / 2, y + i, ignore);\n\n            if (env !== Environment.AIR) {\n                return env;\n            }\n        }\n\n        return Environment.AIR;\n    }\n\n    protected updatePosition(newX: number, newY: number): void {\n\n        if (this.floating) {\n            this.x = newX;\n            this.y = newY;\n        } else {\n            const env = this.checkCollisionBox(\n                newX, newY, newY > this.y ? [ Environment.PLATFORM ] : []\n            );\n\n            if (env === Environment.AIR || env === Environment.WATER) {\n                this.x = newX;\n                this.y = newY;\n            } else {\n                this.setVelocity(0, 0);\n            }\n        }\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        const world = this.scene.world;\n        const ground = world.getObjectAt(this.x, this.y - 5, [ this ]);\n\n        if (ground instanceof PhysicsEntity) {\n            this.x += ground.getVelocityX() * PIXEL_PER_METER * dt;\n            this.y += ground.getVelocityY() * PIXEL_PER_METER * dt;\n        }\n\n        this.ground = ground;\n\n        this.updatePosition(\n            this.x + this.velocityX * PIXEL_PER_METER * dt,\n            this.y + this.velocityY * PIXEL_PER_METER * dt\n        );\n\n        // Object dropping down when there is no ground below\n        if (!this.floating) {\n            const environment = world.collidesWith(\n                this.x, this.y - 1,\n                [ this ],\n                this instanceof Player && this.jumpDown ? [ Environment.PLATFORM ] : []\n            );\n\n            if (environment === Environment.AIR) {\n                this.velocityY -= this.getGravity() * dt;\n\n                // Apply terminal velocity to falling entities\n                if (this.velocityY < 0) {\n                    this.velocityY = Math.max(this.velocityY, TERMINAL_VELOCITY);\n                }\n            } else if (environment === Environment.WATER) {\n                this.velocityY = DROWNING_VELOCITY;\n                this.velocityX = 0;\n            } else if (this.velocityY < 0) {\n                this.velocityY = 0;\n\n                if (!(this instanceof Player)) {\n                    this.velocityX = 0;\n                }\n                this.x = Math.round(this.x);\n                this.y = Math.round(this.y);\n            } else {\n                // is on ground\n                this.lastGroundPosition.x = this.x;\n                this.lastGroundPosition.y = this.y;\n            }\n        }\n    }\n\n    protected getGravity(): number {\n        return GRAVITY;\n    }\n\n    public getGround(): GameObject | null {\n        return this.ground;\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { BgmId, FadeDirection, GameScene } from \"./scenes/GameScene\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { Bounds, entity } from \"./Entity\";\nimport { boundsFromMapObject, isDev, rnd, rndInt, rndItem, sleep, timedRnd } from \"./util\";\nimport { CharacterAsset, VoiceAsset } from \"./Campaign\";\nimport { Cloud } from \"./Cloud\";\nimport { ControllerAnimationTags, ControllerSpriteMap } from \"./input/ControllerFamily\";\nimport { ControllerEvent } from \"./input/ControllerEvent\";\nimport { ControllerManager } from \"./input/ControllerManager\";\nimport { Conversation } from \"./Conversation\";\nimport { ConversationProxy } from \"./ConversationProxy\";\nimport { Dance } from \"./Dance\";\nimport {\n    DIALOG_FONT, DOUBLE_JUMP_COLORS, GRAVITY, MAX_PLAYER_RUNNING_SPEED, MAX_PLAYER_SPEED,\n    PLAYER_ACCELERATION, PLAYER_ACCELERATION_AIR, PLAYER_BOUNCE_HEIGHT, PLAYER_CARRY_HEIGHT,\n    PLAYER_HEIGHT, PLAYER_JUMP_HEIGHT, PLAYER_JUMP_TIMING_THRESHOLD, PLAYER_WIDTH,\n    SHORT_JUMP_GRAVITY\n} from \"./constants\";\nimport { Environment } from \"./World\";\nimport { GameObjectInfo } from \"./MapInfo\";\nimport { GotItemScene, Item } from \"./scenes/GotItemScene\";\nimport { NPC } from \"./NPC\";\nimport { ParticleEmitter, valueCurves } from \"./Particles\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\nimport { PlayerConversation } from \"./PlayerConversation\";\nimport { QuestATrigger, QuestKey } from \"./Quests\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { Seed, SeedState } from \"./Seed\";\nimport { Sign } from \"./Sign\";\nimport { Snowball } from \"./Snowball\";\nimport { Sound } from \"./Sound\";\nimport { SpeechBubble } from \"./SpeechBubble\";\nimport { Stone, StoneState } from \"./Stone\";\nimport { Wall } from \"./Wall\";\nimport { Wood, WoodState } from \"./Wood\";\n\nconst groundColors = [\n    \"#806057\",\n    \"#504336\",\n    \"#3C8376\",\n    \"#908784\"\n];\n\nconst bounceColors = [\n    \"#f06060\",\n    \"#e87f7f\",\n    \"#ff7070\"\n];\n\nconst drownThoughts = [\n    { message: \"OK, I'm not Jesus. Noted!\", duration: 4000 },\n    { message: \"Looks like I can't swim… But I can respawn, nice!\", duration: 5000 },\n    { message: \"Well, that was strange… And wet.\", duration: 4000 }\n];\n\nconst drowningThoughts = [\n    { message: \"Waah!\", duration: 1000 },\n    { message: \"Help!\", duration: 1000 },\n    { message: \"Mama!\", duration: 1000 },\n    { message: \"Ieeh!\", duration: 1000 },\n    { message: \"Argh!\", duration: 1000 }\n];\n\nexport enum Gender {\n    FEMALE = 0,\n    MALE = 1\n}\n\n/** The number of seconds until player gets a hint. */\nconst HINT_TIMEOUT = 90;\n\ninterface PlayerSpriteMetadata {\n    carryOffsetFrames?: number[];\n}\n\ntype AutoMove = {\n    destinationX: number;\n    lastX: number;\n    turnAround: boolean;\n};\n\n@entity(\"player\")\nexport class Player extends PhysicsEntity {\n    @asset([\n        \"sprites/pc/female.aseprite.json\",\n        \"sprites/pc/male.aseprite.json\"\n    ])\n    public static playerSprites: Aseprite[];\n\n    @asset([\n        \"sprites/buttons_keyboard.aseprite.json\",\n        \"sprites/buttons_xbox.aseprite.json\",\n        \"sprites/buttons_playstation.aseprite.json\"\n    ])\n    public static buttons: Aseprite[];\n\n    public controllerSpriteMapRecords: Record<ControllerSpriteMap, Aseprite> = {\n        [ControllerSpriteMap.KEYBOARD]: Player.buttons[0],\n        [ControllerSpriteMap.XBOX]: Player.buttons[1],\n        [ControllerSpriteMap.PLAYSTATION]: Player.buttons[2]\n    };\n\n    @asset(\"sounds/drowning/drowning.mp3\")\n    private static drowningSound: Sound;\n\n    @asset(\"sounds/feet-walking/steps_single.mp3\")\n    private static walkingSound: Sound;\n\n    @asset(\"sounds/throwing/throwing.mp3\")\n    private static throwingSound: Sound;\n\n    @asset(\"sounds/gate/door_open.mp3\")\n    private static enterGateSound: Sound;\n\n    @asset(\"sounds/gate/door_close.mp3\")\n    private static leaveGateSound: Sound;\n\n    @asset([\n        \"sounds/jumping/jumping_female.mp3\",\n        \"sounds/jumping/jumping.mp3\"\n    ])\n    private static jumpingSounds: Sound[];\n\n    @asset(\"sounds/jumping/landing.mp3\")\n    private static landingSound: Sound;\n\n    @asset(\"sounds/jumping/squish.mp3\")\n    private static bouncingSound: Sound;\n\n    @asset(DIALOG_FONT)\n    private static font: BitmapFont;\n\n    private lastHint = Date.now();\n    private flying = false;\n    public direction = 1;\n    private playerSpriteMetadata: PlayerSpriteMetadata[] | null = null;\n    public animation = \"idle\";\n    private moveLeft: boolean = false;\n    private moveRight: boolean = false;\n    private visible = false;\n\n    private running: boolean = false;\n\n    private jumpThresholdTimer = PLAYER_JUMP_TIMING_THRESHOLD;\n\n    public jumpDown: boolean = false;\n    private jumpKeyPressed: boolean | null = false;\n    private drowning = 0;\n    private dance: Dance | null = null;\n    private currentFailAnimation = 1;\n    private carrying: PhysicsEntity | null = null;\n    private canRun = false;\n    private canRainDance = false;\n    private doubleJump = false;\n    private multiJump = false;\n    private hasFriendship = false;\n    private usedJump = false;\n    private usedDoubleJump = false;\n    private autoMove: AutoMove | null = null;\n    public isControllable: boolean = true;\n    private showHints = false;\n\n    private characterAsset: CharacterAsset;\n    private voiceAsset: VoiceAsset;\n\n    public playerConversation: PlayerConversation | null = null;\n\n    public speechBubble = new SpeechBubble(\n        this.scene,\n        this.x, this.y,\n        undefined,\n        undefined, undefined, undefined, undefined,\n        undefined,\n        true\n    );\n\n    public thinkBubble: SpeechBubble | null = null;\n\n    private closestNPC: NPC | null = null;\n    private readableTrigger?: GameObjectInfo;\n    private dustEmitter: ParticleEmitter;\n    private bounceEmitter: ParticleEmitter;\n    private doubleJumpEmitter: ParticleEmitter;\n    private disableParticles = false;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, PLAYER_WIDTH, PLAYER_HEIGHT);\n\n        this.isControllable = false;\n        this.setFloating(true);\n\n        // Apply selected character traits\n        this.characterAsset = this.scene.game.campaign.selectedCharacter;\n        this.voiceAsset = this.scene.game.campaign.selectedVoice;\n        Conversation.setGlobal(\"ismale\", this.characterAsset === CharacterAsset.MALE ? \"true\" : \"false\");\n\n        setTimeout(() => {\n            this.isControllable = true;\n            this.visible = true;\n            this.setFloating(false);\n        }, 2200);\n\n        document.addEventListener(\"keydown\", event => this.handleKeyDown(event));\n\n        if (isDev()) {\n            console.log(\n                \"Dev mode, press “C” to dance anywhere, “P” to spawn the stone, “O” to spawn the \"\n                + \"seed, “I” to spawn wood, “T” to throw useless snowball, “K” to learn all \"\n                + \"abilities, “M” to show bounds of entities and triggers.\"\n            );\n        }\n\n        this.setMaxVelocity(MAX_PLAYER_RUNNING_SPEED);\n\n        this.dustEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 26, y: rnd(0.7, 1) * 45 }),\n            color: () => rndItem(groundColors),\n            size: rnd(1, 2),\n            gravity: {x: 0, y: -100},\n            lifetime: () => rnd(0.5, 0.8),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n\n        this.bounceEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 90, y: rnd(0.7, 1) * 60 }),\n            color: () => rndItem(bounceColors),\n            size: rnd(1.5, 3),\n            gravity: {x: 0, y: -120},\n            lifetime: () => rnd(0.4, 0.6),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n\n        this.doubleJumpEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 90, y: rnd(-1, 0) * 100 }),\n            color: () => rndItem(DOUBLE_JUMP_COLORS),\n            size: rnd(1.5, 3),\n            gravity: {x: 0, y: -120},\n            lifetime: () => rnd(0.4, 0.6),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n    }\n\n    public getControllable(): boolean {\n        return this.isControllable;\n    }\n\n    public setControllable(isControllable: boolean): void {\n        this.isControllable = isControllable;\n    }\n\n    public startAutoMove(x: number, turnAround: boolean) {\n        if (!this.autoMove) {\n            this.autoMove = {\n                destinationX: x,\n                lastX: this.x,\n                turnAround\n            };\n        }\n\n        // Failsafe to stop automove after 1 second.\n        setTimeout(() => {\n            if (this.autoMove) this.stopAutoMove();\n        }, 1000);\n    }\n\n    public stopAutoMove(): void {\n        if (this.autoMove?.turnAround) {\n            this.direction = this.direction * -1;\n        }\n\n        this.autoMove = null;\n        this.moveRight = false;\n        this.moveLeft = false;\n    }\n\n    public enableRunning(): void {\n        this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_RUNNING_ABILITY);\n\n        if (!this.canRun) {\n            this.scene.scenes.pushScene(GotItemScene, Item.RUNNING);\n            this.canRun = true;\n        }\n    }\n\n    public enableRainDance(): void {\n        this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.LEARNED_RAIN_DANCE);\n\n        if (!this.canRainDance) {\n            this.scene.scenes.pushScene(GotItemScene, Item.RAINDANCE);\n            this.canRainDance = true;\n        }\n    }\n\n    public enableDoubleJump(): void {\n        Conversation.setGlobal(\"hasDoubleJump\", \"true\");\n        this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_QUEST_FROM_TREE);\n\n        if (!this.doubleJump) {\n            this.scene.scenes.pushScene(GotItemScene, Item.DOUBLEJUMP);\n            this.doubleJump = true;\n        }\n    }\n\n    public enableMultiJump(): void {\n        this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_MULTIJUMP);\n\n        if (!this.multiJump) {\n            this.scene.scenes.pushScene(GotItemScene, Item.MULTIJUMP);\n            this.multiJump = true;\n        }\n    }\n\n    public disableMultiJump(): void {\n        this.multiJump = false;\n    }\n\n    public enableFriendship(): void {\n        if (!this.hasFriendship) {\n            this.scene.scenes.pushScene(GotItemScene, Item.FRIENDSHIP);\n            this.hasFriendship = true;\n            Conversation.setGlobal(\"hasFriendship\", \"true\");\n            this.scene.removeGameObject(this.scene.powerShiba);\n        }\n    }\n\n    public removePowerUps(): void {\n        this.multiJump = false;\n        this.doubleJump = false;\n        this.canRun = false;\n    }\n\n    public getDance(): Dance | null {\n        return this.dance;\n    }\n\n    public cancelDance(): void {\n        this.dance = null;\n    }\n\n    public async handleButtonDown(event: ControllerEvent): Promise<void> {\n        if (this.scene.paused || !this.isControllable || this.autoMove) {\n            return;\n        }\n\n        if (this.dance) {\n            this.dance.handleButtonDown(event);\n            return;\n        }\n\n        if (!this.scene.camera.isOnTarget() || event.repeat) {\n            return;\n        }\n\n        if (this.playerConversation) {\n            this.playerConversation.handleButton(event);\n            return;\n        }\n\n        if (this.canRun && event.isPlayerRun) {\n            this.running = true;\n        }\n\n        if (event.isPlayerMoveRight) {\n            this.moveRight = true;\n            this.moveLeft = false;\n        } else if (event.isPlayerMoveLeft) {\n            this.moveLeft = true;\n            this.moveRight = false;\n        } else if (event.isPlayerEnterDoor) {\n            if (!this.canEnterDoor()) return;\n            const gate = this.scene.world.getGateCollisions(this)[0];\n            this.enterGate(gate);\n        } else if (event.isPlayerInteract) {\n            // Check for gates / doors\n            if (!this.flying) {\n                if (\n                    this.closestNPC\n                    && this.closestNPC.isReadyForConversation()\n                    && this.closestNPC.conversation\n                ) {\n                    const conversation = this.closestNPC.conversation;\n\n                    // Disable auto movement to a safe talking distance for the stone in the river\n                    const autoMove = (\n                        this.closestNPC instanceof Sign\n                        || (\n                            this.closestNPC instanceof Stone\n                            && this.closestNPC.state !== StoneState.DEFAULT\n                        ) ? false : true\n                    );\n\n                    this.playerConversation = new PlayerConversation(\n                        this, this.closestNPC, conversation, autoMove\n                    );\n                } else if (this.readableTrigger) {\n                    const proxy = new ConversationProxy(\n                        this.scene, this.x, this.y, this.readableTrigger.properties\n                    );\n\n                    this.playerConversation = new PlayerConversation(\n                        this, proxy, proxy.conversation, false\n                    );\n                } else if (this.canDanceToMakeRain()) {\n                    this.startDance(this.scene.apocalypse ? 3 : 2);\n                    this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.MADE_RAIN);\n                }\n            }\n        } else if (event.isPlayerAction) {\n            if (this.isCarrying()) this.throw();\n        } else if (event.isPlayerJump && this.canJump()) {\n            this.jumpKeyPressed = true;\n            this.jump();\n        } else if (event.isPlayerDrop) {\n            this.jumpDown = true;\n        }\n    }\n\n    public throw(): void {\n        if (!this.carrying || (this.carrying instanceof Stone && !this.canThrowStoneIntoWater())) {\n            return;\n        }\n\n        if (this.carrying instanceof Stone) {\n            this.carrying.setVelocity(10 * this.direction, 10);\n        } else {\n            this.carrying.setVelocity(5 * this.direction, 5);\n        }\n\n        this.height = PLAYER_HEIGHT;\n        this.carrying = null;\n\n        Player.throwingSound.stop();\n        Player.throwingSound.play();\n    }\n\n    // Used in dev mode to enable some special keys that can only be triggered by using a keyboard.\n    public handleKeyDown(event: KeyboardEvent): void {\n        if (this.scene.paused) {\n            return;\n        }\n\n        if (!this.scene.camera.isOnTarget() || event.repeat) {\n            return;\n        }\n\n        if (isDev()) {\n            if (event.key === \"c\") {\n                // TODO Just for debugging. Real dancing is with action key on rain cloud\n                this.startDance(3);\n            } else if (event.key === \"p\" && !this.carrying) {\n                // TODO Just for debugging, this must be removed later\n                this.carry(this.scene.stone);\n            } else if (event.key === \"o\" && !this.carrying) {\n                this.carry(this.scene.tree.spawnSeed());\n            } else if (event.key === \"u\" && !this.carrying) {\n                this.carry(this.scene.bone);\n            } else if (event.key === \"i\" && !this.carrying) {\n                this.carry(this.scene.tree.seed.spawnWood());\n            } else if (event.key === \"t\") {\n                this.scene.gameObjects.push(\n                    new Snowball(\n                        this.scene,\n                        this.x, this.y + this.height * 0.75,\n                        20 * this.direction,\n                        10\n                    )\n                );\n\n                Player.throwingSound.stop();\n                Player.throwingSound.play();\n            } else if (event.key === \"k\") {\n                this.multiJump = true;\n                this.doubleJump = true;\n                this.canRun = true;\n                this.canRainDance = true;\n                this.think(\"I can do everything now.\", 1500);\n            } else if (event.key === \"m\") {\n                this.scene.showBounds = !this.scene.showBounds;\n                this.think(\"Toggling bounds.\", 1500);\n            }\n        }\n    }\n\n    public async think(message: string, time: number): Promise<void> {\n        if (this.thinkBubble) {\n            this.thinkBubble.hide();\n            this.thinkBubble = null;\n        }\n\n        const thinkBubble = this.thinkBubble = new SpeechBubble(\n            this.scene, this.x, this.y\n        );\n\n        thinkBubble.setMessage(message);\n        thinkBubble.show();\n\n        await sleep(time);\n\n        if (this.thinkBubble === thinkBubble) {\n            thinkBubble.hide();\n            this.thinkBubble = null;\n        }\n    }\n\n    public startDance(difficulty: number = 1): void {\n        if (!this.dance) {\n            switch (difficulty) {\n                case 1:\n                    this.dance = new Dance(\n                        this.scene,\n                        this.x, this.y - 25,\n                        100,\n                        \"  1 1 2 2 1 2 1 3\",\n                        undefined,\n                        1,\n                        undefined,\n                        true,\n                        0\n                    );\n                    break;\n                case 2:\n                    this.dance = new Dance(\n                        this.scene,\n                        this.x, this.y - 25,\n                        192,\n                        \"1   2   1 1 2 2 121 212 121 212 3    \",\n                        undefined,\n                        3\n                    );\n                    break;\n                case 3:\n                    this.dance = new Dance(\n                        this.scene,\n                        this.x, this.y - 25,\n                        192,\n                        \"112 221 312 123 2121121 111 222 3    \",\n                        undefined,\n                        4\n                    );\n                    break;\n                default:\n                    this.dance = new Dance(\n                        this.scene,\n                        this.x, this.y - 25,\n                        192,\n                        \"3\"\n                    );\n            }\n        }\n    }\n\n    /**\n     * Teleport the player from the source gate to it's corresponding target gate.\n     * The teleport is not instant but accompanied by a fade to black to obscure the teleportation.\n     * Also sets the camera bounds to the target position\n     * @param gate the source the player enters\n     */\n    private enterGate(gate: GameObjectInfo): void {\n        if (gate && gate.properties.target) {\n            this.isControllable = false;\n            this.moveRight = false;\n            this.moveLeft = false;\n\n            const targetGate = this.scene.gateObjects.find(\n                target => target.name === gate.properties.target\n            );\n\n            const targetBgmId = gate.properties.bgm;\n\n            if (targetGate) {\n                Player.enterGateSound.stop();\n                Player.enterGateSound.play();\n\n                this.scene.fadeToBlack(0.8, FadeDirection.FADE_OUT)\n                    .then(() => {\n                        if (targetBgmId) {\n                            this.scene.setActiveBgmTrack(targetBgmId as BgmId);\n                        }\n\n                        Player.leaveGateSound.stop();\n                        Player.leaveGateSound.play();\n\n                        this.x = targetGate.x + (targetGate.width / 2);\n                        this.y = targetGate.y - targetGate.height;\n\n                        this.scene.camera.setBounds(this.getCurrentMapBounds());\n\n                        this.scene.fadeToBlack(0.8, FadeDirection.FADE_IN).then(() => {\n                            this.isControllable = true;\n                        });\n                    });\n            }\n        }\n    }\n\n    private canJump(): boolean {\n        if (this.multiJump) {\n            return true;\n        } else if (!this.usedJump && this.jumpThresholdTimer > 0) {\n            return true;\n        } else if (this.doubleJump) {\n            return !this.usedDoubleJump;\n        }\n\n        return !this.flying;\n    }\n\n    private jump(): void {\n        if (this.drowning > 0) return;\n\n        this.setVelocityY(Math.sqrt(2 * PLAYER_JUMP_HEIGHT * GRAVITY));\n        Player.jumpingSounds[this.voiceAsset].stop();\n        Player.jumpingSounds[this.voiceAsset].play();\n\n        if (this.flying && this.usedJump) {\n            this.usedDoubleJump = true;\n            if (!this.disableParticles && this.visible) {\n                this.doubleJumpEmitter.setPosition(this.x, this.y + 20);\n                this.doubleJumpEmitter.emit(20);\n            }\n        }\n\n        this.usedJump = true;\n    }\n\n    public handleButtonUp(event: ControllerEvent): void {\n        if (this.scene.paused || !this.isControllable || this.autoMove) {\n            return;\n        }\n\n        if (event.isPlayerMoveRight) {\n            this.moveRight = false;\n        } else if (event.isPlayerMoveLeft) {\n            this.moveLeft = false;\n        } else if (event.isPlayerJump) {\n            this.jumpKeyPressed = false;\n        } else if (event.isPlayerDrop) {\n            this.jumpDown = false;\n        } else if (event.isPlayerRun) {\n            this.running = false;\n        }\n    }\n\n    private drawTooltip(\n        text: string, buttonTag: ControllerAnimationTags = ControllerAnimationTags.ACTION\n    ): void {\n        const controllerSprite = ControllerManager.getInstance().controllerSprite;\n        const measure = Player.font.measureText(text);\n        const gap = 6;\n        const offsetY = 12;\n        const textPositionX = Math.round(Math.round(this.x) - ((measure.width - this.controllerSpriteMapRecords[controllerSprite].width + gap) / 2));\n        const textPositionY = -this.y + offsetY;\n\n\n        this.scene.renderer.add({\n            type: RenderingType.ASEPRITE,\n            layer: RenderingLayer.UI,\n            position: {\n                x: textPositionX - this.controllerSpriteMapRecords[controllerSprite].width - gap,\n                y: textPositionY\n            },\n            asset: this.controllerSpriteMapRecords[controllerSprite],\n            animationTag: buttonTag,\n        });\n\n        this.scene.renderer.add({\n            type: RenderingType.TEXT,\n            layer: RenderingLayer.UI,\n            text,\n            textColor: \"white\",\n            outlineColor: \"black\",\n            position: {\n                x: textPositionX,\n                y: textPositionY\n            },\n            asset: Player.font,\n        });\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (!this.visible) {\n            return;\n        }\n\n        const sprite = Player.playerSprites[this.characterAsset];\n        let animation = this.animation;\n\n        // TODO: Implement animation state concept instead of `animation === \"idle\" || animation === \"walk\" || …`\n        if (\n            this.carrying\n            && (animation === \"idle\" || animation === \"walk\" || animation === \"jump\" || animation === \"fall\")\n        ) {\n            animation = animation + \"-carry\";\n        }\n\n        this.scene.renderer.addAseprite(\n            sprite,\n            animation,\n            this.x, this.y - 1,\n            RenderingLayer.PLAYER,\n            this.direction\n        );\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        if (\n            this.closestNPC\n            && !this.dance\n            && !this.playerConversation\n            && this.closestNPC.isReadyForConversation()\n        ) {\n            this.drawTooltip(this.closestNPC.getInteractionText(), ControllerAnimationTags.INTERACT);\n        } else if (this.readableTrigger) {\n            this.drawTooltip(\"Examine\", ControllerAnimationTags.INTERACT);\n        } else if (this.canEnterDoor()) {\n            this.drawTooltip(\"Enter\", ControllerAnimationTags.OPEN_DOOR);\n        } else if (this.canThrowStoneIntoWater()) {\n            this.drawTooltip(\"Throw stone\", ControllerAnimationTags.ACTION);\n        } else if (this.canThrowSeedIntoSoil()) {\n            this.drawTooltip(\"Plant seed\", ControllerAnimationTags.ACTION);\n        } else if (this.canDanceToMakeRain()) {\n            this.drawTooltip(\"Dance\", ControllerAnimationTags.INTERACT);\n        }\n\n        if (this.dance) {\n            this.dance.addDanceToRenderQueue();\n        }\n\n        this.speechBubble.draw(ctx);\n\n        if (this.thinkBubble) {\n            this.thinkBubble.draw(ctx);\n        }\n    }\n\n    private canThrowStoneIntoWater(): boolean {\n        return (\n            this.carrying instanceof Stone\n            && (\n                this.direction === -1\n                && this.scene.world.collidesWith(\n                    this.x - 30, this.y - 20\n                ) === Environment.WATER\n            )\n        );\n    }\n\n    private canThrowSeedIntoSoil(): boolean {\n        return (\n            this.carrying instanceof Seed\n            && (\n                this.direction === -1\n                && this.scene.world.collidesWith(this.x - 30, this.y + 2) === Environment.SOIL\n            )\n        );\n    }\n\n    public debugCollisions(): void {\n        console.log(\"Entities: \",this.scene.world.getEntityCollisions(this));\n        console.log(\"Triggers: \",this.scene.world.getTriggerCollisions(this));\n        console.log(\"Gates: \",this.scene.world.getGateCollisions(this));\n    }\n\n    private getReadableTrigger(): GameObjectInfo | undefined {\n        const triggers = this.scene.world.getTriggerCollisions(this);\n        if (triggers.length === 0) return undefined;\n\n        return triggers.find(t => t.name === \"readable\");\n    }\n\n    private canDanceToMakeRain(): boolean {\n        if (!this.canRainDance) return false;\n\n        const ground = this.getGround();\n\n        return (\n            (\n                this.isCollidingWithTrigger(\"raincloud_sky\")\n                && !this.scene.world.isRaining()\n                && this.carrying === null\n                && !this.scene.apocalypse\n            ) || (\n                ground instanceof Cloud\n                && this.scene.apocalypse\n                && !ground.isRaining()\n                && ground.canRain()\n            )\n        );\n    }\n\n    private canEnterDoor(): boolean {\n        return !this.flying && !this.carrying && this.scene.world.getGateCollisions(this).length > 0;\n    }\n\n    /**\n     * Returns the bounds of the map area the player currently resides in\n     */\n    public getCurrentMapBounds(): Bounds | undefined {\n        const collisions = this.scene.world.getCameraBounds(this);\n        if (collisions.length === 0) return undefined;\n        return boundsFromMapObject(collisions[0]);\n    }\n\n    private respawn(): void {\n        this.x = this.lastGroundPosition.x;\n        this.y = this.lastGroundPosition.y + 10;\n        this.setVelocity(0, 0);\n    }\n\n    private getPlayerSpriteMetadata(): PlayerSpriteMetadata[] {\n        if (this.playerSpriteMetadata == null) {\n            this.playerSpriteMetadata = Player.playerSprites.map(sprite => {\n                const metaDataJSON = sprite.getLayer(\"Meta\")?.data;\n                return metaDataJSON ? JSON.parse(metaDataJSON) : {};\n            });\n        }\n\n        return this.playerSpriteMetadata;\n    }\n\n    private resetJumps(): void {\n        this.usedJump = false;\n        this.usedDoubleJump = false;\n        this.jumpThresholdTimer = PLAYER_JUMP_TIMING_THRESHOLD;\n    }\n\n    private isOutOfBounds (): boolean {\n        if (!this.isControllable) return false;\n        const mapBounds = this.scene.camera.getBounds();\n        if (!mapBounds) return false;\n\n        return !this.scene.world.boundingBoxesCollide(this.getBounds(), {\n            x: mapBounds.x + 4,\n            y: mapBounds.y - 4,\n            width: mapBounds.width - 8,\n            height: mapBounds.height - 8\n        });\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n        const triggerCollisions = this.scene.world.getTriggerCollisions(this);\n\n        // Check if the player left the current map bounds and teleport him back to a valid position.\n        if (this.isOutOfBounds()) {\n            const pos = this.scene.apocalypse ?\n                this.scene.pointsOfInterest.find(poi => poi.name === \"boss_spawn\") :\n                this.scene.pointsOfInterest.find(poi => poi.name === \"player_reset_position\");\n            if (pos) {\n                this.x = pos.x;\n                this.y = pos.y;\n                this.scene.camera.setBounds(this.getCurrentMapBounds());\n            }\n        }\n\n        this.speechBubble.update(this.x, this.y);\n\n        if (this.thinkBubble) {\n            this.thinkBubble.update(this.x, this.y);\n        }\n\n        if (this.playerConversation) {\n            this.playerConversation.update();\n        }\n\n        if (this.showHints) {\n            if ((Date.now() - this.lastHint) / 1000 > HINT_TIMEOUT) {\n                this.showHint();\n            }\n        }\n\n        if (this.carrying) {\n            if (this.running) {\n                this.running = false;\n                this.animation = \"walk\";\n            }\n\n            this.carrying.x = this.x;\n\n            const currentFrameIndex = Player.playerSprites[this.characterAsset].getTaggedFrameIndex(\n                this.animation + \"-carry\",\n                this.scene.gameTime * 1000\n            );\n\n            const carryOffsetFrames = this.getPlayerSpriteMetadata()[this.characterAsset].carryOffsetFrames ?? [];\n            const offset = carryOffsetFrames.includes(currentFrameIndex + 1) ? 0 : -1;\n            this.carrying.y = this.y + (this.height - this.carrying.carryHeight) - offset;\n\n            if (this.carrying instanceof Stone) {\n                this.carrying.direction = this.direction;\n            }\n        }\n\n        const isDrowning = this.scene.world.collidesWith(this.x, this.y) === Environment.WATER;\n\n        if (isDrowning) {\n            if (!this.thinkBubble) {\n                const thought = drowningThoughts[rndInt(0, drowningThoughts.length)];\n                this.think(thought.message, thought.duration);\n            }\n\n            if (this.carrying instanceof Stone) {\n                this.carrying.setVelocity(-2, 10);\n                this.carrying = null;\n            }\n\n            if (this.drowning === 0) {\n                Player.drowningSound.play();\n            }\n\n            this.setVelocityX(0);\n            this.drowning += dt;\n\n            if (this.drowning > 3) {\n                Player.drowningSound.stop();\n                this.respawn();\n                const thought = drownThoughts[rndInt(0, drownThoughts.length)];\n                this.think(thought.message, thought.duration);\n            }\n        } else {\n            this.drowning = 0;\n        }\n\n        const world = this.scene.world;\n        const wasFlying = this.flying;\n        const prevVelocity = this.getVelocityY();\n\n        // Apply auto movement\n        if (this.autoMove) {\n            if (\n                (this.autoMove.lastX - this.autoMove.destinationX) * (this.x - this.autoMove.destinationX) <= 0\n            ) {\n                // Reached or overreached destination\n                this.stopAutoMove();\n            } else {\n                // Not yet reached, keep going\n                this.autoMove.lastX = this.x;\n\n                if (this.x < this.autoMove.destinationX) {\n                    this.moveRight = true;\n                    this.moveLeft = false;\n                } else {\n                    this.moveRight = false;\n                    this.moveLeft = true;\n                }\n            }\n        }\n\n        // Player movement\n        if (!this.scene.camera.isOnTarget()) {\n            this.moveRight = false;\n            this.moveLeft = false;\n        }\n\n        const acceleration = this.flying ? PLAYER_ACCELERATION_AIR : PLAYER_ACCELERATION;\n\n        if (!isDrowning) {\n            if (this.running) {\n                this.setMaxVelocity(MAX_PLAYER_RUNNING_SPEED);\n            } else {\n                this.setMaxVelocity(MAX_PLAYER_SPEED);\n            }\n\n            if (this.moveRight) {\n                this.direction = 1;\n\n                if (!this.flying) {\n                    Player.walkingSound.play();\n                }\n\n                this.accelerateX(acceleration * dt);\n            } else if (this.moveLeft) {\n                this.direction = -1;\n\n                if (!this.flying) {\n                    Player.walkingSound.play();\n                }\n\n                this.accelerateX(-acceleration * dt);\n            } else {\n                Player.walkingSound.stop();\n\n                if (this.getVelocityX() > 0) {\n                    this.decelerateX(acceleration * dt);\n                } else {\n                    this.decelerateX(-acceleration * dt);\n                }\n            }\n        }\n\n        // Set sprite index depending on movement\n        if (this.getVelocityX() === 0 && this.getVelocityY() === 0) {\n            this.animation = \"idle\";\n            this.flying = false;\n            this.resetJumps();\n        } else {\n            if (this.getVelocityY() > 0) {\n                this.animation = \"jump\";\n                this.flying = true;\n            } else if (\n                isDrowning\n                || (\n                    this.getVelocityY() < 0\n                    && this.y - world.getGround(this.x, this.y) > 10\n                )\n            ) {\n                if (this.jumpThresholdTimer < 0 || this.usedJump) {\n                    this.animation = \"fall\";\n                }\n\n                this.flying = true;\n            } else {\n                this.animation = (this.running && !this.carrying) ? \"run\" : \"walk\";\n                this.flying = false;\n                this.resetJumps();\n            }\n        }\n\n        if (wasFlying && !this.flying) {\n            Player.landingSound.stop();\n            Player.landingSound.play();\n        }\n\n        // Reduce jump threshold timer when player did not jump yet when falling off an edge\n        if (this.flying && !this.usedJump && this.jumpThresholdTimer > 0) {\n            this.jumpThresholdTimer -= dt;\n        }\n\n        // Check for NPC's that can be interacted with. Reset closestNPC and get all entities that\n        // collide with the player with an added 5 px of margin. If there are multiple NPCs\n        // colliding, the closest one will be chosen.\n        this.closestNPC = null;\n        const entities = this.scene.world.getEntityCollisions(this, 5);\n\n        if (entities.length > 0) {\n            const closestEntity = entities.length > 1 ? this.getClosestEntity() : entities[0];\n\n            if (closestEntity instanceof NPC) {\n                this.closestNPC = closestEntity;\n            }\n        }\n\n        // Check for readables in player trigger collisions\n        this.readableTrigger = this.getReadableTrigger();\n\n        // Spawn random dust particles while walking\n        if (!this.disableParticles && this.visible) {\n            if (!this.flying && (Math.abs(this.getVelocityX()) > 1 || wasFlying)) {\n                if (timedRnd(dt, 0.2) || wasFlying) {\n                    this.dustEmitter.setPosition(this.x, this.y);\n                    const count = wasFlying ? Math.ceil(Math.abs(prevVelocity) / 5) : 1;\n                    this.dustEmitter.emit(count);\n                }\n            }\n        }\n\n        // Reset jump key state when on ground\n        if (!this.flying && this.jumpKeyPressed != null) {\n            this.jumpKeyPressed = null;\n        }\n\n        // Bounce\n        if (\n            this.scene.world.collidesWith(\n                this.x, this.y - 2,\n                [ this ]\n            ) === Environment.BOUNCE\n        ) {\n            this.bounce();\n        }\n\n        // Dance\n        if (this.dance) {\n            if (this.dance.hasStarted()) {\n                // Basic dancing or error?\n                const err = this.dance.getTimeSinceLastMistake();\n                const suc = this.dance.getTimeSinceLastSuccess();\n\n                if (err < 1 || suc < 3) {\n                    if (err <= suc) {\n                        if (err === 0) {\n                            this.currentFailAnimation = rndInt(1, 3);\n                        }\n\n                        this.animation = \"dance-fluke-\" + this.currentFailAnimation;\n                    } else {\n                        this.animation = \"dance\";\n                    }\n                }\n            }\n\n            this.dance.setPosition(this.x, this.y - 16);\n            const done = this.dance.update();\n\n            if (done) {\n                // On cloud -> make it rain\n                if (this.dance.wasSuccessful()) {\n                    // (Useless because wrong cloud but hey…)\n                    const ground = this.getGround();\n\n                    if (ground && ground instanceof Cloud) {\n                        ground.startRain(this.scene.apocalypse ? Infinity : 15);\n\n                        // Camera focus to boss for each triggered rain cloud\n                        const bossPointer = this.scene.pointsOfInterest.find(\n                            poi => poi.name === \"boss_spawn\"\n                        );\n\n                        if (bossPointer) {\n                            this.scene.camera.focusOn(\n                                3,\n                                bossPointer.x, bossPointer.y + 60,\n                                1,\n                                0,\n                                valueCurves.cos(0.35)\n                            );\n                        }\n\n                        // Remove a single boss fight barrier\n                        const rainingCloudCount = this.scene.gameObjects.filter(\n                            o => o instanceof Cloud && o.isRaining()\n                        ).length;\n\n                        const wallIdentifier = `wall${rainingCloudCount - 1}`;\n\n                        const targetWall = this.scene.gameObjects.find(\n                            o => o instanceof Wall && o.identifier === wallIdentifier\n                        ) as Wall | undefined;\n\n                        if (targetWall) {\n                            targetWall.crumble();\n                        }\n                    }\n\n                    if (this.isCollidingWithTrigger(\"raincloud_sky\")) {\n                        this.scene.world.startRain();\n                    }\n                }\n                this.dance = null;\n            }\n        }\n\n        this.disableParticles = false;\n\n        // Logic from triggers\n        if (triggerCollisions.length > 0) {\n            triggerCollisions.forEach(trigger => {\n                // Handle MountainRiddle logic\n                if (trigger.name === \"reset_mountain\") {\n                    this.scene.mountainRiddle.resetRiddle();\n                }\n\n                if (trigger.name === \"mountaingate\") {\n                    const row = trigger.properties.row;\n                    const col = trigger.properties.col;\n\n                    if (col != null && row != null) {\n                        this.scene.mountainRiddle.checkGate(col, row);\n                    }\n                }\n\n                if (\n                    trigger.name === \"teleporter\"\n                    && this.scene.mountainRiddle.isFailed()\n                    && !this.scene.mountainRiddle.isCleared()\n                ) {\n                    const teleportY = trigger.properties.teleportY;\n\n                    if (teleportY) {\n                        this.y -= teleportY;\n                    }\n                }\n\n                if (trigger.name === \"finish_mountain_riddle\") {\n                    this.scene.mountainRiddle.clearRiddle();\n                }\n\n                // Disable particle effects while in trigger\n                const disableParticles = trigger.properties.disableParticles;\n\n                if (disableParticles) {\n                    this.disableParticles = true;\n                }\n\n                // Set Global Conversation Variables from map triggers\n                const globalConversationProps = {\n                    key: trigger.properties.setGlobalKey,\n                    value: trigger.properties.setGlobalVal\n                };\n\n                if (globalConversationProps.key && globalConversationProps.value) {\n                    Conversation.setGlobal(globalConversationProps.key, globalConversationProps.value);\n                }\n\n                // Enable Conversion Trees from map triggers\n                const enableConversationProps = {\n                    key: trigger.properties.setDialogEntity,\n                    value: trigger.properties.setDialogValue\n                };\n\n                if (enableConversationProps.key && enableConversationProps.value) {\n                    this.scene.game.campaign.runAction(\n                        \"enable\", null, [enableConversationProps.key, enableConversationProps.value]\n                    );\n                }\n            });\n        }\n    }\n\n\n    /**\n     * If given coordinate collides with the world then the first free y coordinate above is\n     * returned. This can be used to unstuck an object after a new position was set.\n     *\n     * @param x - X coordinate of current position.\n     * @param y - Y coordinate of current position.\n     * @return The Y coordinate of the ground below the given coordinate.\n     */\n    private pullOutOfGround(): number {\n        let pulled = 0, col = 0;\n\n        if (this.getVelocityY() <= 0) {\n            const world = this.scene.world;\n            const height = world.getHeight();\n\n            col = world.collidesWith(\n                this.x, this.y,\n                [ this ],\n                this.jumpDown ? [ Environment.PLATFORM, Environment.WATER ] : [ Environment.WATER ]\n            );\n\n            while (this.y < height && col) {\n                pulled++;\n                this.y++;\n                col = world.collidesWith(this.x, this.y);\n            }\n        }\n\n        return pulled;\n    }\n\n    private bounce(): void {\n        this.setVelocityY(Math.sqrt(2 * PLAYER_BOUNCE_HEIGHT * GRAVITY));\n        // Nice bouncy particles\n        this.bounceEmitter.setPosition(this.x, this.y - 12);\n        this.bounceEmitter.emit(20);\n        this.dustEmitter.clear();\n\n        Player.bouncingSound.stop();\n        Player.bouncingSound.play();\n    }\n\n    /**\n     * If given coordinate collides with the world then the first free y coordinate above is\n     * returned. This can be used to unstuck an object after a new position was set.\n     *\n     * @param x - X coordinate of current position.\n     * @param y - Y coordinate of current position.\n     * @return The Y coordinate of the ground below the given coordinate.\n     */\n    private pullOutOfCeiling(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        while (\n            this.y > 0\n            && world.collidesWith(\n                this.x, this.y + this.height,\n                [ this ],\n                [ Environment.PLATFORM, Environment.WATER ]\n            )\n        ) {\n            pulled++;\n            this.y--;\n        }\n\n        return pulled;\n    }\n\n    private pullOutOfWall(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        if (this.getVelocityX() > 0) {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x + this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x--;\n                pulled++;\n            }\n        } else {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x - this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x++;\n                pulled++;\n            }\n        }\n\n        return pulled;\n    }\n\n    protected updatePosition(newX: number, newY: number): void {\n        this.x = newX;\n        this.y = newY;\n\n        // Check collision with the environment and correct player position and movement\n        if (this.pullOutOfGround() !== 0 || this.pullOutOfCeiling() !== 0) {\n            this.setVelocityY(0);\n        }\n\n        if (this.pullOutOfWall() !== 0) {\n            this.setVelocityX(0);\n        }\n    }\n\n    protected getGravity(): number {\n        if (this.flying && this.jumpKeyPressed === false && this.getVelocityY() > 0) {\n            return SHORT_JUMP_GRAVITY;\n        } else {\n            return GRAVITY;\n        }\n    }\n\n    public carry(object: PhysicsEntity): void {\n        if (!this.carrying) {\n            this.height = PLAYER_HEIGHT + object.carryHeight + PLAYER_CARRY_HEIGHT;\n\n            if (\n                object instanceof Seed\n                && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_SEED\n            ) {\n                this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_SEED);\n            }\n\n            if (\n                object instanceof Wood\n                && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_WOOD\n            ) {\n                this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_WOOD);\n                this.scene.game.campaign.runAction(\"enable\", null, [\"fire\", \"fire1\"]);\n            }\n\n            if (\n                object instanceof Stone\n                && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_STONE\n            ) {\n                this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_STONE);\n            }\n\n            this.carrying = object;\n            object.setFloating(false);\n\n            if (object instanceof Stone) {\n                object.state = StoneState.DEFAULT;\n            }\n\n            if (object instanceof Seed) {\n                object.state = SeedState.FREE;\n            }\n\n            if (object instanceof Wood) {\n                object.state = WoodState.FREE;\n            }\n            object.x = this.x;\n            object.y = this.y + this.height;\n            object.setVelocity(0, 0);\n        }\n    }\n\n    public isCarrying(object?: PhysicsEntity): boolean {\n        if (object) {\n            return this.carrying === object;\n        } else {\n            return this.carrying != null;\n        }\n    }\n\n    public showHint(): void {\n        if (this.playerConversation === null) {\n            switch (this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex()) {\n                case QuestATrigger.JUST_ARRIVED:\n                    this.think(\"I should talk to someone.\", 3000);\n                    break;\n                case QuestATrigger.TALKED_TO_FIRE:\n                    this.think(\"I think the fire needs my help.\", 3000);\n                    break;\n                case QuestATrigger.GOT_QUEST_FROM_FIRE:\n                    this.think(\"The fire told me to visit the tree in the east.\", 3000);\n                    break;\n                case QuestATrigger.TALKED_TO_TREE:\n                    this.think(\"Maybe I should talk to the tree again.\", 3000);\n                    break;\n                case QuestATrigger.GOT_QUEST_FROM_TREE:\n                    this.think(\"I need to pick up the seed by the tree.\", 3000);\n                    break;\n                case QuestATrigger.GOT_SEED:\n                    this.think(\"I should check the mountains for a good place for the seed.\", 3000);\n                    break;\n                case QuestATrigger.PLANTED_SEED:\n                    this.think(\"The seed needs something to grow, I think.\", 3000);\n                    break;\n                case QuestATrigger.TALKED_TO_STONE:\n                    this.think(\"I should talk to that crazy stone again.\", 3000);\n                    break;\n                case QuestATrigger.GOT_STONE:\n                    this.think(\"My arms get heavy. I really should throw that thing in the river.\", 3000);\n                    break;\n                case QuestATrigger.THROWN_STONE_INTO_WATER:\n                    this.think(\"There must be something interesting west of the river.\", 3000);\n                    break;\n                case QuestATrigger.GOT_MULTIJUMP:\n                    this.think(\"I should check the clouds. The seed still needs something to grow.\", 3000);\n                    break;\n                case QuestATrigger.MADE_RAIN:\n                    this.think(\"I should talk to that singing tree again.\", 3000);\n                    break;\n                case QuestATrigger.GOT_WOOD:\n                    this.think(\"Quick! The fire needs wood!\", 3000);\n                    break;\n            }\n        }\n\n        this.lastHint = Date.now();\n    }\n}\n","import { ControllerEvent } from \"./input/ControllerEvent\";\nimport { Conversation, Interaction } from \"./Conversation\";\nimport { MenuList } from \"./Menu\";\nimport { NPC } from \"./NPC\";\nimport { Player } from \"./Player\";\n\nexport class PlayerConversation {\n    private interaction: Interaction | null = null;\n    private selectedOption = -1;\n\n    constructor(\n        private readonly player: Player,\n        public readonly npc: NPC,\n        private readonly conversation: Conversation,\n        private readonly autoMove = true\n    ) {\n        this.interaction = this.conversation.getNextInteraction();\n        this.setSelectedOption(0);\n        this.setBubblesContent();\n        this.interaction?.npcLine?.executeBeforeLine();\n        npc.meet();\n\n        // Ensure safe distance to NPC\n        if (this.autoMove) {\n            const minDis = 20;\n\n            if (Math.abs(player.x - npc.x) < minDis) {\n                if (player.x < npc.x) {\n                    player.startAutoMove(npc.x - minDis, true);\n                } else {\n                    player.startAutoMove(npc.x + minDis, true);\n                }\n            }\n        }\n    }\n\n    /**\n     * Returns true if conversation has been terminated (one way or the other)\n     */\n    public update(): boolean {\n        if (!this.interaction || this.conversation.hasEnded()) {\n            if (this.player.playerConversation != null) {\n                this.endConversation();\n            }\n\n            return true;\n        }\n\n        this.player.scene.camera.setCinematicBar(1);\n\n        return false;\n    }\n\n    private setBubblesContent(): void {\n        if (this.interaction) {\n            const optionsTexts = this.interaction.options.map(options => options.line);\n\n            if (this.interaction.npcLine) {\n                this.npc.speechBubble.setMessage(this.interaction.npcLine.line);\n                this.npc.speechBubble.show();\n            }\n\n            if (optionsTexts.length > 0) {\n                this.setSelectedOption(0);\n                this.player.speechBubble.setOptions(optionsTexts, this.npc.speechBubble);\n                this.player.speechBubble.show();\n            }\n        }\n    }\n\n    private setSelectedOption(num = 0): number {\n        if (this.interaction && this.interaction.options && this.interaction.options.length > 0) {\n            let sel = num % this.interaction.options.length;\n\n            if (sel < 0) {\n                sel += this.interaction.options.length;\n            }\n\n            this.selectedOption = sel;\n        } else {\n            this.selectedOption = -1;\n        }\n\n        this.player.speechBubble.selectedOptionIndex = this.selectedOption;\n\n        return this.selectedOption;\n    }\n\n    public handleButton(e: ControllerEvent): void {\n        if (e.isAbort && !e.isPause) {\n            this.endConversation();\n        } else if (!e.repeat) {\n            // Enter to proceed\n            if (e.isConfirm) {\n                this.proceed();\n            }\n\n            const upDown = (e.isMenuDown ? 1 : 0) - (e.isMenuUp ? 1 : 0);\n\n            if (upDown !== 0) {\n                MenuList.click.stop();\n                MenuList.click.play();\n                this.setSelectedOption(this.selectedOption + upDown);\n            }\n        }\n    }\n\n    private proceed(): void {\n        if (this.interaction) {\n            if (this.npc.speechBubble.isCurrentlyWriting || this.npc.speechBubble.preventUnwantedSelection) {\n                this.npc.speechBubble.isCurrentlyWriting = false;\n                return;\n            }\n\n            const options = this.interaction.options;\n\n            if (options && options.length > 0) {\n                // Player could choose between options, confirmed with Enter\n                const index = (options.length === 1) ? 0 : this.selectedOption;\n                const option = options[index];\n\n                if (option) {\n                    MenuList.select.play();\n                    option.execute();\n                } else {\n                    console.error(\n                        \"Tried to execute invalid option at index \" + index\n                        + \" in interaction around line: \" + this.interaction.npcLine\n                    );\n                }\n            }\n\n            if (this.interaction.npcLine) {\n                MenuList.click.stop();\n                MenuList.click.play();\n                // NPC said something, player proceeds without any options\n                this.interaction.npcLine.execute();\n            }\n\n            this.interaction = this.conversation.getNextInteraction();\n            this.setSelectedOption(-1);\n            this.setBubblesContent();\n        }\n\n        if (!this.interaction) {\n            this.endConversation();\n        } else {\n            if (this.interaction.npcLine) {\n                // Mostly NPCs execute actions at the beginning of their line, not afterwards\n                this.npc.face?.setMode(this.npc.defaultFaceMode);\n                this.interaction.npcLine.executeBeforeLine();\n            }\n        }\n    }\n\n    private endConversation(): void {\n        this.player.playerConversation = null;\n        this.player.speechBubble.hide();\n        this.npc.speechBubble.hide();\n        this.npc.registerEndedConversation();\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { entity, Entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { Sound } from \"./Sound\";\n\nenum PortalAnimationState { WAITING, FADEIN, IDLE, FADEOUT, GONE }\n\n@entity(\"portal\")\nexport class Portal extends Entity {\n    @asset(\"sprites/portal.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/portal/portal.ogg\")\n    private static sound: Sound;\n\n    private animationState = PortalAnimationState.WAITING;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 32, 50, false);\n        this.animator.assignSprite(Portal.sprite);\n    }\n\n    private nextAnimationState(): void {\n        this.animationState++;\n    }\n\n    public draw(): void {\n        switch (this.animationState) {\n            case PortalAnimationState.WAITING:\n                this.animator.play(\"empty\", 1);\n                break;\n            case PortalAnimationState.FADEIN:\n                this.animator.play(\"fadein\", 1, { loop: false, callback: this.nextAnimationState.bind(this) });\n                break;\n            case PortalAnimationState.IDLE:\n                this.animator.play(\"idle\", 1);\n                break;\n            case PortalAnimationState.FADEOUT:\n                this.animator.play(\"fadeout\", 1, { loop: false, callback: this.nextAnimationState.bind(this) });\n                break;\n            case PortalAnimationState.GONE:\n                this.animator.play(\"empty\", 1);\n                break;\n        }\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        if (this.animationState === PortalAnimationState.WAITING) {\n            if (this.timeAlive >= 1) {\n                this.nextAnimationState();\n                Portal.sound.play();\n            }\n        } else if (this.animationState === PortalAnimationState.IDLE) {\n            if (this.timeAlive >= 4) {\n                this.nextAnimationState();\n            }\n        } else if (this.animationState === PortalAnimationState.GONE) {\n            this.scene.removeGameObject(this);\n        }\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { Conversation } from \"./Conversation\";\nimport { entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport powershiba1 from \"../assets/dialog/powershiba1.dialog.json\";\nimport powershiba3 from \"../assets/dialog/powershiba3.dialog.json\";\nimport { RenderingLayer } from \"./Renderer\";\n\nexport enum PowerShibaState {\n    IN_CLOUDS,\n    ON_MOUNTAIN,\n    CONSUMED\n}\n\n@entity(\"powershiba\")\nexport class PowerShiba extends NPC {\n    @asset(\"sprites/powershiba.aseprite.json\")\n    private static sprite: Aseprite;\n    private state = PowerShibaState.IN_CLOUDS;\n\n    private floatAmount = 4;\n    private floatSpeed = 2;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 22, 22);\n        this.conversation = new Conversation(powershiba1, this);\n    }\n\n    public nextState(): void {\n        this.state++;\n\n        if (this.state === PowerShibaState.ON_MOUNTAIN) {\n            const spawn = this.scene.pointsOfInterest.find(poi => poi.name === \"powershiba_mountain_spawn\");\n\n            if (!spawn) throw new Error(\"PowerShiba mountain spawn missing\");\n\n            this.floatSpeed = 2;\n            this.floatAmount = 4;\n            this.x = spawn.x;\n            this.y = spawn.y;\n            this.conversation = new Conversation(powershiba3, this);\n        }\n    }\n\n    protected showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) return false;\n        else if (Conversation.getGlobals()[\"$gaveBoneToPowerShiba\"] && !Conversation.getGlobals()[\"$seedgrown\"]) return true;\n        else if (Conversation.getGlobals()[\"$gaveBoneToPowerShiba\"] && Conversation.getGlobals()[\"$seedgrown\"] && !Conversation.getGlobals()[\"$gotPowerShibaQuest\"]) return true;\n        else if (this.state === PowerShibaState.ON_MOUNTAIN) return true;\n        return false;\n    }\n\n\n    public feed(): void {\n        this.floatSpeed = 3;\n        this.floatAmount = 5;\n        this.scene.game.campaign.runAction(\"giveBone\");\n        this.think(\"Oh… I remember…\", 3000);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const floatOffsetY = Math.sin(this.timeAlive * this.floatSpeed) * this.floatAmount;\n\n        this.scene.renderer.addAseprite(\n            PowerShiba.sprite, \"idle\", this.x, this.y - floatOffsetY,\n            RenderingLayer.ENTITIES\n        );\n\n        if (this.scene.showBounds) this.drawBounds();\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        if (this.thinkBubble) {\n            this.thinkBubble.draw(ctx);\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n        this.dialoguePrompt.update(dt, this.x, this.y + 16);\n        this.speechBubble.update(this.x, this.y);\n\n        if (this.thinkBubble) {\n            this.thinkBubble.update(this.x, this.y);\n        }\n    }\n}\n","import { Campaign } from \"./Campaign\";\n\nexport enum QuestKey {\n    A = \"questA\",\n    B = \"questB\",\n    C = \"questC\"\n}\n\nexport enum QuestATrigger {\n    JUST_ARRIVED,\n    TALKED_TO_FIRE,\n    GOT_QUEST_FROM_FIRE,\n    GOT_RUNNING_ABILITY,\n    TALKED_TO_TREE,\n    GOT_QUEST_FROM_TREE,\n    GOT_SEED,\n    PLANTED_SEED,\n    TALKED_TO_STONE,\n    GOT_STONE,\n    THROWN_STONE_INTO_WATER,\n    GOT_MULTIJUMP,\n    LEARNED_RAIN_DANCE,\n    MADE_RAIN,\n    TREE_DROPPED_WOOD,\n    GOT_WOOD,\n    TALKED_TO_FIRE_WITH_WOOD,\n    THROWN_WOOD_INTO_FIRE,\n    APOCALYPSE_STARTED,\n    BEAT_FIRE,\n    BEAT_GAME\n}\n\nexport enum QuestBTrigger {\n    ENDING_TRIGGERED\n}\n\nexport enum QuestCTrigger {\n    ENDING_TRIGGERED\n}\n\ntype TriggerDefinition = {\n    index: number;\n    isTriggered: boolean;\n};\n\nexport abstract class Quest {\n    public readonly key: QuestKey;\n    public readonly campaign: Campaign;\n    protected readonly triggers: TriggerDefinition[] = [];\n    public readonly title: string;\n    private finished = false;\n\n    public constructor(key: QuestKey, campaign: Campaign, title: string, triggerIndices: number[]) {\n        this.key = key;\n        this.campaign = campaign;\n        this.title = title;\n\n        this.triggers = triggerIndices.map(index => ({\n            index,\n            isTriggered: false\n        }));\n    }\n\n    public reset(): void {\n        this.finished = false;\n        this.triggers.forEach((t, i) => { this.untrigger(i); });\n    }\n\n    public trigger(index: number): void {\n        if (this.triggers[index]) {\n            this.triggers[index].isTriggered = true;\n        }\n    }\n\n    public untrigger(index: number): void {\n        if (this.triggers[index]) {\n            this.triggers[index].isTriggered = false;\n        }\n    }\n\n    public getTriggers(): TriggerDefinition[] {\n        return this.triggers;\n    }\n\n    public isTriggered(index: number): boolean {\n        return this.triggers[index].isTriggered || false;\n    }\n\n    public allTriggered(): boolean {\n        return this.triggers.every(trigger => trigger.isTriggered);\n    }\n\n    public getHighestTriggerIndex(): number {\n        return Math.max(...this.triggers.filter(t => t.isTriggered).map(t => t.index), -1);\n    }\n\n    public finish(): void {\n        this.finished = true;\n    }\n\n    public isFinished(): boolean {\n        return this.finished;\n    }\n}\n\n/**\n * Standard Ending A. Follow the questline and beat the fire at the end\n */\nexport class QuestA extends Quest {\n    public constructor (campaign: Campaign) {\n        super(\n            QuestKey.A,\n            campaign,\n            \"[A]POCALYPSE NOT NOW\",\n            Object.values(QuestATrigger).filter((i): i is number => typeof i === \"number\")\n        );\n    }\n}\n\n/**\n * Ending B. Helped Dog and Beat fire\n */\nexport class QuestB extends Quest {\n    public constructor (campaign: Campaign) {\n        super(\n            QuestKey.B,\n            campaign,\n            \"GOOD [B]OY\",\n            Object.values(QuestBTrigger).filter((i): i is number => typeof i === \"number\")\n        );\n    }\n}\n\n/**\n * Ending C. Sequence broken and soft locked in cave\n */\nexport class QuestC extends Quest {\n    public constructor (campaign: Campaign) {\n        super(\n            QuestKey.C,\n            campaign,\n            \"SOFT LO[C]KED\",\n            Object.values(QuestCTrigger).filter((i): i is number => typeof i === \"number\")\n        );\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { entity, Entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { RenderingLayer } from \"./Renderer\";\n\n@entity(\"radio\")\nexport class Radio extends Entity {\n    @asset(\"sprites/radio.aseprite.json\")\n    private static sprite: Aseprite;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 24, 24, false);\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(Radio.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n    }\n\n    public update(): void {}\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { Dance } from \"./Dance\";\nimport { Fire } from \"./Fire\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { ParticleEmitter } from \"./Particles\";\nimport { roundRect } from \"./SpeechBubble\";\n\nexport enum RenderingType {\n    PARTICLE_EMITTER,\n    FIRE,\n    DANCE,\n    BLACK_BARS,\n    DRAW_IMAGE,\n    ASEPRITE,\n    RECT,\n    SPEECH_BUBBLE,\n    TEXT\n}\n\nexport enum RenderingLayer {\n    DEBUG = \"debug\",\n    FULLSCREEN_FX = \"fullscreenFX\",\n    UI = \"ui\",\n    BLACK_BARS = \"blackBars\",\n    TILEMAP_FOREGROUND = \"tilemapForeground\",\n    PLAYER = \"player\",\n    ENTITIES = \"entities\",\n    PLATFORMS = \"platforms\",\n    TILEMAP_MAP = \"tilemapMap\",\n    TILEMAP_BACKGROUND = \"tilemapBackground\",\n    PARTICLES = \"particles\"\n}\n\nexport const LAYER_ORDER: RenderingLayer[] = [\n    RenderingLayer.DEBUG,\n    RenderingLayer.FULLSCREEN_FX,\n    RenderingLayer.UI,\n    RenderingLayer.BLACK_BARS,\n    RenderingLayer.TILEMAP_FOREGROUND,\n    RenderingLayer.PLAYER,\n    RenderingLayer.ENTITIES,\n    RenderingLayer.PARTICLES,\n    RenderingLayer.PLATFORMS,\n    RenderingLayer.TILEMAP_MAP,\n    RenderingLayer.TILEMAP_BACKGROUND,\n];\n\nexport type Coordinates = {\n    x: number;\n    y: number;\n};\n\nexport type Dimension = {\n    width: number;\n    height: number;\n};\n\nexport type BaseRenderingItem = {\n    type: RenderingType;\n    layer: RenderingLayer;\n    zIndex?: number;\n    translation?: Coordinates;\n    position: Coordinates;\n    scale?: Coordinates;\n    alpha?: number;\n    globalCompositeOperation?: string;\n    relativeToScreen?: boolean,\n};\n\nexport type ParticleEmitterRenderingItem = {\n    type: RenderingType.PARTICLE_EMITTER;\n    layer: RenderingLayer;\n    zIndex: number;\n    emitter: ParticleEmitter;\n};\n\nexport type FireRenderingItem = {\n    type: RenderingType.FIRE;\n    layer: RenderingLayer;\n    entity: Fire;\n};\n\nexport type DanceRenderingItem = {\n    type: RenderingType.DANCE;\n    layer: RenderingLayer;\n    dance: Dance;\n};\n\nexport type BlackBarsRenderingItem = {\n    type: RenderingType.BLACK_BARS;\n    layer: RenderingLayer;\n    force: number;\n    height: number;\n    color: string;\n};\n\nexport type RectRenderingItem = BaseRenderingItem & {\n    type: RenderingType.RECT;\n    fillColor?: string,\n    lineColor?: string,\n    lineWidth?: number;\n    dimension: Dimension;\n};\n\nexport type SpeechBubbleRenderingItem = BaseRenderingItem & {\n    type: RenderingType.SPEECH_BUBBLE;\n    fillColor: string,\n    radius: number;\n    offsetX: number;\n    dimension: Dimension;\n};\n\nexport type TextRenderingItem = BaseRenderingItem & {\n    type: RenderingType.TEXT;\n    asset: BitmapFont;\n    text: string,\n    textColor: string,\n    outlineColor?: string,\n};\n\nexport type DrawImageRenderingItem = BaseRenderingItem & {\n    type: RenderingType.DRAW_IMAGE;\n    asset: HTMLImageElement;\n};\n\nexport type AsepriteRenderingItem = BaseRenderingItem & {\n    type: RenderingType.ASEPRITE;\n    asset: Aseprite;\n    animationTag: string;\n    time?: number;\n};\n\nexport type RenderingItem = BlackBarsRenderingItem | DrawImageRenderingItem | AsepriteRenderingItem | RectRenderingItem |\n                            TextRenderingItem | SpeechBubbleRenderingItem | ParticleEmitterRenderingItem | FireRenderingItem | DanceRenderingItem;\n\nexport class Renderer {\n    private scene: GameScene;\n    private layers = LAYER_ORDER;\n    private queue: RenderingItem[] = [];\n\n    public constructor(scene: GameScene) {\n        this.scene = scene;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        [...this.layers].reverse().forEach(layer => {\n            const itemsInLayer = this.queue.filter(item => item.layer === layer);\n\n            itemsInLayer.forEach(item => {\n                if (item.type === RenderingType.BLACK_BARS) {\n                    this.scene.camera.drawBars(ctx);\n                } else if (item.type === RenderingType.PARTICLE_EMITTER) {\n                    item.emitter.draw(ctx);\n                } else if (item.type === RenderingType.FIRE) {\n                    item.entity.drawToCanvas(ctx);\n                } else if (item.type === RenderingType.DANCE) {\n                    item.dance.draw(ctx);\n                } else {\n                    ctx.save();\n                    if (item.translation) ctx.translate(item.translation.x, item.translation.y);\n                    if (item.scale) ctx.scale(item.scale.x, item.scale.y);\n                    if (item.relativeToScreen) ctx.setTransform(1, 0, 0, 1, 0, 0);\n                    if (item.globalCompositeOperation) ctx.globalCompositeOperation = item.globalCompositeOperation;\n                    if (item.alpha !== undefined) ctx.globalAlpha = item.alpha;\n\n                    switch (item.type) {\n                        case RenderingType.DRAW_IMAGE:\n                            ctx.drawImage(item.asset, item.position.x, item.position.y);\n                            break;\n                        case RenderingType.ASEPRITE:\n                            item.asset.drawTag(ctx, item.animationTag, item.position.x, item.position.y, item.time);\n                            break;\n                        case RenderingType.RECT:\n                            if (item.lineColor) {\n                                ctx.strokeStyle = item.lineColor;\n                                ctx.lineWidth = item.lineWidth || 1;\n                                ctx.strokeRect(item.position.x, item.position.y, item.dimension.width, item.dimension.height);\n                            } else if (item.fillColor) {\n                                ctx.fillStyle = item.fillColor;\n                                ctx.fillRect(item.position.x, item.position.y, item.dimension.width, item.dimension.height);\n                            }\n                            break;\n                        case RenderingType.SPEECH_BUBBLE:\n                            ctx.beginPath();\n                            ctx = roundRect(ctx, Math.round(item.position.x), Math.round(item.position.y), Math.round(item.dimension.width), Math.round(item.dimension.height), item.radius, item.relativeToScreen, Math.round(item.offsetX));\n                            ctx.fillStyle = item.fillColor;\n                            ctx.fill();\n                            ctx.closePath();\n                            break;\n                        case RenderingType.TEXT:\n                            if (item.outlineColor) {\n                                item.asset.drawTextWithOutline(ctx, item.text, item.position.x, item.position.y, item.textColor, item.outlineColor);\n                            } else {\n                                item.asset.drawText(ctx, item.text, item.position.x, item.position.y, item.textColor);\n                            }\n                            break;\n                    }\n\n                    ctx.restore();\n                }\n            });\n        });\n\n        this.queue = [];\n    }\n\n    public add(item: RenderingItem): void {\n        this.queue.push(item);\n    }\n\n    public addAseprite (\n        sprite: Aseprite, animationTag: string, x: number, y: number, layer: RenderingLayer,\n        direction = 1, time?: number\n    ): void {\n        const scale = direction < 0 ? { x: -1, y: 1 } : undefined;\n\n        this.add({\n            type: RenderingType.ASEPRITE,\n            layer,\n            translation: {\n                x: x,\n                y: -y\n            },\n            position: {\n                x: -sprite.width >> 1,\n                y: -sprite.height\n            },\n            scale,\n            asset: sprite,\n            animationTag,\n            time: time || this.scene.gameTime * 1000\n        });\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { Entity } from \"./Entity\";\nimport { GameObjectProperties } from \"./MapInfo\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { RenderingLayer } from \"./Renderer\";\n\nexport class RiddleStone extends Entity {\n    @asset(\"sprites/riddlestone.aseprite.json\")\n    private static sprite: Aseprite;\n    private col: number;\n    private row: number;\n\n    public constructor(scene: GameScene, x: number, y: number, properties: GameObjectProperties) {\n        super(scene, x, y, 16, 16, false);\n\n        this.col = properties.col || 0;\n        this.row = properties.row || 0;\n    }\n\n    public draw(): void {\n        if (this.scene.mountainRiddle.isCorrectGate(this.col, this.row)) {\n            this.scene.renderer.addAseprite(RiddleStone.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n\n            if (this.scene.showBounds) {\n                this.drawBounds();\n            }\n        }\n    }\n\n    public update(): void {}\n}\n","import { ControllerManager } from \"./input/ControllerManager\";\nimport { Game } from \"./Game\";\nimport { Keyboard } from \"./input/Keyboard\";\nimport { Scenes } from \"./Scenes\";\nimport { Transition } from \"./Transition\";\nimport { RootNode, UpdateRootNode, DrawRootNode } from \"./scene/RootNode\";\nimport { SceneNode } from \"./scene/SceneNode\";\n\n/**\n * Constructor type of a scene.\n *\n * @param T - The game type.\n * @param A - Optional scene argument type. A value of this type must be specified when setting or pushing a scene.\n *            Defaults to no argument (void type)\n */\nexport type SceneConstructor<T extends Game, A = void> = new (game: T) => Scene<T, A>;\n\n/**\n * Abstract base class of a scene.\n *\n * @param T - The game type.\n * @param A - Optional scene argument type. A value of this type must be specified when setting or pushing a scene.\n *            Defaults to no argument (void type)\n */\nexport abstract class Scene<T extends Game, A = void> {\n    public zIndex: number = 0;\n    public currentTransition: Transition | null = null;\n    public inTransition: Transition | null = null;\n    public outTransition: Transition | null = null;\n    public readonly rootNode: RootNode<T>;\n    private updateRootNode!: UpdateRootNode;\n    private drawRootNode!: DrawRootNode;\n    private usedLayers: number = 0;\n    private hiddenLayers: number = 0;\n    private backgroundStyle: string | null = null;\n\n    public constructor(public readonly game: T) {\n        this.rootNode = new RootNode(this, (update, draw) => {\n            this.updateRootNode = update;\n            this.drawRootNode = draw;\n        });\n        this.rootNode.resizeTo(this.game.width, this.game.height);\n    }\n\n    public get keyboard(): Keyboard {\n        return this.game.keyboard;\n    }\n\n    public get input(): ControllerManager {\n        return ControllerManager.getInstance();\n    }\n\n    public get scenes(): Scenes<T> {\n        return this.game.scenes;\n    }\n\n    /**\n     * Shows the given layer when it was previously hidden.\n     *\n     * @param layer - The layer to show (0-31).\n     */\n    public showLayer(layer: number): this {\n        this.hiddenLayers &= ~(1 << layer);\n        return this;\n    }\n\n    /**\n     * Hides the given layer when it was previously shown.\n     *\n     * @param layer - The layer to hide (0-31).\n     */\n    public hideLayer(layer: number): this {\n        this.hiddenLayers |= 1 << layer;\n        return this;\n    }\n\n    /**\n     * Checks if given layer is hidden.\n     *\n     * @param layer - The layer to check (0-31).\n     * @return True if layer is hidden, false if not.\n     */\n    public isLayerHidden(layer: number): boolean {\n        return (this.hiddenLayers & (1 << layer)) !== 0;\n    }\n\n    /**\n     * Checks if given layer is shown.\n     *\n     * @param layer - The layer to check (0-31).\n     * @return True if layer is shown, false if not.\n     */\n    public isLayerShown(layer: number): boolean {\n        return (this.hiddenLayers & (1 << layer)) === 0;\n    }\n\n    /**\n     * Returns the scene node with the given id.\n     *\n     * @param id - The ID to look for.\n     * @return The matching scene node or null if none.\n     */\n    public getNodeById(id: string): SceneNode<T> | null {\n        return this.rootNode.getDescendantById(id);\n    }\n\n    /**\n     * Returns the background style of this scene. This style is used to fill the background of the scene when set.\n     *\n     * @return The scene background style.\n     */\n    public getBackgroundStyle(): string | null {\n        return this.backgroundStyle;\n    }\n\n    /**\n     * Sets the background style of this scene. This style is used to fill the background of the scene when set.\n     *\n     * @param backgroundStyle - The background style to set.\n     */\n    public setBackgroundStyle(backgroundStyle: string | null): this {\n        this.backgroundStyle = backgroundStyle;\n        return this;\n    }\n\n    /**\n     * Checks if this scene is active.\n     *\n     * @return True if scene is active, false it not.\n     */\n    public isActive(): boolean {\n        return this.scenes.activeScene === this;\n    }\n\n    /**\n     * Called when the scene is pushed onto the stack and before any transitions.\n     *\n     * @param args - The scene arguments (if any).\n     */\n    public setup(args: A): Promise<void> | void {}\n\n    /**\n     * Called when the scene becomes the top scene on the stack and after the on-stage transition is complete.\n     */\n    public activate(): Promise<void> | void {}\n\n    /**\n     * Called when the scene is no longer the top scene on the stack and before the off-stage transition begins.\n     */\n    public deactivate(): Promise<void> | void {}\n\n    /**\n     * Called when the scene is popped from the scene stack, after any transitions are complete.\n     */\n    public cleanup(): Promise<void> | void {}\n\n    /**\n     * Updates the scene. Scenes can overwrite this method to do its own drawing but when you are going to use the\n     * scene graph then make sure to call the super method in your overwritten method or the scene graph will not be\n     * updated.\n     */\n    public update(dt: number): void {\n        this.usedLayers = this.updateRootNode(dt);\n    }\n\n    /**\n     * Draws the scene. Scenes can overwrite this method to do its own drawing but when you are going to use the\n     * scene graph then make sure to call the super method in your overwritten method or the scene graph will not be\n     * rendered.\n     *\n     * @param ctx    - The rendering context.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     */\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        if (this.backgroundStyle != null) {\n            ctx.save();\n            ctx.fillStyle = this.backgroundStyle;\n            ctx.fillRect(0, 0, width, height);\n        }\n        let layer = 1;\n        let usedLayers = this.usedLayers & ~this.hiddenLayers;\n        while (usedLayers !== 0) {\n            if ((usedLayers & 1) === 1) {\n                this.drawRootNode(ctx, layer, width, height);\n            }\n            usedLayers >>>= 1;\n            layer <<= 1;\n        }\n    }\n}\n","import { Game } from \"./Game\";\nimport { Scene, SceneConstructor } from \"./Scene\";\n\nexport class Scenes<T extends Game> {\n    public activeScene: Scene<T, unknown> | null = null;\n    private sceneCache = new WeakMap<SceneConstructor<T, unknown>, Scene<T, unknown>>();\n    private scenes: Scene<T, unknown>[] = [];\n    private sortedScenes: Scene<T, unknown>[] = [];\n\n    public constructor(public readonly game: T) {}\n\n    private createScene<A>(sceneClass: SceneConstructor<T, A>): Scene<T, A> {\n        let scene = this.sceneCache.get(sceneClass);\n\n        if (scene == null) {\n            scene = new sceneClass(this.game);\n            this.sceneCache.set(sceneClass, scene);\n        }\n\n        return scene;\n    }\n\n    public async pushScene<A>(sceneClass: SceneConstructor<T, void>, args: void): Promise<void>;\n    public async pushScene<A>(sceneClass: SceneConstructor<T, A>, args: A): Promise<void>;\n    public async pushScene<A>(sceneClass: SceneConstructor<T, A>, args: A): Promise<void> {\n        if (this.activeScene != null) {\n            await this.activeScene.deactivate();\n        }\n\n        const scene = this.createScene(sceneClass);\n\n        await scene.setup(args);\n        this.scenes.push(scene);\n        this.updateSortedScenes();\n\n        if (scene.inTransition != null) {\n            scene.currentTransition = scene.inTransition;\n            await scene.currentTransition.start(\"in\");\n            scene.currentTransition = null;\n        }\n\n        await scene.activate();\n        this.activeScene = scene;\n    }\n\n    public getPreviousScene(): Scene<T> | null {\n        return this.scenes[this.scenes.length - 2] ?? null;\n    }\n\n    public async popScene({ noTransition = false }: { noTransition?: boolean} = {}): Promise<Scene<T> | null> {\n        const activeScene = this.activeScene;\n\n        if (activeScene != null) {\n            await activeScene.deactivate();\n\n            if (!noTransition && activeScene.outTransition != null) {\n                activeScene.currentTransition = activeScene.outTransition;\n                await activeScene.currentTransition.start(\"out\");\n                activeScene.currentTransition = null;\n            }\n\n            this.scenes.pop();\n            this.updateSortedScenes();\n            await activeScene.cleanup();\n            this.activeScene = this.scenes[this.scenes.length - 1] ?? null;\n\n            if (this.activeScene != null) {\n                await this.activeScene.activate();\n            }\n        }\n\n        return activeScene;\n    }\n\n    public async setScene<A>(newSceneClass: SceneConstructor<T, void>, args: void): Promise<void>;\n    public async setScene<A>(newSceneClass: SceneConstructor<T, A>, args: A): Promise<void>;\n    public async setScene<A>(newSceneClass: SceneConstructor<T, A>, args: A): Promise<void> {\n        const currentScene = this.activeScene;\n\n        if (currentScene == null) {\n            return this.pushScene(newSceneClass, args);\n        }\n\n        await currentScene.deactivate();\n        let outTransitionPromise: Promise<void> | null = null;\n\n        if (currentScene.outTransition) {\n            currentScene.currentTransition = currentScene.outTransition;\n            outTransitionPromise = currentScene.currentTransition.start(\"out\");\n        }\n\n        const currentSceneIndex = this.scenes.length - 1;\n        const newScene = this.createScene(newSceneClass);\n        await newScene.setup(args);\n        this.scenes.push(newScene);\n        this.updateSortedScenes();\n\n        if (newScene.inTransition != null) {\n            newScene.currentTransition = newScene.inTransition;\n            await newScene.currentTransition.start(\"in\");\n            newScene.currentTransition = null;\n        }\n\n        await newScene.activate();\n        this.activeScene = newScene;\n\n        if (outTransitionPromise != null) {\n            await outTransitionPromise;\n            currentScene.currentTransition = null;\n        }\n\n        this.scenes.splice(currentSceneIndex, 1);\n        this.updateSortedScenes();\n        currentScene.cleanup();\n    }\n\n    private updateSortedScenes(): void {\n        this.sortedScenes = this.scenes.slice().sort((a, b) => {\n            if (a.zIndex === b.zIndex) {\n                return this.scenes.indexOf(a) - this.scenes.indexOf(b);\n            } else {\n                return a.zIndex - b.zIndex;\n            }\n        });\n    }\n\n    public update(dt: number): void {\n        this.sortedScenes.forEach(scene => {\n            scene.currentTransition?.update(dt);\n            scene.update(dt);\n        });\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        this.sortedScenes.forEach(scene => {\n            ctx.save();\n            if (scene.currentTransition != null) {\n                scene.currentTransition.draw(ctx, () => scene.draw(ctx, width, height), width, height);\n            } else {\n                scene.draw(ctx, width, height);\n            }\n            ctx.restore();\n        });\n    }\n}\n","import { Environment } from \"./World\";\nimport { NPC } from \"./NPC\";\n\nexport abstract class ScriptableNPC extends NPC {\n    protected move: 0 | 1 | -1  = 0;\n\n    protected updatePosition(newX: number, newY: number): void {\n        this.x = newX;\n        this.y = newY;\n\n        // Check collision with the environment and correct player position and movement\n        if (this.pullOutOfGround() !== 0 || this.pullOutOfCeiling() !== 0) {\n            this.setVelocityY(0);\n        }\n\n        if (this.pullOutOfWall() !== 0) {\n            this.setVelocityX(0);\n        }\n    }\n\n    private pullOutOfGround(): number {\n        let pulled = 0, col = 0;\n\n        if (this.getVelocityY() <= 0) {\n            const world = this.scene.world;\n            const height = world.getHeight();\n            col = world.collidesWith(this.x, this.y, [ this ], [ Environment.WATER ]);\n\n            while (this.y < height && col) {\n                pulled++;\n                this.y++;\n                col = world.collidesWith(this.x, this.y);\n            }\n        }\n\n        return pulled;\n    }\n\n    private pullOutOfCeiling(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        while (\n            this.y > 0\n            && world.collidesWith(\n                this.x, this.y + this.height,\n                [ this ],\n                [ Environment.PLATFORM, Environment.WATER ]\n            )\n        ) {\n            pulled++;\n            this.y--;\n        }\n\n        return pulled;\n    }\n\n    private pullOutOfWall(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        if (this.getVelocityX() > 0) {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x + this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x--;\n                pulled++;\n            }\n        } else {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x - this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x++;\n                pulled++;\n            }\n        }\n\n        return pulled;\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { Conversation } from \"./Conversation\";\nimport { entity } from \"./Entity\";\nimport { Environment } from \"./World\";\nimport { EyeType, Face } from \"./Face\";\nimport { GameObjectInfo } from \"./MapInfo\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { now } from \"./util\";\nimport { NPC } from \"./NPC\";\nimport { QuestATrigger, QuestKey } from \"./Quests\";\nimport { RenderingLayer } from \"./Renderer\";\nimport { Sound } from \"./Sound\";\nimport { Wood } from \"./Wood\";\n\nexport enum SeedState {\n    FREE = 0,\n    PLANTED = 1,\n    SWIMMING = 2,\n    GROWN = 3\n}\n\n@entity(\"seed\")\nexport class Seed extends NPC {\n    @asset(\"sprites/seed.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/throwing/success.mp3\")\n    private static successSound: Sound;\n\n    public state = SeedState.FREE;\n    private wood: Wood;\n    private floatingPosition: GameObjectInfo;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 24, 24);\n        this.wood = new Wood(scene, x, y);\n        this.face = new Face(scene, this, EyeType.STANDARD, 0, 8);\n\n        const floatingPosition = this.scene.pointsOfInterest.find(poi => poi.name === \"recover_floating_position\");\n\n        if (!floatingPosition) {\n            throw new Error (\"Could not find “recover_floating_position” point of interest in game scene.\");\n        }\n\n        this.floatingPosition = floatingPosition;\n    }\n\n    private getSpriteTag(): string {\n        switch (this.state) {\n            case SeedState.PLANTED:\n                return \"planted\";\n            case SeedState.GROWN:\n                return \"grown\";\n            default:\n                return \"free\";\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(\n            Seed.sprite,\n            this.getSpriteTag(),\n            this.x, this.y - 1,\n            RenderingLayer.ENTITIES,\n            undefined\n        );\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        if (this.state === SeedState.GROWN) {\n            this.drawFace(ctx);\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public isCarried(): boolean {\n        return this.scene.player.isCarrying(this);\n    }\n\n    public grow(): void {\n        if (this.state === SeedState.PLANTED) {\n            this.state = SeedState.GROWN;\n            this.scene.seed = this;\n            Conversation.setGlobal(\"seedgrown\", \"true\");\n            this.scene.game.campaign.runAction(\"enable\", null, [\"tree\", \"tree2\"]);\n            this.scene.game.campaign.runAction(\"enable\", null, [\"seed\", \"seed1\"]);\n        }\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        if (this.state === SeedState.SWIMMING) {\n            const diffX = this.floatingPosition.x - this.x;\n            const moveX = Math.min(20, Math.abs(diffX)) * Math.sign(diffX);\n            this.x += moveX * dt;\n            this.setVelocityY(Math.abs(((now() % 2000) - 1000) / 1000) - 0.5);\n        }\n\n        if (this.state === SeedState.FREE || this.state === SeedState.SWIMMING) {\n            const player = this.scene.player;\n\n            if (!this.isCarried() && this.distanceTo(player) < 20) {\n                player.carry(this);\n            }\n            if (\n                !this.isCarried()\n                && this.scene.world.collidesWith(this.x, this.y - 8) === Environment.SOIL\n            ) {\n                const seedPosition = this.scene.pointsOfInterest.find(poi => poi.name === \"seedposition\");\n\n                if (!seedPosition) throw new Error(\"Seed position is missing in points of interest array\");\n\n                this.state = SeedState.PLANTED;\n                this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.PLANTED_SEED);\n                this.setFloating(true);\n                this.x = seedPosition.x;\n                this.y = seedPosition.y;\n\n                Seed.successSound.play();\n                Conversation.setGlobal(\"seedplanted\", \"true\");\n            }\n\n            if (\n                !this.isCarried()\n                && this.state !== SeedState.SWIMMING\n                && this.scene.world.collidesWith(this.x, this.y - 5) === Environment.WATER\n            ) {\n                this.state = SeedState.SWIMMING;\n                this.setVelocity(0, 0);\n                this.setFloating(true);\n                this.y = this.floatingPosition.y;\n            }\n        } else if (this.state === SeedState.PLANTED) {\n            if (this.scene.world.isRaining()) {\n                this.grow();\n            }\n        } else if (this.state === SeedState.GROWN) {\n            // TODO Special update behavior when grown\n        }\n\n        this.speechBubble.update(this.x, this.y);\n    }\n\n    public spawnWood(): Wood {\n        if (!this.scene.gameObjects.includes(this.wood)) {\n            this.scene.addGameObject(this.wood);\n        }\n        this.wood.x = this.x;\n        this.wood.y = this.y + this.height / 2;\n        this.wood.setVelocity(-5, 0);\n\n        return this.wood;\n    }\n\n    public startDialog(): void {}\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { QuestATrigger, QuestKey } from \"./Quests\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { Sound } from \"./Sound\";\nimport { SoundEmitter } from \"./SoundEmitter\";\n\nenum AnimationTag {\n    INVISIBLE = \"invisible\",\n    IDLE = \"idle\"\n}\n\n@entity(\"shadowpresence\")\nexport class ShadowPresence extends NPC {\n    @asset(\"sprites/shadowpresence.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/ambient/cave.ogg\")\n    private static caveAmbience: Sound;\n    private soundEmitter: SoundEmitter;\n\n    private isNearPlayer = false;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 12, 46);\n        this.direction = -1;\n        this.lookAtPlayer = false;\n        this.soundEmitter = new SoundEmitter(this.scene, this.x, this.y, ShadowPresence.caveAmbience, 0.3, 1);\n    }\n\n    protected showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.isNearPlayer\n            && this.scene.game.campaign.getQuest(QuestKey.A).isTriggered(QuestATrigger.TALKED_TO_FIRE)\n            && !this.scene.game.campaign.getQuest(QuestKey.A).isTriggered(QuestATrigger.GOT_RUNNING_ABILITY)\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const scale = this.direction < 0 ? { x: -1, y: 1 } : undefined;\n        const animationTag = this.isNearPlayer ? AnimationTag.IDLE : AnimationTag.INVISIBLE;\n\n        this.scene.renderer.add({\n            type: RenderingType.ASEPRITE,\n            layer: RenderingLayer.ENTITIES,\n            translation: { x: this.x, y: -this.y },\n            position: {\n                x: -ShadowPresence.sprite.width >> 1,\n                y: -ShadowPresence.sprite.height\n            },\n            scale,\n            asset: ShadowPresence.sprite,\n            animationTag,\n            time: this.scene.gameTime * 1000\n        });\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public checkPlayerDistance(): void {\n        this.isNearPlayer = false;\n        if (this.distanceTo(this.scene.player) < 60) {\n            this.isNearPlayer = true;\n        }\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        this.checkPlayerDistance();\n        this.dialoguePrompt.update(dt, this.x, this.y + 48);\n        this.speechBubble.update(this.x, this.y + 12);\n        this.soundEmitter.update();\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { calculateVolume, rnd, rndItem } from \"./util\";\nimport { Conversation } from \"./Conversation\";\nimport conversation from \"../assets/dialog/bird.dialog.json\";\nimport { DOUBLE_JUMP_COLORS, GRAVITY } from \"./constants\";\nimport { entity } from \"./Entity\";\nimport { Environment } from \"./World\";\nimport { FaceModes } from \"./Face\";\nimport { FireState, SHRINK_SIZE } from \"./Fire\";\nimport { GameObjectInfo } from \"./MapInfo\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { ParticleEmitter, valueCurves } from \"./Particles\";\nimport { QuestKey } from \"./Quests\";\nimport { RenderingLayer } from \"./Renderer\";\nimport { ScriptableNPC } from \"./ScriptableNPC\";\nimport shiba1 from \"../assets/dialog/shiba1.dialog.json\";\nimport { Sound } from \"./Sound\";\n\nconst IDLE_DURATION = [2, 3, 4];\nconst WALK_DURATION = [0.5, 1, 1.2, 1.5];\nconst ACCELERATION = 15;\n\nexport enum ShibaState {\n    ON_TREE,\n    FLYING_AWAY,\n    ON_MOUNTAIN,\n    GOING_TO_FIRE,\n    KILLING_FIRE,\n    FIRE_KILLED\n}\n\nconst FLYING_DURATION = 8;\nconst JUMP_INTERVAL = 0.3;\n\n@entity(\"shiba\")\nexport class Shiba extends ScriptableNPC {\n    @asset(\"sprites/shiba.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/ending/putout.mp3\")\n    private static putOutSound: Sound;\n\n    @asset(\"sounds/jumping/jump_neutral.ogg\")\n    private static jumpSound: Sound;\n\n    private state = ShibaState.ON_TREE;\n    private idleTimer: number | null = rndItem(IDLE_DURATION);\n    private walkTimer: number | null = null;\n    private autoMoveDirection: 1 | -1 = 1;\n\n    private doubleJumpEmitter: ParticleEmitter;\n    private minAltitude: number;\n    private jumpHeight = 1.5;\n    private jumpTimer = 0;\n    private flyingTime = 0;\n    private saidFarewell = false;\n    public peeing = false;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 28, 24);\n\n        this.minAltitude = y;\n        this.conversation = new Conversation(conversation, this);\n        this.setMaxVelocity(2);\n        this.conversation = new Conversation(shiba1, this);\n\n        this.doubleJumpEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 90, y: rnd(-1, 0) * 100 }),\n            color: () => rndItem(DOUBLE_JUMP_COLORS),\n            size: rnd(1, 2),\n            gravity: {x: 0, y: -120},\n            lifetime: () => rnd(0.4, 0.6),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n    }\n\n    public setState(state: ShibaState): void {\n        this.state = state;\n    }\n\n    public getState(): ShibaState {\n        return this.state;\n    }\n\n    public nextState(): void {\n        this.state++;\n\n        if (this.state === ShibaState.FLYING_AWAY) {\n            this.lookAtPlayer = false;\n            this.scene.player.disableMultiJump();\n            this.setMaxVelocity(3);\n        } else if (this.state === ShibaState.ON_MOUNTAIN) {\n            this.move = 0;\n\n            const spawn = this.scene.pointsOfInterest.find(\n                poi => poi.name === \"shiba_mountain_spawn\"\n            );\n\n            if (!spawn) throw new Error(\"Shiba mountain spawn missing\");\n            this.x = spawn.x;\n            this.y = spawn.y;\n            this.scene.game.campaign.runAction(\"enable\", null, [\"shiba\", \"shiba4\"]);\n            this.scene.powerShiba.nextState();\n        } else if (this.state === ShibaState.GOING_TO_FIRE) {\n            this.scene.camera.setCinematicBar(1);\n\n            const shibaSpawnPos = this.scene.pointsOfInterest.find(\n                poi => poi.name === \"friendship_shiba_spawn\"\n            );\n\n            this.lookAtPlayer = false;\n            this.setMaxVelocity(2);\n\n            this.scene.startFriendshipMusic();\n\n            if (!shibaSpawnPos) throw new Error(\"'friendship_shiba_spawn' point in map is missing\");\n            this.x = shibaSpawnPos.x;\n            this.y = shibaSpawnPos.y;\n        } else if (this.state === ShibaState.KILLING_FIRE) {\n            this.move = 0;\n\n            setTimeout(() => this.think(\"Wow!\", 1500), 500);\n            setTimeout(() => (this.direction = 1), 1000);\n\n            setTimeout(() => {\n                this.think(\"Bad fire!\", 2000);\n                this.scene.fire.setState(FireState.BEING_PUT_OUT);\n                this.scene.fire.growthTarget = SHRINK_SIZE;\n                this.peeing = true;\n                Shiba.putOutSound.setVolume(.3);\n                Shiba.putOutSound.play();\n            }, 2000);\n\n            setTimeout(() => this.scene.fire.think(\"Oh God…\", 2000), 4500);\n            setTimeout(() => this.scene.fire.think(\"Disgusting…\", 3000), 8000);\n        } else if (this.state === ShibaState.FIRE_KILLED) {\n            this.peeing = false;\n            this.scene.fire.state = FireState.PUT_OUT;\n            Shiba.putOutSound.stop();\n\n            setTimeout(() => (this.direction = -1), 1000);\n            setTimeout(() => this.think(\"I help friend!\", 1500), 1500);\n\n            setTimeout(() => {\n                this.scene.fire.think(\"Yeah, great.\", 2000);\n                this.scene.fire.face?.setMode(FaceModes.BORED);\n                this.scene.player.isControllable = true;\n                this.scene.friendshipCutscene = false;\n                this.lookAtPlayer = true;\n                this.scene.game.campaign.runAction(\"enable\", null, [\"fire\", \"fire4\"]);\n                this.scene.game.campaign.runAction(\"enable\", null, [\"shiba\", \"shiba5\"]);\n                this.scene.game.campaign.getQuest(QuestKey.B).finish();\n            }, 3500);\n        }\n    }\n\n    protected jump(): void {\n        this.jumpTimer = JUMP_INTERVAL;\n        this.setVelocityY(Math.sqrt(2 * this.jumpHeight * GRAVITY));\n        this.doubleJumpEmitter.setPosition(this.x, this.y + 20);\n        this.doubleJumpEmitter.emit(20);\n\n        const vol = calculateVolume(this.distanceToPlayer, 0.4);\n\n        if (vol > 0) {\n            Shiba.jumpSound.setVolume(vol);\n            Shiba.jumpSound.stop();\n            Shiba.jumpSound.play();\n        }\n    }\n\n    protected canJump(): boolean {\n        return this.jumpTimer === 0;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (this.move === 0) {\n            const tag = this.peeing ? \"peeing\" : \"idle\";\n\n            this.scene.renderer.addAseprite(\n                Shiba.sprite, tag, this.x, this.y, RenderingLayer.ENTITIES, this.direction\n            );\n        } else {\n            this.scene.renderer.addAseprite(\n                Shiba.sprite, \"walk\", this.x, this.y, RenderingLayer.ENTITIES, this.direction\n            );\n        }\n\n        if (this.scene.showBounds) this.drawBounds();\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        if (this.thinkBubble) {\n            this.thinkBubble.draw(ctx);\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) return false;\n\n        return false;\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        // Triggers\n        const triggerCollisions = this.scene.world.getTriggerCollisions(this);\n\n        if (this.hasActiveConversation()) {\n            this.move = 0;\n        } else {\n            if (this.state === ShibaState.ON_TREE) {\n                this.onTreeUpdateLogic(triggerCollisions, dt);\n            } else if (this.state === ShibaState.FLYING_AWAY) {\n                this.flyingAwayUpdateLogic(dt);\n            } else if (this.state === ShibaState.GOING_TO_FIRE) {\n                this.walkToFireLogic(triggerCollisions);\n            }\n        }\n\n        if (this.move !== 0) {\n            this.direction = this.move;\n            this.accelerateX(ACCELERATION * dt * this.move);\n        } else {\n            if (this.getVelocityX() > 0) {\n                this.decelerateX(ACCELERATION * dt);\n            } else {\n                this.decelerateX(-ACCELERATION * dt);\n            }\n        }\n\n        this.dialoguePrompt.update(dt, this.x, this.y + 20);\n        this.speechBubble.update(this.x, this.y);\n\n        if (this.thinkBubble) {\n            this.thinkBubble.update(this.x, this.y);\n        }\n    }\n\n    public isReadyForConversation(): boolean | null {\n        const superResult = super.isReadyForConversation();\n\n        return (superResult && this.state !== ShibaState.FLYING_AWAY);\n    }\n\n    private walkToFireLogic(triggerCollisions: GameObjectInfo[]): void {\n        this.move = -1;\n\n        if (\n            this.scene.world.collidesWithVerticalLine(\n                this.x - (this.width / 2), this.y + this.height,\n                this.height,\n                [ this ],\n                [ Environment.PLATFORM, Environment.WATER ]\n            )\n        ) {\n            this.jump();\n        }\n\n        if (triggerCollisions.length > 0) {\n            const event = triggerCollisions.find(t => t.name === \"shiba_stop\");\n\n            if (event) {\n                this.nextState();\n            }\n        }\n    }\n\n    private onTreeUpdateLogic(triggerCollisions: GameObjectInfo[], dt: number): void {\n        if (triggerCollisions.length > 0) {\n            const event = triggerCollisions.find(t => t.name === \"shiba_action\");\n\n            if (event && event.properties.velocity) {\n                this.autoMoveDirection = event.properties.velocity > 0 ? 1 : -1;\n                this.move = this.autoMoveDirection;\n            }\n        }\n\n        if (this.idleTimer !== null && this.idleTimer >= 0) {\n            this.idleTimer -= dt;\n        }\n\n        if (this.walkTimer !== null && this.walkTimer >= 0) {\n            this.walkTimer -= dt;\n        }\n\n        if (this.idleTimer && this.idleTimer <= 0 && this.walkTimer === null) {\n            this.walkTimer = rndItem(WALK_DURATION);\n            this.idleTimer = null;\n            this.move = this.autoMoveDirection;\n        }\n\n        if (this.walkTimer && this.walkTimer <= 0 && this.idleTimer === null) {\n            this.idleTimer = rndItem(IDLE_DURATION);\n            this.walkTimer = null;\n            this.move = 0;\n        }\n\n        // Check if bone is near\n        if (\n            Conversation.getGlobals()[\"$gotBoneQuest\"]\n            && !Conversation.getGlobals()[\"$broughtBone\"]\n            && this.distanceTo(this.scene.bone) < 100\n        ) {\n            Conversation.setGlobal(\"broughtBone\", \"true\");\n            this.think(\"Wow! Bone!!!\", 2000);\n            this.scene.game.campaign.runAction(\"enable\", null, [\"shiba\", \"shiba2\"]);\n        }\n    }\n\n    private flyingAwayUpdateLogic(dt: number): void {\n        this.move = 1;\n        this.minAltitude += 20 * dt;\n\n        if (this.jumpTimer > 0) {\n            this.jumpTimer -= dt;\n            if (this.jumpTimer < 0) {\n                this.jumpTimer = 0;\n            }\n        }\n\n        if (this.y < this.minAltitude && this.canJump()) {\n            this.jump();\n        }\n\n        this.flyingTime += dt;\n\n        if (!this.saidFarewell && this.flyingTime > 2) {\n            this.saidFarewell = true;\n            this.think(\"See you on the mountain!\", 3000);\n        }\n\n        if (this.flyingTime >= FLYING_DURATION) {\n            this.nextState();\n        }\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { Conversation } from \"./Conversation\";\nimport { entity } from \"./Entity\";\nimport { GameObjectProperties } from \"./MapInfo\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\n\n@entity(\"sign\")\nexport class Sign extends NPC {\n    @asset(\"sprites/sign.aseprite.json\")\n    private static sprite: Aseprite;\n    public conversation: Conversation;\n\n    public constructor(scene: GameScene, x: number, y: number, properties: GameObjectProperties) {\n        super(scene, x, y, 16, 16);\n        this.conversation = this.generateConversation(this.prepareContent(properties.content));\n    }\n\n    private prepareContent(content?: string ): string[] {\n        if (!content) {\n            return [\"The sign is empty.\"];\n        }\n\n        return content.split(\":::\");\n    }\n\n    public getInteractionText(): string {\n        return \"Read sign\";\n    }\n\n    private generateConversation(lines: string[]): Conversation {\n        const json: Record<string, string[]> = { \"entry\": [] };\n\n        lines.forEach((line, index) => {\n            if (index === lines.length - 1) {\n                line += \" @entry !end\";\n            }\n            json.entry.push(line);\n        });\n\n        return new Conversation(json, this);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.add({\n            type: RenderingType.ASEPRITE,\n            layer: RenderingLayer.ENTITIES,\n            translation: { x: this.x, y: -this.y },\n            position: {\n                x: -Sign.sprite.width >> 1,\n                y: -Sign.sprite.height\n            },\n            asset: Sign.sprite,\n            animationTag: \"idle\",\n            time: this.scene.gameTime * 1000\n        });\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(): void {}\n}\n","/**\n * Internally used container for a slot (A callback function with a calling context).\n */\nclass Slot<T = unknown> {\n    public constructor(public callback: (value: T) => void, public context?: object) {}\n    public call(value: T): void {\n        this.callback.call(this.context, value);\n    }\n}\n\n/**\n * Light-weight and very fast signal/slot based event system. Just create a signal instance, connect slots\n * (event listeners) to it and then let the signal emit values which are then send to all connected slots.\n * Slots can be methods and it's easy to disconnect them again using the disconnect() method or calling the function\n * returned by connect().\n */\nexport class Signal<T = void> {\n    private readonly slots: Slot<T>[] = [];\n    private readonly onInit: ((signal: Signal<T>) => (() => void) | void) | null;\n    private onDone: ((signal: Signal<T>) => void) | null = null;\n\n    /**\n     * Creates a new signal with the given optional initialization function.\n     *\n     * @param onInit - Optional initialization function which is called when the first slot is connected to the signal.\n     *                 This function can return an optional deinitialization function which is called after the last\n     *                 slot has been disconnected.\n     */\n    public constructor(onInit?: (signal: Signal<T>) => (() => void) | void) {\n        this.onInit = onInit ?? null;\n    }\n\n    /**\n     * Connects a slot to this signal.\n     *\n     * @param callback - The slot callback function to call when signal emits a value.\n     * @param context  - Optional context to call the slot callback function on. This is useful for connecting methods.\n     * @return A function which can be called to disconnect the slot from the signal again.\n     */\n    public connect(callback: (value: T) => void, context?: object): () => void {\n        if (this.onInit != null && this.slots.length === 0) {\n            this.onDone = this.onInit(this) || null;\n        }\n        this.slots.push(new Slot(callback, context));\n        return () => this.disconnect(callback, context);\n    }\n\n    /**\n     * Disconnects a slot from this signal.\n     *\n     * @param callback - The slot callback function to disconnect from the signal.\n     * @param context  - Optional context. Needed to disconnect methods.\n     */\n    public disconnect(callback: (value: T) => void, context?: object): void {\n        const index = this.slots.findIndex(slot => slot.callback === callback && slot.context === context);\n        if (index >= 0) {\n            this.slots.splice(index, 1);\n        }\n        if (this.onDone != null && this.slots.length === 0) {\n            this.onDone(this);\n            this.onDone = null;\n        }\n    }\n\n    /**\n     * Emits the given value to all connected slots.\n     *\n     * @param value - The value to emit.\n     */\n    public emit(value: T): void {\n        this.slots.forEach(slot => slot.call(value));\n    }\n\n    /**\n     * Returns a new signal which only emits the values matching the giving predicate.\n     *\n     * @parm predicate - The function which decides if the value is emitted or not.\n     * @return The new signal.\n     */\n    public filter(predicate: (value: T) => boolean): Signal<T> {\n        return new Signal(signal => this.connect(value => {\n            if (predicate(value)) {\n                signal.emit(value);\n            }\n        }));\n    }\n\n    /**\n     * Returns a new signal which maps all emitted values to something else.\n     *\n     * @param mapper - The function which maps the original value to something new.\n     * @return The new signal.\n     */\n    public map<R>(mapper: (value: T) => R): Signal<R> {\n        return new Signal<R>(signal => this.connect(value => {\n            return signal.emit(mapper(value));\n        }));\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\nimport { RenderingLayer } from \"./Renderer\";\n\n@entity(\"skull\")\nexport class Skull extends PhysicsEntity {\n    @asset(\"sprites/skull.aseprite.json\")\n    private static sprite: Aseprite;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 16, 16);\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(Skull.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n    }\n\n    public isCarried(): boolean {\n        return this.scene.player.isCarrying(this);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        const player = this.scene.player;\n\n        if (!this.isCarried() && this.distanceTo(player) < 20) {\n            player.carry(this);\n        }\n    }\n}\n","import { GameScene } from \"./scenes/GameScene\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\nimport { PIXEL_PER_METER } from \"./constants\";\n\nexport class Snowball extends PhysicsEntity {\n    public constructor(scene: GameScene, x: number, y: number, velocityX: number, velocityY: number) {\n        super(scene, x, y, 0.25 * PIXEL_PER_METER, 0.25 * PIXEL_PER_METER);\n\n        this.setVelocity(velocityX, velocityY);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(this.x, -this.y);\n        ctx.strokeStyle = \"black\";\n        ctx.fillStyle = \"white\";\n        ctx.beginPath();\n        ctx.arc(0, -this.height / 2, this.width / 2, 0, Math.PI * 2, false);\n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n    }\n}\n","import { clamp } from \"./util\";\nimport { ControllerManager } from \"./input/ControllerManager\";\n\n// Get cross-browser AudioContext (Safari still uses webkitAudioContext…)\nconst AudioContext = window.AudioContext ?? (window as any).webkitAudioContext as AudioContext;\n\nlet audioContext: AudioContext | null = null;\nlet globalGainNode: GainNode | null = null;\n\nexport function getAudioContext(): AudioContext {\n    const controllerManager = ControllerManager.getInstance();\n\n    if (audioContext == null) {\n        audioContext = new AudioContext();\n\n        // When audio context is suspended then try to wake it up on next key or pointer press\n        if (audioContext.state === \"suspended\") {\n            const resume = () => {\n                audioContext?.resume();\n            };\n\n            controllerManager.onButtonDown.connect(resume);\n            document.addEventListener(\"pointerdown\", resume);\n\n            audioContext.addEventListener(\"statechange\", () => {\n                if (audioContext?.state === \"running\") {\n                    controllerManager.onButtonDown.disconnect(resume);\n                    document.removeEventListener(\"pointerdown\", resume);\n                }\n            });\n        }\n    }\n\n    return audioContext;\n}\n\nexport function getGlobalGainNode(): GainNode {\n    if (globalGainNode == null) {\n        const audioContext = getAudioContext();\n        globalGainNode = audioContext.createGain();\n        globalGainNode.connect(audioContext.destination);\n    }\n\n    return globalGainNode;\n}\n\nexport class Sound {\n    private readonly gainNode: GainNode;\n    private source: AudioBufferSourceNode | null = null;\n    private loop: boolean = false;\n\n    private constructor(private readonly buffer: AudioBuffer) {\n        this.gainNode = getAudioContext().createGain();\n        this.gainNode.connect(getGlobalGainNode());\n    }\n\n    public static async load(url: string): Promise<Sound> {\n        const arrayBuffer = await (await fetch(url)).arrayBuffer();\n\n        return new Promise((resolve, reject) => {\n            getAudioContext().decodeAudioData(arrayBuffer,\n                buffer => resolve(new Sound(buffer)),\n                error => reject(error)\n            );\n        });\n    }\n\n    public isPlaying(): boolean {\n        return this.source != null;\n    }\n\n    public play(): void {\n        if (!this.isPlaying()) {\n            const source = getAudioContext().createBufferSource();\n            source.buffer = this.buffer;\n            source.loop = this.loop;\n            source.connect(this.gainNode);\n\n            source.addEventListener(\"ended\", () => {\n                if (this.source === source) {\n                    this.source = null;\n                }\n            });\n\n            this.source = source;\n            source.start();\n        }\n    }\n\n    public stop(): void {\n        if (this.source) {\n            try {\n                this.source.stop();\n            } catch (e) {\n                // Ignored. Happens on Safari sometimes. Can't stop a sound which may not be really playing?\n            }\n\n            this.source = null;\n        }\n    }\n\n    public setLoop(loop: boolean): void {\n        this.loop = loop;\n\n        if (this.source) {\n            this.source.loop = loop;\n        }\n    }\n\n    public setVolume(volume: number): void {\n        const gain = this.gainNode.gain;\n        gain.value = clamp(volume, gain.minValue, gain.maxValue);\n    }\n}\n","import { AmbientSoundId, GameScene } from \"./scenes/GameScene\";\nimport { calculateVolume } from \"./util\";\nimport { Entity } from \"./Entity\";\nimport { GameObjectInfo } from \"./MapInfo\";\nimport { Sound } from \"./Sound\";\n\n/**\n * Sound emitters are invisible entities that emit a sound in relation to the player distance.\n * Might be better to set the volume according to the camera center in the future.\n */\nexport class SoundEmitter extends Entity {\n    private sound: Sound;\n    private maxVolume: number;\n    private intensity: number;\n\n    public constructor(\n        scene: GameScene, x: number, y: number, sound: Sound, maxVolume: number, intensity: number\n    ) {\n        super(scene, x, y, 1, 1);\n\n        this.sound = sound;\n        this.maxVolume = maxVolume;\n        this.intensity = intensity;\n    }\n\n    public draw(): void {}\n\n    public update(): void {\n        const vol = this.scene.paused ? 0 : calculateVolume(\n            this.distanceToPlayer, this.maxVolume, this.intensity\n        );\n\n        if (vol) {\n            this.sound.setVolume(vol);\n\n            if (!this.sound.isPlaying()) this.sound.play();\n        } else {\n            this.sound.stop();\n        }\n    }\n\n    public static fromGameObjectInfo(\n        scene: GameScene, gameObjectInfo: GameObjectInfo\n    ): SoundEmitter {\n        const soundId = gameObjectInfo.properties.sound;\n        const volume = gameObjectInfo.properties.volume || 1;\n        const intensity = gameObjectInfo.properties.intensity || 1;\n\n        if (soundId) {\n            const sound = scene.ambientSounds[soundId as AmbientSoundId];\n\n            if (sound) {\n                return new SoundEmitter(\n                    scene, gameObjectInfo.x, gameObjectInfo.y, sound, volume, intensity\n                );\n            } else {\n                throw new Error(\n                    `Cannot create sound emitter because '${soundId}' is not a valid ambient sound ID.`\n                );\n            }\n        } else {\n            throw new Error(\"Cannot create sound emitter because 'sound' property is empty.\");\n        }\n    }\n}\n","import { asset } from \"./Assets\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { ConversationLine } from \"./Conversation\";\nimport { DIALOG_FONT, GAME_CANVAS_WIDTH } from \"./constants\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { sleep } from \"./util\";\n\nexport function roundRect(\n    ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number, r: number,\n    up = false, tipOffset = 0\n): CanvasRenderingContext2D {\n    const halfWidth = w / 2;\n    const halfHeight = h / 2;\n    const middlePos = x + halfWidth;\n    const rightPos = x + w;\n    const bottomPos = y + h;\n\n    if (w < 2 * r) { r = halfWidth; }\n    if (h < 2 * r) { r = halfHeight; }\n\n    ctx.beginPath();\n    ctx.moveTo(x + r, y);\n\n    if (up) {\n        ctx.lineTo(middlePos - 4, y);\n        ctx.lineTo(middlePos, y - 4);\n        ctx.lineTo(middlePos + 4, y);\n    }\n\n    ctx.arcTo(rightPos, y, rightPos, bottomPos, r);\n    ctx.arcTo(rightPos, bottomPos, x, bottomPos, r);\n\n    if (!up) {\n        ctx.lineTo(middlePos - 4 + tipOffset, bottomPos);\n        ctx.lineTo(middlePos + tipOffset, bottomPos + 4);\n        ctx.lineTo(middlePos + 4 + tipOffset, bottomPos);\n    }\n\n    ctx.arcTo(x, bottomPos, x, y, r);\n    ctx.arcTo(x, y, rightPos, y, r);\n    ctx.closePath();\n\n    return ctx;\n}\n\nexport class SpeechBubble {\n    @asset(DIALOG_FONT)\n    private static font: BitmapFont;\n    private static OPTION_BUBBLE_INDENTATION = 11;\n\n    private messageLines: string[] = [];\n    private options: string[] = [];\n    public selectedOptionIndex = -1;\n    private fontSize = SpeechBubble.font.charHeight;\n    private lineHeight = this.fontSize;\n    private height = 0;\n    private offset = { x: 0, y: 40 };\n    private messageVelocity = 20;\n\n    private x: number;\n    private y: number;\n    private paddingHorizontal: number;\n    private paddingVertical: number;\n    public isCurrentlyWriting = false;\n    public preventUnwantedSelection = false;\n\n    private isVisible = false;\n\n    private content: string [] = [];\n    private longestLine: number = 0;\n\n    private partnersBubble: SpeechBubble | null = null;\n\n    constructor(\n        private scene: GameScene,\n        public anchorX: number,\n        public anchorY: number,\n        private lineHeightFactor = 1,\n        private paddingTop = 3,\n        private paddingBottom = 4,\n        private paddingLeft = 7,\n        private paddingRight = 7,\n        private color = \"white\",\n        private relativeToScreen = false\n    ) {\n        this.x = Math.round(anchorX + this.offset.x);\n        this.y = Math.round(anchorY + this.offset.y);\n        this.lineHeight = Math.round(this.fontSize * this.lineHeightFactor);\n        this.paddingHorizontal = this.paddingLeft + this.paddingRight;\n        this.paddingVertical = this.paddingTop + this.paddingBottom;\n    }\n\n    public show(): void {\n        this.isVisible = true;\n    }\n\n    public hide(): void {\n        this.isVisible = false;\n    }\n\n    public hasContent(): boolean {\n        return this.content.length > 0 &&\n            (!this.partnersBubble || !this.partnersBubble.isCurrentlyWriting && this.selectedOptionIndex > -1);\n    }\n\n    public async setMessage(message: string): Promise<void> {\n        this.messageLines = [\"\"];\n        this.isCurrentlyWriting = true;\n        this.longestLine = this.determineMaxLineLength(message.split(\"\\n\"));\n        let index = 0;\n\n        for (const char of message) {\n            if (!char) {\n                index++;\n                continue;\n            }\n            if (char === \"\\n\") {\n                index++;\n                this.messageLines.push(\"\");\n                continue;\n            }\n            this.messageLines[index] += char;\n            if (this.isCurrentlyWriting) {\n                await sleep(this.messageVelocity);\n            }\n            this.updateContent();\n        }\n\n        this.preventUnwantedSelection = true;\n        this.updateContent();\n        this.isCurrentlyWriting = false;\n\n        setTimeout(() => {\n            this.preventUnwantedSelection = false;\n        }, 300);\n    }\n\n    public setOptions(options: string[], partnersBubble: SpeechBubble) {\n        this.partnersBubble = partnersBubble;\n        this.options = options;\n        this.selectedOptionIndex = this.options.length > 0 ? 0 : -1;\n        this.updateContent();\n        this.longestLine = this.determineMaxLineLength(this.messageLines);\n    }\n\n    private updateContent(): void {\n        this.content = this.messageLines.concat(this.options);\n        this.height = (this.content.length - 1) * this.lineHeight + this.fontSize + this.paddingVertical;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (\n            !this.isVisible\n            || !this.hasContent()\n            || !this.scene.camera.isOnTarget()\n            || !this.scene.isActive()\n        ) {\n            return;\n        }\n\n        let posX = this.x;\n        let posY = this.y;\n        let offsetX = 0;\n\n        if (this.relativeToScreen) {\n            posX = Math.round(ctx.canvas.width / 2);\n            posY = Math.round(-ctx.canvas.height * 0.63 - this.height);\n        } else {\n            // Check if Speech Bubble clips the viewport and correct position\n            const visibleRect = this.scene.camera.getVisibleRect();\n            const relativeX = posX - visibleRect.x;\n\n            const clipAmount = Math.max(\n                (this.longestLine / 2) + relativeX - GAME_CANVAS_WIDTH, 0)\n                || Math.min(relativeX - (this.longestLine / 2),\n                0\n            );\n\n            if (clipAmount !== 0) {\n                offsetX = clipAmount + (10 * Math.sign(clipAmount));\n            }\n        }\n\n        posX -= offsetX;\n\n        const bubbleXPos = posX - Math.round(this.longestLine / 2) - this.paddingLeft;\n        const bubbleYPos = -posY - this.height;\n\n        this.scene.renderer.add({\n            type: RenderingType.SPEECH_BUBBLE,\n            layer: RenderingLayer.UI,\n            fillColor: this.color,\n            position: {\n                x: bubbleXPos,\n                y: bubbleYPos\n            },\n            dimension: {\n                width: this.longestLine + this.paddingHorizontal,\n                height: this.height\n            },\n            radius: 5,\n            relativeToScreen: this.relativeToScreen,\n            offsetX\n        });\n\n        const textXPos = bubbleXPos + this.paddingLeft;\n        const textColor = \"black\";\n\n        for (let i = 0; i < this.messageLines.length; i++) {\n            const textYPos = Math.round(bubbleYPos + this.paddingTop + i * this.lineHeight);\n\n            this.scene.renderer.add({\n                type: RenderingType.TEXT,\n                layer: RenderingLayer.UI,\n                text: this.messageLines[i],\n                textColor: textColor,\n                relativeToScreen: this.relativeToScreen,\n                position: {\n                    x: textXPos,\n                    y: textYPos\n                },\n                asset: SpeechBubble.font,\n            });\n        }\n\n        for (let i = 0; i < this.options.length; i++) {\n            const isSelected = this.selectedOptionIndex === i;\n            const textYPos = Math.round(bubbleYPos + this.paddingTop + i * this.lineHeight);\n\n            if (isSelected) {\n                this.scene.renderer.add({\n                    type: RenderingType.TEXT,\n                    layer: RenderingLayer.UI,\n                    text: ConversationLine.OPTION_MARKER,\n                    textColor: textColor,\n                    relativeToScreen: this.relativeToScreen,\n                    position: {\n                        x: textXPos,\n                        y: textYPos\n                    },\n                    asset: SpeechBubble.font\n                });\n            }\n\n            this.scene.renderer.add({\n                type: RenderingType.TEXT,\n                layer: RenderingLayer.UI,\n                text: this.options[i],\n                textColor: textColor,\n                relativeToScreen: this.relativeToScreen,\n                position: {\n                    x: textXPos + SpeechBubble.OPTION_BUBBLE_INDENTATION,\n                    y: textYPos\n                },\n                asset: SpeechBubble.font\n            });\n        }\n    }\n\n    public update(anchorX: number, anchorY: number): void {\n        this.x = Math.round(anchorX + this.offset.x);\n        this.y = Math.round(anchorY + this.offset.y);\n    }\n\n    private determineMaxLineLength(message: string[]): number {\n        let lineLengths = message.map(\n            line => SpeechBubble.font.measureText(line).width\n        );\n\n        lineLengths = lineLengths.concat(\n            this.options.map(\n                line => SpeechBubble.font.measureText(line).width + SpeechBubble.OPTION_BUBBLE_INDENTATION\n            )\n        );\n\n        return Math.max(...lineLengths);\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { CollidableGameObject, GameScene } from \"./scenes/GameScene\";\nimport { entity } from \"./Entity\";\nimport { Environment } from \"./World\";\nimport { EyeType, Face, FaceModes } from \"./Face\";\nimport { GameObjectInfo } from \"./MapInfo\";\nimport { now } from \"./util\";\nimport { NPC } from \"./NPC\";\nimport { QuestATrigger, QuestKey } from \"./Quests\";\nimport { RenderingLayer } from \"./Renderer\";\nimport { Sound } from \"./Sound\";\n\nexport enum StoneState {\n    DEFAULT = 0,\n    SWIMMING = 1,\n    FLOATING = 2\n}\n\n@entity(\"stone\")\nexport class Stone extends NPC implements CollidableGameObject {\n    @asset(\"sprites/stone.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/throwing/success.mp3\")\n    private static successSound: Sound;\n\n    private floatingPosition: GameObjectInfo;\n\n    public state: StoneState = StoneState.DEFAULT;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 26, 50);\n\n        this.direction = -1;\n        this.face = new Face(scene, this, EyeType.STONE, 0, 21);\n        this.lookAtPlayer = false;\n        this.carryHeight = 16;\n\n        const floatingPosition = this.scene.pointsOfInterest.find(\n            poi => poi.name === \"stone_floating_position\"\n        );\n\n        if (!floatingPosition) {\n            throw new Error (\"Could not find \\\"stone_floating_position\\\" point of interest in game scene\");\n        }\n\n        this.floatingPosition = floatingPosition;\n    }\n\n    protected showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() >= QuestATrigger.PLANTED_SEED &&\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_STONE\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(\n            Stone.sprite,\n            \"idle\",\n            this.x, this.y - 1,\n            RenderingLayer.ENTITIES,\n            this.direction\n        );\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        this.drawFace(ctx, false);\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        if (this.state === StoneState.DEFAULT) {\n            if (\n                this.scene.world.collidesWith(this.x, this.y - 5) === Environment.WATER\n            ) {\n                this.scene.game.campaign.getQuest(QuestKey.A).trigger(\n                    QuestATrigger.THROWN_STONE_INTO_WATER\n                );\n\n                this.state = StoneState.SWIMMING;\n                this.setVelocity(0, 0);\n                this.setFloating(true);\n                this.y = this.floatingPosition.y;\n                Stone.successSound.play();\n                this.scene.game.campaign.runAction(\"enable\", null, [\"stone\", \"stone2\"]);\n                this.scene.game.campaign.runAction(\"enable\", null, [\"flameboy\", \"flameboy2\"]);\n            }\n        } else if (this.state === StoneState.SWIMMING) {\n            const diffX = this.floatingPosition.x - this.x;\n            this.direction = Math.sign(diffX);\n            const moveX = Math.min(20, Math.abs(diffX)) * Math.sign(diffX);\n            this.x += moveX * dt;\n\n            if (Math.abs(moveX) < 2) {\n                this.state = StoneState.FLOATING;\n            }\n\n            this.setVelocityY(Math.abs(((now() % 2000) - 1000) / 1000) - 0.5);\n        } else if (this.state === StoneState.FLOATING) {\n            this.x = this.floatingPosition.x;\n            this.direction = -1;\n            this.setVelocityY(Math.abs(((now() % 2000) - 1000) / 1000) - 0.5);\n        }\n\n        this.dialoguePrompt.update(dt, this.x, this.y + 48);\n        this.speechBubble.update(this.x, this.y);\n    }\n\n    public collidesWith(x: number, y: number): number {\n        if (this.state === StoneState.FLOATING || this.state === StoneState.SWIMMING) {\n            if (\n                x >= this.x - this.width / 2\n                && x <= this.x + this.width / 2\n                && y >= this.y\n                && y <= this.y + this.height\n            ) {\n                return Environment.SOLID;\n            }\n        }\n\n        return Environment.AIR;\n    }\n\n    public isCarried(): boolean {\n        return this.scene.player.isCarrying(this);\n    }\n\n    public pickUp(): void {\n        this.face?.setMode(FaceModes.AMUSED);\n        this.scene.player.carry(this);\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { Conversation } from \"./Conversation\";\nimport { entity } from \"./Entity\";\nimport { EyeType, Face } from \"./Face\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { RenderingLayer } from \"./Renderer\";\n\n@entity(\"stonedisciple\")\nexport class StoneDisciple extends NPC {\n    @asset(\"sprites/stonedisciple.aseprite.json\")\n    private static sprite: Aseprite;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 32, 26);\n        this.direction = -1;\n        this.lookAtPlayer = true;\n        this.face = new Face(scene, this, EyeType.STONEDISCIPLE, 0, 0);\n    }\n\n    protected showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        const talkedToStoneDisciple = Conversation.getGlobals()[\"$talkedToStoneDisciple\"];\n        const talkedToStoneDiscipleAgain = Conversation.getGlobals()[\"$talkedToStoneDiscipleAgain\"];\n        const gotTeleported = Conversation.getGlobals()[\"$gotTeleported\"];\n\n        return (\n            talkedToStoneDisciple === undefined\n            || (gotTeleported !== undefined && talkedToStoneDiscipleAgain === undefined)\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(\n            StoneDisciple.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES, this.direction\n        );\n\n        this.drawFace(ctx, false);\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        this.dialoguePrompt.update(dt, this.x, this.y + this.height);\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { Conversation } from \"./Conversation\";\nimport conversation from \"../assets/dialog/superthrow.dialog.json\";\nimport { entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { RenderingLayer } from \"./Renderer\";\n\n@entity(\"superthrow\")\nexport class SuperThrow extends NPC {\n    @asset(\"sprites/superthrow.aseprite.json\")\n    private static sprite: Aseprite;\n    private floatAmount = 4;\n    private floatSpeed = 2;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 18, 22);\n        this.lookAtPlayer = false;\n        this.conversation = new Conversation(conversation, this);\n    }\n\n    public getInteractionText(): string {\n        if (!this.met) {\n            return \"Touch\";\n        } else {\n            return \"Talk\";\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const floatOffsetY = Math.sin(this.timeAlive * this.floatSpeed) * this.floatAmount;\n\n        this.scene.renderer.addAseprite(\n            SuperThrow.sprite,\n            \"idle\",\n            this.x, this.y - floatOffsetY,\n            RenderingLayer.ENTITIES,\n            this.direction\n        );\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { clamp } from \"./util\";\nimport { Easing, linear } from \"./easings\";\n\nexport type TransitionType = \"in\" | \"out\";\n\nexport interface TransitionOptions {\n    duration?: number;\n    reverse?: boolean;\n    easing?: Easing;\n}\n\nexport class Transition {\n    private type: TransitionType = \"out\";\n    private readonly duration: number;\n    private readonly easing: Easing;\n    private elapsed: number = 0;\n    private resolve: (() => void) | null = null;\n    private promise: Promise<void> | null = null;\n\n    public constructor({ duration = 0.5, easing = linear }: TransitionOptions = {}) {\n        this.duration = duration;\n        this.easing = easing;\n    }\n\n    public valueOf(): number {\n        const value = this.easing(clamp(this.elapsed / this.duration, 0, 1));\n        return this.type === \"out\" ? value :  (1 - value);\n    }\n\n    public update(dt: number): void {\n        if (this.promise != null) {\n            this.elapsed += dt;\n            if (this.elapsed >= this.duration) {\n                this.stop();\n            }\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, draw: () => void, width: number, height: number): void {}\n\n    public async start(type: TransitionType): Promise<void> {\n        if (this.promise == null) {\n            this.type = type;\n            this.elapsed = 0;\n            this.promise = new Promise(resolve => { this.resolve = resolve; });\n        }\n        return this.promise;\n    }\n\n    public stop(): void {\n        if (this.resolve != null) {\n            this.resolve();\n            this.resolve = null;\n            this.promise = null;\n        }\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { entity } from \"./Entity\";\nimport { EyeType, Face } from \"./Face\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { QuestATrigger, QuestKey } from \"./Quests\";\nimport { RenderingLayer } from \"./Renderer\";\nimport { Seed } from \"./Seed\";\nimport { Wood } from \"./Wood\";\n\n@entity(\"tree\")\nexport class Tree extends NPC {\n    @asset(\"sprites/tree.aseprite.json\")\n    private static sprite: Aseprite;\n\n    public seed: Seed;\n    private wood: Wood;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 78, 140);\n\n        this.face = new Face(scene, this, EyeType.TREE, 5, 94);\n        this.seed = new Seed(scene, x, y);\n        this.wood = new Wood(scene, x, y);\n\n        this.startDialog();\n    }\n\n    public showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() >= QuestATrigger.GOT_QUEST_FROM_FIRE\n            && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_QUEST_FROM_TREE\n        ) || (\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() >= QuestATrigger.MADE_RAIN\n            && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.TREE_DROPPED_WOOD\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(Tree.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        this.drawFace(ctx);\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        if (this.showDialoguePrompt()) {\n            this.dialoguePrompt.update(dt, this.x + 4, this.y + 128);\n        }\n    }\n\n    public startDialog(): void {\n        this.speechBubble.update(this.x, this.y);\n    }\n\n    public spawnSeed(): Seed {\n        if (!this.scene.gameObjects.includes(this.seed)) {\n            this.scene.addGameObject(this.seed);\n        }\n\n        this.seed.x = this.x;\n        this.seed.y = this.y + this.height / 2;\n        this.seed.setVelocity(5, 0);\n\n        return this.seed;\n    }\n\n    public spawnWood(): Wood {\n        if (!this.scene.gameObjects.includes(this.wood)) {\n            this.scene.addGameObject(this.wood);\n        }\n\n        this.wood.x = this.x;\n        this.wood.y = this.y + this.height / 2;\n        this.wood.setVelocity(5, 0);\n\n        return this.wood;\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { CollidableGameObject, GameScene } from \"./scenes/GameScene\";\nimport { entity, Entity } from \"./Entity\";\nimport { Environment } from \"./World\";\nimport { GameObjectProperties } from \"./MapInfo\";\nimport { RenderingLayer } from \"./Renderer\";\n\nenum WallState { SOLID, CRUMBLED }\n\n@entity(\"wall\")\nexport class Wall extends Entity implements CollidableGameObject {\n    @asset(\"sprites/wall.aseprite.json\")\n    private static sprite: Aseprite;\n    public readonly identifier: string;\n    private state = WallState.SOLID;\n\n    public constructor(scene: GameScene, x: number, y: number, properties: GameObjectProperties) {\n        super(scene, x, y, 24, 72, false);\n\n        if (!properties.identifier) {\n            throw new Error (\"Cannot create Wall entity with no identifier property\");\n        }\n\n        this.identifier = properties.identifier;\n    }\n\n    public draw(): void {\n        const animationTag = this.state === WallState.SOLID ? \"solid\" : \"crumbled\";\n        this.scene.renderer.addAseprite(Wall.sprite, animationTag, this.x, this.y, RenderingLayer.ENTITIES);\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n    }\n\n    public update(): void {}\n\n    public crumble(): void {\n        this.state = WallState.CRUMBLED;\n    }\n\n    collidesWith(x: number, y: number): number {\n        if (\n            this.state === WallState.SOLID\n            && x >= this.x - this.width / 2\n            && x <= this.x + this.width / 2\n            && y >= this.y\n            && y <= this.y + this.height\n        ) {\n            return Environment.SOLID;\n        }\n\n        return Environment.AIR;\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { entity } from \"./Entity\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { NPC } from \"./NPC\";\nimport { QuestATrigger, QuestKey } from \"./Quests\";\nimport { RenderingLayer } from \"./Renderer\";\n\n@entity(\"wing\")\nexport class Wing extends NPC {\n    @asset(\"sprites/wing.aseprite.json\")\n    private static sprite: Aseprite;\n\n    private floatAmount = 4;\n    private floatSpeed = 2;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 24, 24);\n    }\n\n    protected showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.scene.game.campaign.getQuest(QuestKey.A).isTriggered(QuestATrigger.PLANTED_SEED)\n            && !this.scene.game.campaign.getQuest(QuestKey.A).isTriggered(QuestATrigger.LEARNED_RAIN_DANCE)\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const floatOffsetY = Math.sin(this.timeAlive * this.floatSpeed) * this.floatAmount;\n\n        this.scene.renderer.addAseprite(\n            Wing.sprite,\n            \"idle\",\n            this.x, this.y - floatOffsetY,\n            RenderingLayer.ENTITIES\n        );\n\n        if (this.scene.showBounds) {\n            this.drawBounds();\n        }\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        this.dialoguePrompt.update(dt, this.x, this.y + 16);\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { entity } from \"./Entity\";\nimport { Environment } from \"./World\";\nimport { GameObjectInfo } from \"./MapInfo\";\nimport { GameScene } from \"./scenes/GameScene\";\nimport { now } from \"./util\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\nimport { QuestATrigger, QuestKey } from \"./Quests\";\nimport { RenderingLayer } from \"./Renderer\";\nimport { Sound } from \"./Sound\";\n\nexport enum WoodState {\n    FREE = 0,\n    SWIMMING = 1\n}\n\n@entity(\"wood\")\nexport class Wood extends PhysicsEntity {\n    @asset(\"sprites/wood.aseprite.json\")\n    private static sprite: Aseprite;\n\n    @asset(\"sounds/throwing/success.mp3\")\n    private static successSound: Sound;\n    private floatingPosition: GameObjectInfo;\n\n    public state = WoodState.FREE;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        super(scene, x, y, 26, 16);\n\n        const floatingPosition = this.scene.pointsOfInterest.find(\n            poi => poi.name === \"recover_floating_position\"\n        );\n\n        if (!floatingPosition) {\n            throw new Error (\"Could not find \\\"recover_floating_position\\\" point of interest in game scene.\");\n        }\n\n        this.floatingPosition = floatingPosition;\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(Wood.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n\n        if (this.scene.showBounds) this.drawBounds();\n    }\n\n    public isCarried(): boolean {\n        return this.scene.player.isCarrying(this);\n    }\n\n    public update(dt: number): void {\n        super.update(dt);\n\n        if (this.state === WoodState.SWIMMING) {\n            const diffX = this.floatingPosition.x - this.x;\n            const moveX = Math.min(20, Math.abs(diffX)) * Math.sign(diffX);\n            this.x += moveX * dt;\n            this.setVelocityY(Math.abs(((now() % 2000) - 1000) / 1000) - 0.5);\n        }\n\n        if (this.state === WoodState.FREE || this.state === WoodState.SWIMMING) {\n            const player = this.scene.player;\n\n            if (!this.isCarried() && this.distanceTo(player) < 20) {\n                player.carry(this);\n            }\n\n            if (\n                !this.isCarried()\n                && this.state !== WoodState.SWIMMING\n                && this.scene.world.collidesWith(this.x, this.y - 5) === Environment.WATER\n            ) {\n                this.state = WoodState.SWIMMING;\n                this.setVelocity(0, 0);\n                this.setFloating(true);\n                this.y = this.floatingPosition.y + 8;\n            }\n        }\n\n        if (!this.isCarried() && this.distanceTo(this.scene.fire) < 20) {\n            this.scene.fire.feed(this);\n            this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.THROWN_WOOD_INTO_FIRE);\n            Wood.successSound.play();\n        }\n    }\n}\n","import { asset } from \"./Assets\";\nimport { Bounds, Entity } from \"./Entity\";\nimport { boundsFromMapObject, rnd, rndInt } from \"./util\";\nimport { GameObject, GameScene, isCollidableGameObject } from \"./scenes/GameScene\";\nimport { GameObjectInfo } from \"./MapInfo\";\nimport { getImageData } from \"./graphics\";\nimport { ParticleEmitter, Particles, valueCurves } from \"./Particles\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\n\nexport enum Environment {\n    AIR = 0,\n    SOLID = 0xff000000,\n    PLATFORM = 0xff7f7f7f,\n    BOUNCE = 0xffff0000,\n    WATER = 0xff0000ff,\n    SOIL = 0xffffff00,\n    RAINCLOUD = 0xff00ff00\n}\n\nexport const validEnvironments = Object.values(Environment);\n\nexport class World implements GameObject {\n    @asset(\"maps/level.png\")\n    private static foreground: HTMLImageElement;\n\n    @asset(\"maps/level_collision.png\", {\n        map: (image: HTMLImageElement) => new Uint32Array(getImageData(image).data.buffer)\n    })\n    private static collisionMap: Uint32Array;\n\n    @asset([\n        \"maps/bg.png\",\n        \"maps/bg2.png\",\n        \"maps/bg3.png\"\n    ])\n    private static backgrounds: HTMLImageElement[];\n\n    private scene: GameScene;\n\n    @asset(\"sprites/raindrop.png\")\n    private static raindrop: HTMLImageElement;\n    private rainEmitter: ParticleEmitter;\n    private raining = false;\n\n    public constructor(scene: GameScene) {\n        this.scene = scene;\n\n        const rainSpawnPosition = this.scene.pointsOfInterest.find(\n            o => o.name === \"rain_spawn_position\"\n        );\n\n        if (!rainSpawnPosition) {\n            throw new Error (\"Missing 'rain_spawn_position' point in map data to place rain emitter\");\n        }\n\n        this.rainEmitter = this.scene.particles.createEmitter({\n            position: {x: rainSpawnPosition.x, y: rainSpawnPosition.y},\n            offset: () => ({x: rnd(-1, 1) * 26, y: rnd(-1, 1) * 5}),\n            velocity: () => ({ x: rnd(-1, 1) * 5, y: -rnd(50, 80) }),\n            color: () => World.raindrop,\n            size: 4,\n            gravity: {x: 0, y: -100},\n            lifetime: () => 3,\n            alpha: 0.6,\n            alphaCurve: valueCurves.linear.invert()\n        });\n    }\n\n    public getWidth(): number {\n        return World.foreground.width;\n    }\n\n    public getHeight(): number {\n        return World.foreground.height;\n    }\n\n    public update(): void {\n        if (this.raining) {\n            this.rainEmitter.emit(rndInt(1, 4));\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        const camX = this.scene.camera.x;\n        const camY = this.scene.camera.y;\n        const posXMultiplier = 1 - (camX / this.getWidth() * 2);\n\n        this.scene.renderer.add({\n            type: RenderingType.DRAW_IMAGE,\n            layer: RenderingLayer.TILEMAP_MAP,\n            translation: { x: camX, y: -camY },\n            position: { x: -camX, y: -this.getHeight() + camY },\n            asset: World.foreground\n        });\n\n        for (const background of World.backgrounds) {\n            const bgX = this.getWidth() / background.width;\n            const bgY = this.getHeight() / background.height;\n\n            this.scene.renderer.add({\n                type: RenderingType.DRAW_IMAGE,\n                layer: RenderingLayer.TILEMAP_BACKGROUND,\n                translation: { x: camX, y: -camY },\n                position: {\n                    x: (-camX / bgX) + (-posXMultiplier * (width / 2)),\n                    y: (-this.getHeight() + camY) / bgY\n                },\n                asset: background\n            });\n        }\n    }\n\n    public getEnvironment(x: number, y: number): Environment {\n        const index = (this.getHeight() - 1 - Math.round(y)) * this.getWidth() + Math.round(x);\n\n        if (index < 0 || index >= World.collisionMap.length) {\n            return Environment.AIR;\n        }\n\n        return World.collisionMap[index];\n    }\n\n    /**\n     * Checks if the given position collides with the world.\n     *\n     * @param x - X position within the world.\n     * @param y - Y position within the world.\n     * @return 0 if no collision. Anything else is a specific collision type (actually an RGBA color\n     *         which has specific meaning which isn't defined yet).\n     */\n    public collidesWith(\n        x: number, y: number, ignoreObjects: GameObject[] = [], ignore: Environment[] = []\n    ): number {\n        for (const gameObject of this.scene.gameObjects) {\n            if (\n                gameObject !== this\n                && !ignoreObjects.includes(gameObject)\n                && isCollidableGameObject(gameObject)\n            ) {\n                const environment = gameObject.collidesWith(x, y);\n\n                if (environment !== Environment.AIR && !ignore.includes(environment) ) {\n                    return environment;\n                }\n            }\n        }\n\n        const index = (this.getHeight() - 1 - Math.round(y)) * this.getWidth() + Math.round(x);\n\n        if (index < 0 || index >= World.collisionMap.length) {\n            return 0;\n        }\n\n        const environment = this.getEnvironment(x, y);\n\n        if (\n            !validEnvironments.includes(environment)\n            || (ignore && ignore.includes(environment))\n        ) {\n            return Environment.AIR;\n        }\n\n        return World.collisionMap[index];\n    }\n\n    /**\n     * Checks if a specific entity (`sourceEntity`) collides with either of of the entities in the\n     * gameObjects array of the GameScene and returns all entities that currently collide.\n     * `Particles` are taken out of this check automatically.\n     *\n     * @param sourceEntity    - The entity to be checked against the other entities\n     * @param margin          - Optional margin added to the bounding boxes of the entities to\n     *                          extend collision radius\n     * @param ignoreEntities  - Array of entities to be ignored with this check\n     * @return                - An array containing all entities that collide with the source\n     *                          entity.\n     */\n    public getEntityCollisions(\n        sourceEntity: Entity, margin = 0, ignoreEntities: Entity[] = []\n    ): Entity[] {\n        const collidesWith: Entity[] = [];\n\n        for (const gameObject of this.scene.gameObjects) {\n            if (\n                gameObject !== sourceEntity\n                && !(gameObject instanceof Particles)\n                && gameObject instanceof Entity\n                && gameObject.isTrigger\n                && !ignoreEntities.includes(gameObject)\n            ) {\n                const colliding = this.boundingBoxesCollide(\n                    sourceEntity.getBounds(margin), gameObject.getBounds(margin)\n                );\n\n                if (colliding) {\n                    collidesWith.push(gameObject);\n                }\n            }\n        }\n\n        return collidesWith;\n    }\n\n    /**\n     * Returns all triggers that do collide with the provided entity\n     * @param sourceEntity Entity to check collisions against trigger boxes\n     */\n    public getTriggerCollisions(sourceEntity: Entity): GameObjectInfo[] {\n        const collidesWith: GameObjectInfo[] = [];\n\n        for (const triggerObject of this.scene.triggerObjects) {\n            const colliding = this.boundingBoxesCollide(\n                sourceEntity.getBounds(), boundsFromMapObject(triggerObject)\n            );\n\n            if (colliding) {\n                collidesWith.push(triggerObject);\n            }\n        }\n\n        return collidesWith;\n    }\n\n    public getGateCollisions(sourceEntity: Entity): GameObjectInfo[] {\n        const collidesWith: GameObjectInfo[] = [];\n\n        for (const gateObject of this.scene.gateObjects) {\n            const colliding = this.boundingBoxesCollide(\n                sourceEntity.getBounds(), boundsFromMapObject(gateObject, 0)\n            );\n\n            if (colliding) {\n                collidesWith.push(gateObject);\n            }\n        }\n\n        return collidesWith;\n    }\n\n    public getCameraBounds(sourceEntity: Entity): GameObjectInfo[] {\n        const collidesWith: GameObjectInfo[] = [];\n\n        for (const triggerObject of this.scene.boundObjects) {\n            const colliding = this.boundingBoxesCollide(\n                sourceEntity.getBounds(), boundsFromMapObject(triggerObject)\n            );\n\n            if (colliding) {\n                collidesWith.push(triggerObject);\n            }\n        }\n\n        return collidesWith;\n    }\n\n    /**\n     * Checks if the two provided bounding boxes are touching each other\n     * @param box1 first bounding box\n     * @param box2 second bounding box\n     * @return `true` when the bounding boxes are touching, `false` if not.\n     */\n    public boundingBoxesCollide(box1: Bounds, box2: Bounds): boolean {\n        return !(\n            ((box1.y - box1.height) > (box2.y)) ||\n            (box1.y < (box2.y - box2.height)) ||\n            ((box1.x + box1.width) < box2.x) ||\n            (box1.x > (box2.x + box2.width))\n        );\n    }\n\n    public getObjectAt(\n        x: number, y: number, ignoreObjects: GameObject[] = [], ignore: Environment[] = []\n    ): GameObject | null {\n        for (const gameObject of this.scene.gameObjects) {\n            if (\n                gameObject !== this\n                && !ignoreObjects.includes(gameObject)\n                && isCollidableGameObject(gameObject)\n            ) {\n                const environment = gameObject.collidesWith(x, y);\n\n                if (environment !== Environment.AIR && !ignore.includes(environment)) {\n                    return gameObject;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Check collision of a vertical line with the world.\n     *\n     * @param x      - X position within the world.\n     * @param y      - Y start position of the line in the world.\n     * @param height - The height of the line to check\n     * @return 0 if no collision. Type of first collision along the line otherwise.\n     */\n    public collidesWithVerticalLine(\n        x: number, y: number, height: number, ignoreObjects?: GameObject[], ignore?: Environment[]\n    ): number {\n        for (let i = 0; i < height; i++) {\n            const collision = this.collidesWith(\n                x, y - i, ignoreObjects, ignore\n            );\n\n            if (collision) {\n                return collision;\n            }\n        }\n\n        return 0;\n    }\n\n    /**\n     * Returns the Y coordinate of the ground below the given world coordinate.\n     *\n     * @param x - X coordinate of current position.\n     * @param y - Y coordinate of current position.\n     * @return The Y coordinate of the ground below the given coordinate.\n     */\n    public getGround(\n        x: number, y: number, ignoreObjects?: GameObject[], ignore?: Environment[]\n    ): number {\n        while (\n            y > 0 && !this.collidesWith(x, y, ignoreObjects, ignore)\n        ) {\n            y--;\n        }\n\n        return y;\n    }\n\n    public startRain(): void {\n        this.raining = true;\n    }\n\n    public stopRain(): void {\n        this.raining = false;\n    }\n\n    public isRaining(): boolean {\n        return this.raining;\n    }\n}\n","/**\n * Width of the game canvas in pixels.\n */\nexport const GAME_CANVAS_WIDTH = 480;\n\n/**\n * Height of the game canvas in pixels.\n */\nexport const GAME_CANVAS_HEIGHT = 270;\n\n/**\n * Number if pixels per meter on the world map. Used to convert from pixel coordinates to meters (for size and\n * physics calculations).\n */\nexport const PIXEL_PER_METER = 18;\nexport const METER_PER_PIXEL = 1 / PIXEL_PER_METER;\n\nexport const SOUND_INTENSITY_MULTIPLIER = 50;\n\n/** Gravity in m/s² */\nexport const GRAVITY = 35;\n\n/** Gravity for short jumps (while flying upwards, after player releases jump key) in m/s² */\nexport const SHORT_JUMP_GRAVITY = 70;\n\n/** Drowning velocity in meters per second. */\nexport const DROWNING_VELOCITY = -1;\n\n/** Maximum movement speed of the player in m/s */\nexport const MAX_PLAYER_SPEED = 5;\n\n/** Maximum movement speed of the player in m/s */\nexport const MAX_PLAYER_RUNNING_SPEED = 7;\n\n/** Player movement acceleration on ground in m/s² */\nexport const PLAYER_ACCELERATION = 30;\n\n/** Player movement acceleration in air in m/s² */\nexport const PLAYER_ACCELERATION_AIR = 12;\n\n/** Player jump height in meters. */\nexport const PLAYER_JUMP_HEIGHT = 3.75;\n\n/** Player jump height in meters. */\nexport const PLAYER_BOUNCE_HEIGHT = 10;\n\n/** Terminal velocity in m/s */\nexport const TERMINAL_VELOCITY = -30;\n\n/** Threshold in seconds for allowing a jump after entering falling state */\nexport const PLAYER_JUMP_TIMING_THRESHOLD = 0.1;\n\n/** Color array containing all double jump particle colors */\nexport const DOUBLE_JUMP_COLORS = [ \"#ffffff\", \"#cccccc\", \"#aaaaaa\" ];\n\n/** Player dimensions */\nexport const PLAYER_HEIGHT = 1.60 * PIXEL_PER_METER;\nexport const PLAYER_WIDTH = 0.5 * PIXEL_PER_METER;\nexport const PLAYER_CARRY_HEIGHT = 4;\n\n/** Fonts */\nexport const DIALOG_FONT = \"fonts/pixcelsior.font.json\";\n","const { PI, cos, sin } = Math;\n\nexport type Easing = (t: number) => number;\n\nexport function linear(t: number): number {\n    return t;\n}\n\nexport function easeInSine(t: number): number {\n    return 1 - cos(t * PI / 2);\n}\n\nexport function easeOutSine(t: number): number {\n    return sin(t * PI / 2);\n}\n\nexport function easeInOutSine(t: number): number {\n    return 0.5 - cos(PI * t) / 2;\n}\n\nexport function easeInQuad(t: number): number {\n    return t * t;\n}\n\nexport function easeOutQuad(t: number): number {\n    return t * (2 - t);\n}\n\nexport function easeInOutQuad(t: number): number {\n    if (t < 0.5) {\n        return 2 * t * t;\n    } else {\n        return 4 * t - 2 * t * t - 1;\n    }\n}\n\nexport function easeInCubic(t: number): number {\n    return t ** 3;\n}\n\nexport function easeOutCubic(t: number): number {\n    return t ** 3 + 3 * (t - t * t);\n}\n\nexport function easeInOutCubic(t: number): number {\n    if (t < 0.5) {\n        return 4 * t ** 3;\n    } else {\n        return 4 * t ** 3 + 12 * (t - t * t) - 3;\n    }\n}\n\nexport function easeInQuart(t: number): number {\n    return t ** 4;\n}\n\nexport function easeOutQuart(t: number): number {\n    return 1 - (t - 1) ** 4;\n}\n\nexport function easeInOutQuart(t: number): number {\n    if (t < 0.5) {\n        return 8 * t ** 4;\n    } else {\n        return 1 - 8 * (t - 1) ** 4;\n    }\n}\n\nexport function easeInQuint(t: number): number {\n    return t ** 5;\n}\n\nexport function easeOutQuint(t: number): number {\n    return 1 + (t - 1) ** 5;\n}\n\nexport function easeInOutQuint(t: number): number {\n    if (t < 0.5) {\n        return 16 * t ** 5;\n    } else {\n        return 1 + 16 * (t - 1) ** 5;\n    }\n}\n\nexport function easeInExpo(t: number): number {\n    if (t <= 0) { return 0; }\n    return 2 ** (10 * (t - 1));\n}\n\nexport function easeOutExpo(t: number): number {\n    if (t >= 1) {\n        return 1;\n    }\n    return 1 - 1 / 1024 ** t;\n}\n\nexport function easeInOutExpo(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    if (t < 0.5) {\n        return 1048576 ** t / 2048;\n    } else {\n        return 1 - 512 / 1048576 ** t;\n    }\n}\n\nexport function easeInCirc(t: number): number {\n    return 1 - (1 - t * t) ** 0.5;\n}\n\nexport function easeOutCirc(t: number): number {\n    return (2 * t - t * t) ** 0.5;\n}\n\nexport function easeInOutCirc(t: number): number {\n    if (t < 0.5) {\n        return 0.5 - (0.25 - t * t) ** 0.5;\n    } else {\n        return ((4 * t * (2 - t) - 3) ** 0.5 + 1) / 2;\n    }\n}\n\nexport function easeInBack(t: number): number {\n    return 2.70158 * t ** 3 - 1.70158 * t * t;\n}\n\nexport function easeOutBack(t: number): number {\n    return 2.70158 * t ** 3 - 6.40316 * t * t + 4.70158 * t;\n}\n\nexport function easeInOutBack(t: number): number {\n    if (t < 0.5) {\n        return 14.379638 * t ** 3 - 5.189819 * t * t;\n    } else {\n        return 14.379638 * t ** 3 - 37.949095 * t * t + 32.759276 * t - 8.189819;\n    }\n}\n\nexport function easeInElastic(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    return 1024 ** (t - 1) * -sin(PI * (20 * t / 3 - 43 / 6));\n}\n\nexport function easeOutElastic(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    return sin(PI * (20 * t / 3 - 0.5)) / (1024 ** t) + 1;\n}\n\nexport function easeInOutElastic(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    if (t < 0.5) {\n        return 1048576 ** t / -2048 * sin(PI * (80 * t / 9 - 89 / 18));\n    } else {\n        return 512 / 1048576 ** t * sin(PI * (80 * t / 9 - 89 / 18)) + 1;\n    }\n}\n\nexport function easeOutBounce(t: number): number {\n    if (t < 4 / 11) {\n        return 121 * t * t / 16;\n    } else if (t < 8 / 11) {\n        return 121 * t * t / 16 - 33 * t / 4 + 3;\n    } else if (t < 10 / 11) {\n        return 121 * t * t / 16 - 99 * t / 8 + 6;\n    } else {\n        return 121 * t * t / 16 - 231 * t / 16 + 63 / 8;\n    }\n}\n\nexport function easeInBounce(t: number): number {\n    return 1 - easeOutBounce(1 - t);\n}\n\nexport function easeInOutBounce(t: number): number {\n    if (t < 0.5) {\n        return easeInBounce(t * 2) / 2;\n    } else {\n        return easeOutBounce(t * 2 - 1) / 2 + 0.5;\n    }\n}\n","export enum Direction {\n    CENTER = 0,\n    LEFT = 1,\n    RIGHT = 2,\n    TOP = 4,\n    BOTTOM = 8,\n    TOP_LEFT = TOP | LEFT,\n    BOTTOM_LEFT = BOTTOM | LEFT,\n    TOP_RIGHT = TOP | RIGHT,\n    BOTTOM_RIGHT = BOTTOM | RIGHT\n}\n\nexport namespace Direction {\n    export function isLeft(direction: Direction): boolean {\n        return (direction & Direction.LEFT) !== 0;\n    }\n\n    export function isRight(direction: Direction): boolean {\n        return (direction & Direction.RIGHT) !== 0;\n    }\n\n    export function isTop(direction: Direction): boolean {\n        return (direction & Direction.TOP) !== 0;\n    }\n\n    export function isBottom(direction: Direction): boolean {\n        return (direction & Direction.BOTTOM) !== 0;\n    }\n\n    export function isHorizontal(direction: Direction): boolean {\n        return isLeft(direction) || isRight(direction);\n    }\n\n    export function isVertical(direction: Direction): boolean {\n        return isLeft(direction) || isRight(direction);\n    }\n\n    export function isEdge(direction: Direction): boolean {\n        return direction === Direction.LEFT\n            || direction === Direction.RIGHT\n            || direction === Direction.TOP\n            || direction === Direction.BOTTOM;\n    }\n\n    export function isCorner(direction: Direction): boolean {\n        return direction === Direction.TOP_LEFT\n            || direction === Direction.TOP_RIGHT\n            || direction === Direction.BOTTOM_LEFT\n            || direction === Direction.BOTTOM_RIGHT;\n    }\n\n    export function getX(direction: Direction): number {\n        return isLeft(direction) ? -1 : isRight(direction) ? 1 : 0;\n    }\n\n    export function getY(direction: Direction): number {\n        return isTop(direction) ? -1 : isBottom(direction) ? 1 : 0;\n    }\n}\n","export async function loadImage(source: string | URL): Promise<HTMLImageElement> {\n    const img = new Image();\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n        img.onload = () => {\n            resolve(img);\n        };\n        img.onerror = () => {\n            reject(new Error(`Unable to load image '${source}'`));\n        };\n        img.src = source instanceof URL ? source.href : `assets/${source}`;\n    });\n}\n\nexport function createCanvas(width: number, height: number): HTMLCanvasElement {\n    const canvas = document.createElement(\"canvas\")!;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    return canvas;\n}\n\nexport function getRenderingContext(canvas: HTMLCanvasElement, contextId: \"2d\",\n    options?: CanvasRenderingContext2DSettings): CanvasRenderingContext2D;\nexport function getRenderingContext(canvas: HTMLCanvasElement, contextId: string, options?: unknown): RenderingContext {\n    const ctx = canvas.getContext(contextId, options);\n    if (ctx == null) {\n        throw new Error(`Canvas doesn't support context with id '${contextId}'`);\n    }\n    return ctx;\n}\n\nexport function createContext2D(width: number, height: number): CanvasRenderingContext2D {\n    return getRenderingContext(createCanvas(width, height), \"2d\");\n}\n\nexport function getImageData(image: HTMLImageElement): ImageData {\n    const ctx = createContext2D(image.width, image.height);\n    ctx.drawImage(image, 0, 0, image.width, image.height);\n\n    return ctx.getImageData(0, 0, image.width, image.height);\n}\n","/**\n * Affine transformation matrix. It behaves like a 3x3 matrix where the third row is always assumed to be 0 0 1.\n * This matrix is useful for 2D transformations and is compatible to the transformations done in a Canvas for example.\n */\nexport class AffineTransform {\n    /**\n     * Creates a matrix initialized to an identity matrix.\n     */\n    public constructor();\n\n    /**\n     * Creates a new matrix initialized to the given component values.\n     *\n     * @param m11 - The horizontal scaling. A value of 1 results in no scaling.\n     * @param m12 - The vertical skewing.\n     * @param m21 - The horizontal skewing.\n     * @param m22 - The vertical scaling. A value of 1 results in no scaling.\n     * @param dx  - The horizontal translation (moving).\n     * @param dy  - The vertical translation (moving).\n     */\n    public constructor(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number);\n\n    public constructor(\n        public m11: number = 1,\n        public m12: number = 0,\n        public m21: number = 0,\n        public m22: number = 1,\n        public dx: number = 0,\n        public dy: number = 0,\n    ) {}\n\n    /**\n     * Creates a new affine transformation from the given DOM matrix object.\n     *\n     * @aram domMatrix - The DOM matrix object. Must be a 2D matrix.\n     * @return The created affine transformation.\n     */\n    public static fromDOMMatrix(domMatrix: DOMMatrix): AffineTransform {\n        if (!domMatrix.is2D) {\n            throw new Error(\"Can only create Matrix3 from 2D DOMMatrix\");\n        }\n        return new AffineTransform(\n            domMatrix.a, domMatrix.b,\n            domMatrix.c, domMatrix.d,\n            domMatrix.e, domMatrix.f\n        );\n    }\n\n    /**\n     * Returns a clone of this matrix.\n     *\n     * @return The cloned matrix.\n     */\n    public clone(): AffineTransform {\n        return new AffineTransform(this.m11, this.m12, this.m21, this.m22, this.dx, this.dy);\n    }\n\n    /**\n     * Converts this matrix into a DOM matrix.\n     *\n     * @return The created DOM matrix.\n     */\n    public toDOMMatrix(): DOMMatrix {\n        return new DOMMatrix([ this.m11, this.m12, this.m21, this.m22, this.dx, this.dy ]);\n    }\n\n    /**\n     * Returns a human-readable string representation of the matrix.\n     *\n     * @return The human-readable string representation of the matrix.\n     */\n    public toString(): string {\n        return `[ ${this.m11}, ${this.m12}, ${this.m21}, ${this.m22}, ${this.dx}, ${this.dy} ]`;\n    }\n\n    /**\n     * Sets the matrix component values.\n     *\n     * @param m11 - The horizontal scaling. A value of 1 results in no scaling.\n     * @param m12 - The vertical skewing.\n     * @param m21 - The horizontal skewing.\n     * @param m22 - The vertical scaling. A value of 1 results in no scaling.\n     * @param dx  - The horizontal translation (moving).\n     * @param dy  - The vertical translation (moving).\n     */\n    public setComponents(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): this {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.dx = dx;\n        this.dy = dy;\n        return this;\n    }\n\n    /**\n     * Sets the matrix component values from another matrix.\n     *\n     * @param matrix - The matrix to copy the component values from.\n     */\n    public setMatrix(matrix: AffineTransform): this {\n        this.m11 = matrix.m11;\n        this.m12 = matrix.m12;\n        this.m21 = matrix.m21;\n        this.m22 = matrix.m22;\n        this.dx = matrix.dx;\n        this.dy = matrix.dy;\n        return this;\n    }\n\n    /**\n     * Checks if matrix is identity.\n     *\n     * @return True if identity, false if not.\n     */\n    public isIdentity(): boolean {\n        return this.m11 === 1\n            && this.m12 === 0\n            && this.m21 === 0\n            && this.m22 === 1\n            && this.dx === 0\n            && this.dy === 0;\n    }\n\n    /**\n     * Resets this matrix to identity.\n     */\n    public reset(): this {\n        this.m11 = 1;\n        this.m12 = 0;\n        this.m21 = 0;\n        this.m22 = 1;\n        this.dx = 0;\n        this.dy = 0;\n        return this;\n    }\n\n    /**\n     * Multiplies this matrix with the specified matrix (`this = this * other`).\n     *\n     * @param other - The other matrix to multiply this one with.\n     */\n    public mul(other: AffineTransform): this {\n        const a11 = this.m11, a12 = this.m12;\n        const a21 = this.m21, a22 = this.m22;\n        const a31 = this.dx, a32 = this.dy;\n        const b11 = other.m11, b12 = other.m12;\n        const b21 = other.m21, b22 = other.m22;\n        const b31 = other.dx, b32 = other.dy;\n        this.m11 = a11 * b11 + a21 * b12;\n        this.m12 = a12 * b11 + a22 * b12;\n        this.m21 = a11 * b21 + a21 * b22;\n        this.m22 = a12 * b21 + a22 * b22;\n        this.dx = a11 * b31 + a21 * b32 + a31;\n        this.dy = a12 * b31 + a22 * b32 + a32;\n        return this;\n    }\n\n    /**\n     * Divides this matrix by the specified matrix (`this = this / other` which is the same as\n     * `this = this * inverse(other)`).\n     *\n     * @param other - The other matrix to divide this one by.\n     */\n    public div(other: AffineTransform): this {\n        // a = this, b = other\n        const a11 = this.m11, a12 = this.m12;\n        const a21 = this.m21, a22 = this.m22;\n        const a31 = this.dx, a32 = this.dy;\n        const b11 = other.m11, b12 = other.m12;\n        const b21 = other.m21, b22 = other.m22;\n        const b31 = other.dx, b32 = other.dy;\n\n        // d = determinant(b)\n        const d = b11 * b22 - b21 * b12;\n\n        // c = invert(b)\n        const c11 = b22 / d;\n        const c12 = -b12 / d;\n        const c21 = -b21 / d;\n        const c22 = b11 / d;\n        const c31 = (b21 * b32 - b31 * b22) / d;\n        const c32 = (b31 * b12 - b11 * b32) / d;\n\n        // this = this * c\n        this.m11 = a11 * c11 + a21 * c12;\n        this.m12 = a12 * c11 + a22 * c12;\n        this.m21 = a11 * c21 + a21 * c22;\n        this.m22 = a12 * c21 + a22 * c22;\n        this.dx = a11 * c31 + a21 * c32 + a31;\n        this.dy = a12 * c31 + a22 * c32 + a32;\n\n        return this;\n    }\n\n    /**\n     * Returns the determinant of this matrix.\n     *\n     * @return The determinant of this matrix.\n     */\n    public getDeterminant(): number {\n        return this.m11 * this.m22 - this.m21 * this.m12;\n    }\n\n    /**\n     * Inverts this matrix.\n     */\n    public invert(): this {\n        const m11 = this.m11, m12 = this.m12;\n        const m21 = this.m21, m22 = this.m22;\n        const m31 = this.dx, m32 = this.dy;\n\n        const d = m11 * m22 - m21 * m12;\n\n        this.m11 = m22 / d;\n        this.m12 = -m12 / d;\n        this.m21 = -m21 / d;\n        this.m22 = m11 / d;\n        this.dx = (m21 * m32 - m31 * m22) / d;\n        this.dy = (m31 * m12 - m11 * m32) / d;\n\n        return this;\n    }\n\n    /**\n     * Translates this matrix by the specified values.\n     *\n     * @param dx - The X translation.\n     * @param dy - The Y translation.\n     */\n    public translate(dx: number, dy: number): this {\n        this.dx += dx * this.m11 + dy * this.m21;\n        this.dy += dx * this.m12 + dy * this.m22;\n        return this;\n    }\n\n    /**\n     * Translates this matrix by the specified X delta.\n     *\n     * @param d - The X translation delta.\n     */\n    public translateX(d: number): this {\n        this.dx += d * this.m11;\n        this.dy += d * this.m12;\n        return this;\n    }\n\n    /**\n     * Returns the X translation of the matrix.\n     *\n     * @return The X translation.\n     */\n    public getTranslationX(): number {\n        return this.dx;\n    }\n\n    /**\n     * Translates this matrix by the specified Y delta.\n     *\n     * @param d - The Y translation delta.\n     */\n    public translateY(d: number): this {\n        this.dx += d * this.m21;\n        this.dy += d * this.m22;\n        return this;\n    }\n\n    /**\n     * Returns the Y translation of the matrix.\n     *\n     * @return The Y translation.\n     */\n    public getTranslationY(): number {\n        return this.dy;\n    }\n\n    /**\n     * Sets matrix to a translation matrix.\n     *\n     * @param dx - The X translation.\n     * @param dy - The Y translation.\n     */\n    public setTranslation(dx: number, dy: number): this {\n        this.m11 =  1; this.m12 =  0;\n        this.m21 =  0; this.m22 =  1;\n        this.dx = dx; this.dy = dy;\n        return this;\n    }\n\n    /**\n     * Creates matrix initialized to a translation matrix.\n     *\n     * @param dx - The X translation.\n     * @param dy - The Y translation.\n     */\n    public static createTranslation(dx: number, dy: number): AffineTransform {\n        return new AffineTransform().setTranslation(dx, dy);\n    }\n\n    /**\n     * Scales this matrix by the specified factor.\n     *\n     * @param sx - The X scale factor.\n     * @param sy - The Y scale factor. Defaults to X scale factor.\n     */\n    public scale(sx: number, sy = sx): this {\n        this.m11 *= sx;\n        this.m12 *= sx;\n        this.m21 *= sy;\n        this.m22 *= sy;\n        return this;\n    }\n\n    /**\n     * Sets matrix to a scale matrix.\n     *\n     * @param sx - The X scale factor.\n     * @param sy - The Y scale factor. Defaults to X scale factor.\n     */\n    public setScale(sx: number, sy = sx): this {\n        this.m11 = sx; this.m12 =  0;\n        this.m21 =  0; this.m22 = sy;\n        this.dx =  0; this.dy =  0;\n        return this;\n    }\n\n    /**\n     * Scales this matrix by the specified factor along the X axis.\n     *\n     * @param s - The scale factor.\n     */\n    public scaleX(s: number): this {\n        this.m11 *= s;\n        this.m12 *= s;\n        return this;\n    }\n\n    /**\n     * Returns the X scale factor of the matrix.\n     *\n     * @return The X scale factor of the matrix.\n     */\n    public getScaleX(): number {\n        return Math.hypot(this.m11, this.m21);\n    }\n\n    /**\n     * Scales this matrix by the specified factor along the Y axis.\n     *\n     * @param s - The scale factor.\n     */\n    public scaleY(s: number): this {\n        this.m21 *= s;\n        this.m22 *= s;\n        return this;\n    }\n\n    /**\n     * Returns the Y scale factor of the matrix.\n     *\n     * @return The Y scale factor of the matrix.\n     */\n    public getScaleY(): number {\n        return Math.hypot(this.m12, this.m22);\n    }\n\n    /**\n     * Creates matrix initialized to a scale matrix.\n     *\n     * @param sx - The X scale factor.\n     * @param sy - The Y scale factor. Defaults to X scale factor.\n     */\n    public static createScale(sx: number, sy?: number): AffineTransform {\n        return new AffineTransform().setScale(sx, sy);\n    }\n\n    /**\n     * Rotates this matrix by the given angle.\n     *\n     * @param angle - The rotation angle in RAD.\n     */\n    public rotate(angle: number): this {\n        const m11 = this.m11, m12 = this.m12;\n        const m21 = this.m21, m22 = this.m22;\n        const s = Math.sin(angle), c = Math.cos(angle);\n        this.m11 = c * m11 + s * m21;\n        this.m12 = c * m12 + s * m22;\n        this.m21 = c * m21 - s * m11;\n        this.m22 = c * m22 - s * m12;\n        return this;\n    }\n\n    /**\n     * Returns the rotation of this matrix in radians.\n     *\n     * @return The rotation angle in radians.\n     */\n    public getRotation(): number {\n        const m11 = this.m11, m12 = this.m12;\n        const m21 = this.m21, m22 = this.m22;\n        if (m11 !== 0 || m21 !== 0) {\n            const acos = Math.acos(m11 / Math.hypot(m11, m21));\n            return m21 > 0 ? -acos : acos;\n        } else if (m12 !== 0 || m22 !== 0) {\n            const acos = Math.acos(m12 / Math.hypot(m12, m22));\n            return Math.PI / 2 + (m22 > 0 ? -acos : acos);\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Sets matrix to a rotation matrix.\n     *\n     * @param angle - The rotation angle in RAD.\n     */\n    public setRotation(angle: number): this {\n        const s = Math.sin(angle), c = Math.cos(angle);\n        this.m11 =  c; this.m12 = s;\n        this.m21 = -s; this.m22 = c;\n        this.dx =  0; this.dy = 0;\n        return this;\n    }\n\n    /**\n     * Create new matrix initialized to a rotation matrix.\n     *\n     * @param angle - The rotation angle in RAD.\n     */\n    public static createRotation(angle: number): AffineTransform {\n        return new AffineTransform().setRotation(angle);\n    }\n\n    /**\n     * Transforms the given 2D canvas rendering context.\n     *\n     * @param ctx - The 2D canvas rendering context to transform.\n     */\n    public transformCanvas(ctx: CanvasRenderingContext2D): this {\n        ctx.transform(this.m11, this.m12, this.m21, this.m22, this.dx, this.dy);\n        return this;\n    }\n\n    /**\n     * Sets the transformation of the given 2D canvas rendering context.\n     *\n     * @param ctx - The 2D canvas rendering context to set the transformation on.\n     */\n    public setCanvasTransform(ctx: CanvasRenderingContext2D): this {\n        ctx.setTransform(this.m11, this.m12, this.m21, this.m22, this.dx, this.dy);\n        return this;\n    }\n}\n","import { ReadonlyVector2, Vector2 } from \"./Vector2\";\n\n/**\n * A line connecting two vertices.\n */\nexport class Line2 {\n    private normal: Vector2 | null = null;\n    private center: Vector2 | null = null;\n\n    /**\n     * Creates a new line from vertex a to vertex b.\n     *\n     * @param start - The start of the line.\n     * @param end   - The end of the line.\n     */\n    public constructor(\n        public start: Vector2,\n        public end: Vector2\n    ) {}\n\n    /**\n     * Returns the normal of the line. For a line in a clock-wise polygon this normal points to the outside of the\n     * polygon.\n     *\n     * @return The line normal. Normalized to a unit vector.\n     */\n    public getNormal(): ReadonlyVector2 {\n        return (this.normal ?? (this.normal = new Vector2())).setComponents(\n            this.end.y - this.start.y,\n            this.start.x - this.end.x\n        ).normalize();\n    }\n\n    /**\n     * Returns the center of the line.\n     *\n     * @return The center of the line.\n     */\n    public getCenter(): ReadonlyVector2 {\n        return (this.center ?? (this.center = new Vector2())).setComponents(\n            (this.start.x + this.end.x) / 2,\n            (this.start.y + this.end.y) / 2\n        );\n    }\n\n    /**\n     * Draws the line to the given 2D canvas rendering context. This only applies the line geometry,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     */\n    public draw(ctx: CanvasRenderingContext2D): this {\n        const { start: a, end: b } = this;\n        ctx.moveTo(a.x, a.x);\n        ctx.lineTo(b.x, a.y);\n        return this;\n    }\n\n    /**\n     * Draws the line normal to the given 2D canvas rendering context. This only applies the line geometry,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     * @param len - Optional custom normal line length.\n     */\n    public drawNormal(ctx: CanvasRenderingContext2D, len = 25): this {\n        const normal = this.getNormal();\n        const center = this.getCenter();\n        ctx.moveTo(center.x, center.y);\n        ctx.lineTo(center.x + normal.x * len, center.y + normal.y * len);\n        return this;\n    }\n}\n","import { Line2 } from \"./Line2\";\nimport { ReadonlyVector2, Vector2 } from \"./Vector2\";\n\n/**\n * A polygon with any number of vertices.\n */\nexport class Polygon2 {\n    public readonly vertices: Vector2[];\n    public readonly edges: Line2[] = [];\n    private readonly normals: Vector2[] = [];\n\n    /**\n     * Creates a polygon with the given initial vertices.\n     *\n     * @param vertices - The polygon vertices.\n     */\n    public constructor(...vertices: Vector2[]) {\n        this.vertices = vertices;\n        for (let i = 0, max = vertices.length; i < max; ++i) {\n            this.edges.push(new Line2(vertices[i], vertices[i + 1] ?? vertices[0]));\n        }\n    }\n\n    /**\n     * Checks if polygon has at least one vertex.\n     *\n     * @return True if polygon has at least on vertex, false if not.\n     */\n    public hasVertices(): boolean {\n        return this.vertices.length > 0;\n    }\n\n    /**\n     * Adds the given vertex at the given index. Polygon edges are automatically corrected.\n     *\n     * @param vertex - The vertex to add.\n     * @param index  - Optional insertion index. If not specified then vertex is added at the end of the polygon.\n     */\n    public addVertex(vertex: Vector2, index: number = this.vertices.length): this {\n        const edge = new Line2(vertex, vertex);\n        this.vertices.splice(index, 0, vertex);\n        const previousEdge = this.edges[index - 1];\n        this.edges.splice(index, 0, edge);\n        if (previousEdge != null) {\n            edge.end = previousEdge.end;\n            previousEdge.end = vertex;\n        } else {\n            edge.end = this.vertices[0];\n        }\n        return this;\n    }\n\n    /**\n     * Removes the vertex at the given index. Polygon edges are automatically corrected.\n     *\n     * @param index - The index of the vertex to remove.\n     */\n    public removeVertex(index: number): this {\n        const edges = this.edges;\n        const edge = edges[index];\n        if (edge != null) {\n            const previousEdge = edges[index - 1] ?? edges[edges.length - 1];\n            const nextEdge = edges[index + 1] ?? edges[0];\n            if (previousEdge !== edge && nextEdge !== edge) {\n                nextEdge.start = edge.end;\n                previousEdge.end = edge.end;\n            }\n            this.vertices.splice(index, 1);\n            this.edges.splice(index, 1);\n        }\n        return this;\n    }\n\n    /**\n     * Removes all vertices from the polygon.\n     */\n    public clear(): this {\n        this.vertices.length = 0;\n        this.edges.length = 0;\n        this.normals.length = 0;\n        return this;\n    }\n\n    /**\n     * Returns the vertex normal for the vertex with the given index.\n     *\n     * @param index - The vertex index.\n     * @return The vertex normal.\n     */\n    public getVertexNormal(index: number): ReadonlyVector2 {\n        const normal = this.normals[index]?.reset() ?? (this.normals[index] = new Vector2());\n        const edges = this.edges;\n        const edge = edges[index];\n        if (edge != null) {\n            normal.add(edge.getNormal());\n            const previousEdge = edges[index - 1] ?? edges[edges.length - 1];\n            if (previousEdge != null) {\n                normal.add(previousEdge.getNormal());\n            }\n        }\n        return normal.normalize();\n    }\n\n    /**\n     * Draws the polygon to the given 2D canvas rendering context. This only applies the closed geometry, you have to\n     * fill/stroke/clip it yourself.\n     *\n     * @param ctx - The 2D canvas rendering context to render to.\n     */\n    public draw(ctx: CanvasRenderingContext2D): this {\n        const vertices = this.vertices;\n        if (vertices.length > 0) {\n            const first = vertices[0];\n            ctx.moveTo(first.x, first.y);\n            for (let i = 1, max = vertices.length; i < max; ++i) {\n                const next = vertices[i];\n                ctx.lineTo(next.x, next.y);\n            }\n        }\n        ctx.closePath();\n        return this;\n    }\n\n    /**\n     * Draws the polygon edge normals to the given 2D canvas rendering context. This only applies the line geometries,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     * @param len - Optional custom normal line length.\n     */\n    public drawNormals(ctx: CanvasRenderingContext2D, len?: number): this {\n        for (const edge of this.edges) {\n            edge.drawNormal(ctx, len);\n        }\n        return this;\n    }\n\n    /**\n     * Draws the vertex normals to the given 2D canvas rendering context. This only applies the line geometries,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     * @param len - Optional custom normal line length.\n     */\n    public drawVertexNormals(ctx: CanvasRenderingContext2D, len: number = 25): this {\n        this.vertices.forEach((vertex, index) => {\n            ctx.moveTo(vertex.x, vertex.y);\n            const normal = this.getVertexNormal(index);\n            ctx.lineTo(vertex.x + normal.x * len, vertex.y + normal.y * len);\n        });\n        return this;\n    }\n}\n","import { AffineTransform } from \"./AffineTransform\";\n\n/**\n * Minimal interface of a 2D vector.\n */\nexport interface Vector2Like {\n    x: number;\n    y: number;\n}\n\nexport interface ReadonlyVector2Like {\n    readonly x: number;\n    readonly y: number;\n}\n\nexport interface ReadonlyVector2 extends ReadonlyVector2Like {\n    /**\n     * Returns the length of the vector. If you only need to compare vector lengths so the real length doesn't matter\n     * then consider using the faster [[getSquareLength]] method which omits the expensive square root calculation.\n     *\n     * @return The vector length.\n     */\n    getLength(): number;\n\n    /**\n     * Returns the squared length of the vector. In some cases (Like comparing vector lengths) it is not necessary to\n     * compare the real length, it is enough to compare the squared length. This is faster because it only does\n     * addition and multiplication without a square root. If you need the real vector length then use the\n     * [[getLength]] method instead.\n     *\n     * @return The squared vector length.\n     */\n    getSquareLength(): number;\n\n    /**\n     * Returns the distance between this vector and the specified one. If you only need to compare vector distances so\n     * the real distance doesn't matter then consider using the faster [[getSquareDistance]] method which omits the\n     * expensive square root calculation.\n     *\n     * @param v - The other vector.\n     * @return The distance between this vector and the specified one.\n     */\n    getDistance(v: ReadonlyVector2Like): number;\n\n    /**\n     * Returns the squared distance between this vector and the specified one. In some cases (Like comparing\n     * vector distances) it is not necessary to compare the real distance, it is enough to compare the squared\n     * distance. This is faster because it only does addition and multiplication without a square root. If you need\n     * the real vector distance then use the [[getDistance]] method instead.\n     *\n     * @param v - The other vector.\n     * @return The squared distance between the two vectors.\n     */\n    getSquareDistance(v: ReadonlyVector2Like): number;\n\n    /**\n     * Returns the dot product of this vector and the specified one.\n     *\n     * @param v - The other vector.\n     * @return The dot product.\n     */\n    dot(v: ReadonlyVector2Like): number;\n\n    /**\n     * Returns a human-readable string representation of the vector.\n     *\n     * @param maxFractionDigits - Optional number of maximum fraction digits to use in the string. Defaults to 5.\n     * @return The human-readable string representation of the vector.\n     */\n    toString(maxFractionDigits?: number): string;\n}\n\n/**\n * Vector with two floating point components.\n */\nexport class Vector2 implements ReadonlyVector2Like, Vector2Like {\n    /**\n     * Creates a new vector with all components set to 0.\n     */\n    public constructor();\n\n    /**\n     * Creates a new vector with the given component values.\n     *\n     * @param x - The initial X component value.\n     * @param y - The initial Y component value.\n     */\n    public constructor(x: number, y: number);\n\n    public constructor(\n        public x: number = 0,\n        public y: number = 0\n    ) {}\n\n    /** @inheritDoc */\n    public toString(): string {\n        return `[ ${this.x}, ${this.y} ]`;\n    }\n\n    /**\n     * Sets the vector component values.\n     *\n     * @param x - The X component value to set.\n     * @param y - The Y component value to set.\n     */\n    public setComponents(x: number, y: number): this {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    /**\n     * Sets the vector component values by copying them from the given vector.\n     *\n     * @param vector - The vector to copy the X and Y component values from.\n     */\n    public setVector(vector: Vector2Like): this {\n        this.x = vector.x;\n        this.y = vector.y;\n        return this;\n    }\n\n    /** @inheritDoc */\n    public clone(): Vector2 {\n        return new Vector2(this.x, this.y);\n    }\n\n    /** @inheritDoc */\n    public getSquareLength(): number {\n        return this.x ** 2 + this.y ** 2;\n    }\n\n    /** @inheritDoc */\n    public getLength(): number {\n        return Math.sqrt(this.getSquareLength());\n    }\n\n    /** @inheritDoc */\n    public getSquareDistance(v: Vector2Like): number {\n        return (this.x - v.x) ** 2 + (this.y - v.y) ** 2;\n    }\n\n    /** @inheritDoc */\n    public getDistance(v: Vector2Like): number {\n        return Math.sqrt(this.getSquareDistance(v));\n    }\n\n    /** @inheritDoc */\n    public dot(v: Vector2Like): number {\n        return this.x * v.x + this.y * v.y;\n    }\n\n    /**\n     * Negates this vector.\n     */\n    public negate(): this {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n\n    /**\n     * Resets all components of this vector to 0.\n     */\n    public reset(): this {\n        this.x = this.y = 0;\n        return this;\n    }\n\n    /**\n     * Translates the vector by the given deltas.\n     *\n     * @param x - The x delta.\n     * @param y - The y delta.\n     */\n    public translate(x: number, y: number): this {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n\n    /**\n     * Adds the given vector to this vector.\n     *\n     * @param summand - The vector to add.\n     */\n    public add(summand: Vector2Like): this {\n        this.x += summand.x;\n        this.y += summand.y;\n        return this;\n    }\n\n    /**\n     * Subtracts the given vector from this vector.\n     *\n     * @param subtrahend - The vector to subtract from this vector.\n     */\n    public sub(subtrahend: Vector2Like): this {\n        this.x -= subtrahend.x;\n        this.y -= subtrahend.y;\n        return this;\n    }\n\n    /**\n     * Multiplies this vector with the specified matrix (In GLSL: `this = matrix * this`).\n     *\n     * @param matrix - The matrix to multiply this vector with.\n     */\n    public mul(arg: AffineTransform): this {\n        const x = this.x;\n        const y = this.y;\n        this.x = x * arg.m11 + y * arg.m21 + arg.dx;\n        this.y = x * arg.m12 + y * arg.m22 + arg.dy;\n        return this;\n    }\n\n    /**\n     * Multiplies this vector with the inverse of the specified matrix (In GLSL: `this = matrix / this`).\n     *\n     * @param matrix - The matrix to divide this vector by.\n     */\n    public div(arg: AffineTransform): this {\n        const b11 = arg.m11, b12 = arg.m12;\n        const b21 = arg.m21, b22 = arg.m22;\n        const x = this.x;\n        const y = this.y;\n        const d = b11 * b22 - b12 * b21;\n        const c11 = b22 / d;\n        const c12 = -b12 / d;\n        const c21 = -b21 / d;\n        const c22 = b11 / d;\n        const b31 = arg.dx, b32 = arg.dy;\n        this.x = x * c11 + y * c21 + (b21 * b32 - b31 * b22) / d;\n        this.y = x * c12 + y * c22 + (b31 * b12 - b11 * b32) / d;\n        return this;\n    }\n\n    /**\n     * Normalizes this vector to a length of 1.\n     */\n    public normalize(): this {\n        const len = this.getLength();\n        this.x /= len;\n        this.y /= len;\n        return this;\n    }\n}\n","import { ControllerEventType } from \"./ControllerEventType\";\nimport { ControllerFamily } from \"./ControllerFamily\";\nimport { ControllerIntent } from \"./ControllerIntent\";\nimport { GamepadModel } from \"./GamepadModel\";\n\nconst controllerFamilySymbol = Symbol(\"controllerFamily\");\nconst intentsSymbol = Symbol(\"intent\");\nconst eventTypeSymbol = Symbol(\"eventType\");\nconst repeatSymbol = Symbol(\"repeat\");\n\nexport class ControllerEvent extends Object {\n    private [controllerFamilySymbol]: ControllerFamily;\n    private [intentsSymbol]: ControllerIntent;\n    private [eventTypeSymbol]: ControllerEventType;\n    private [repeatSymbol]: boolean;\n\n    constructor(\n        controllerFamily: ControllerFamily, eventType: ControllerEventType,\n        intents: ControllerIntent[], repeat: boolean = false\n    ) {\n        super();\n\n        this[controllerFamilySymbol] = controllerFamily;\n        this[intentsSymbol] = intents.reduce((prev, curr) => prev | curr);\n        this[eventTypeSymbol] = eventType;\n        this[repeatSymbol] = repeat;\n    }\n\n    get controllerFamily(): ControllerFamily {\n        return this[controllerFamilySymbol];\n    }\n\n    get eventType(): ControllerEventType {\n        return this[eventTypeSymbol];\n    }\n\n    get repeat(): boolean {\n        return this[repeatSymbol];\n    }\n\n    get isMenuLeft(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.MENU_LEFT) === ControllerIntent.MENU_LEFT;\n    }\n\n    get isMenuRight(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.MENU_RIGHT) === ControllerIntent.MENU_RIGHT;\n    }\n\n    get isMenuUp(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.MENU_UP) === ControllerIntent.MENU_UP;\n    }\n\n    get isMenuDown(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.MENU_DOWN) === ControllerIntent.MENU_DOWN;\n    }\n\n    get isPlayerMoveLeft(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_MOVE_LEFT) === ControllerIntent.PLAYER_MOVE_LEFT;\n    }\n\n    get isPlayerMoveRight(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_MOVE_RIGHT) === ControllerIntent.PLAYER_MOVE_RIGHT;\n    }\n\n    get isPlayerJump(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_JUMP) === ControllerIntent.PLAYER_JUMP;\n    }\n\n    get isPlayerDrop(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_DROP) === ControllerIntent.PLAYER_DROP;\n    }\n\n    get isPlayerEnterDoor(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_ENTER_DOOR) === ControllerIntent.PLAYER_ENTER_DOOR;\n    }\n\n    get isPlayerInteract(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_INTERACT) === ControllerIntent.PLAYER_INTERACT;\n    }\n\n    get isPlayerAction(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_ACTION) === ControllerIntent.PLAYER_ACTION;\n    }\n\n    get isPlayerRun(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_RUN) === ControllerIntent.PLAYER_RUN;\n    }\n\n    get isPlayerDance1(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_DANCE_1) === ControllerIntent.PLAYER_DANCE_1;\n    }\n\n    get isPlayerDance2(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PLAYER_DANCE_2) === ControllerIntent.PLAYER_DANCE_2;\n    }\n\n    get isPause(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.PAUSE) === ControllerIntent.PAUSE;\n    }\n\n    get isConfirm(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.CONFIRM) === ControllerIntent.CONFIRM;\n    }\n\n    get isAbort(): boolean {\n        return (this[intentsSymbol] & ControllerIntent.ABORT) === ControllerIntent.ABORT;\n    }\n}\n\nconst gamepadModelSymbol = Symbol(\"gamepadModel\");\n\nexport class GamepadControllerEvent extends ControllerEvent {\n    private [gamepadModelSymbol]: GamepadModel;\n    constructor(gamepadModel: GamepadModel, eventType: ControllerEventType, intents: ControllerIntent[], repeat: boolean = false) {\n        super(ControllerFamily.GAMEPAD, eventType, intents, repeat);\n        this[gamepadModelSymbol] = gamepadModel;\n    }\n    get gamepadModel(): GamepadModel {\n        return this[gamepadModelSymbol];\n    }\n}\n","export enum ControllerEventType {\n    UP = \"up\",\n    DOWN = \"down\",\n    PRESS = \"press\"\n}\n","/**\n * This enumeration is used to classify the various known input methods.\n */\nexport enum ControllerFamily {\n    KEYBOARD = \"keyboard\",\n    GAMEPAD = \"gamepad\"\n}\n\n/**\n * This enum consists of all supported button aseprite sheets\n */\nexport enum ControllerSpriteMap {\n    KEYBOARD = \"keyboard\",\n    XBOX = \"xbox\",\n    PLAYSTATION = \"playstation\"\n}\n\n/**\n * This enum consists of all available animation tags supported by the button aseprite sheets\n */\nexport enum ControllerAnimationTags {\n    CONFIRM = \"confirm\",\n    JUMP = \"jump\",\n    ACTION = \"action\",\n    INTERACT = \"interact\",\n    OPEN_DOOR = \"up\",\n    BACK = \"back\"\n}\n","/**\n * Enumeration of the different intents that may be emitted by a single button,\n * whereas a button might either be a physical key on a keyboard, a mapped axis\n * on a gamepad or a touch screen event.\n *\n * Right now, these events are stored in a bit mask to be extra efficient, …\n * …maybe that's not really necessary and should be changed to improve\n * readability at some point…\n */\nexport enum ControllerIntent {\n    /** Used for unknown / unmapped buttons. */\n    NONE = 0,\n\n    /** Player movement: left */\n    PLAYER_MOVE_LEFT = 0b0000_0000_0000_0000_0001,\n    /** Player movement: right */\n    PLAYER_MOVE_RIGHT = 0b0000_0000_0000_0000_0010,\n    /** Player movement: jump */\n    PLAYER_JUMP = 0b0000_0000_0000_0000_0100,\n    /** Player movement: DROP (or: duck/crouch) */\n    PLAYER_DROP = 0b0000_0000_0000_0000_1000,\n\n    /** Talk to NPCs, read signs etc */\n    PLAYER_INTERACT = 0b0000_0000_0000_0001_0000,\n\n    /** Action, throw stuff */\n    PLAYER_ACTION = 0b0000_0000_0000_0010_0000,\n\n    /** Dance move no. 1 */\n    PLAYER_DANCE_1 = 0b0000_0000_0000_0100_0000,\n\n    /** Dance move no. 2 */\n    PLAYER_DANCE_2 = 0b0000_0000_0000_1000_0000,\n\n    // Menu navigation\n    MENU_LEFT = 0b0000_0000_0001_0000_0000,\n    MENU_RIGHT = 0b0000_0000_0010_0000_0000,\n    MENU_UP = 0b0000_0000_0100_0000_0000,\n    MENU_DOWN = 0b0000_0000_1000_0000_0000,\n\n    /** The key usually known as \"enter\" or something alike. */\n    CONFIRM = 0b0000_0001_0000_0000_0000,\n\n    /** Go through doors */\n    PLAYER_ENTER_DOOR = 0b0000_0010_0000_0000_0000,\n\n    /** Pause/unpause. */\n    PAUSE = 0b0000_0100_0000_0000_0000,\n\n    /** Back / abort / get-me-the-hell-out-of-here. */\n    ABORT = 0b0000_1000_0000_0000_0000,\n\n    /** Run modifier */\n    PLAYER_RUN = 0b0001_0000_0000_0000_0000,\n\n    UNUSED_1 = 0b0010_0000_0000_0000_0000,\n    UNUSED_2 = 0b0100_0000_0000_0000_0000,\n    UNUSED_3 = 0b1000_0000_0000_0000_0000,\n}\n","import { ControllerEvent } from \"./ControllerEvent\";\nimport { ControllerFamily, ControllerSpriteMap } from \"./ControllerFamily\";\nimport { GamepadStyle } from \"./GamepadStyle\";\nimport { Signal } from \"../Signal\";\n\n/** Symbol to identify the current/active controller family */\nconst currentControllerFamilySymbol = Symbol(\"currentControllerFamily\");\n\nexport class ControllerManager {\n    private static readonly INSTANCE = new ControllerManager();\n\n    public static getInstance(): ControllerManager {\n        return ControllerManager.INSTANCE;\n    }\n\n    public readonly onButtonDown = new Signal<ControllerEvent>();\n    public readonly onButtonUp = new Signal<ControllerEvent>();\n    public readonly onButtonPress = new Signal<ControllerEvent>();\n    public readonly onControllerFamilyChange = new Signal<ControllerFamily>();\n\n    public selectedGamepadStyle = GamepadStyle.XBOX;\n\n    private [currentControllerFamilySymbol]: ControllerFamily;\n\n    private constructor(initialControllerFamily: ControllerFamily = ControllerFamily.KEYBOARD) {\n        this.currentControllerFamily = initialControllerFamily;\n\n        this.onButtonDown.connect(e => {\n            if (this.currentControllerFamily !== e.controllerFamily) {\n                this.currentControllerFamily = e.controllerFamily;\n            }\n        });\n    }\n\n    public set currentControllerFamily(controllerFamily: ControllerFamily) {\n        if (controllerFamily !== this[currentControllerFamilySymbol]) {\n            this[currentControllerFamilySymbol] = controllerFamily;\n            this.onControllerFamilyChange.emit(controllerFamily);\n        }\n    }\n\n    /**\n     * Returns the current (a.k.a. most recently used!) controller family.\n     * Can be used to determine which tooltips (gamepad buttons or keyboard indicators) to show.\n     */\n    public get currentControllerFamily(): ControllerFamily {\n        return this[currentControllerFamilySymbol];\n    }\n\n    public toggleSelectedGamepadStyle(): void {\n        this.selectedGamepadStyle = this.selectedGamepadStyle === GamepadStyle.XBOX ? GamepadStyle.PLAYSTATION : GamepadStyle.XBOX;\n    }\n\n    public get controllerSprite(): ControllerSpriteMap {\n        if (this.currentControllerFamily === ControllerFamily.GAMEPAD) {\n            switch (ControllerManager.getInstance().selectedGamepadStyle) {\n                case GamepadStyle.PLAYSTATION:\n                    return ControllerSpriteMap.PLAYSTATION;\n                case GamepadStyle.XBOX:\n                    return ControllerSpriteMap.XBOX;\n            }\n        }\n\n        // Fallback to Keyboard\n        return ControllerSpriteMap.KEYBOARD;\n    }\n}\n","import { ControllerManager } from \"./ControllerManager\";\nimport { ControllerIntent } from \"./ControllerIntent\";\nimport { ControllerEventType } from \"./ControllerEventType\";\nimport { GamepadControllerEvent } from \"./ControllerEvent\";\nimport { GamepadModel } from \"./GamepadModel\";\n\n/**\n * Game Pad Buttons\n */\nenum GamePadButtonId {\n    /** Button A / Cross*/\n    BUTTON_1 = 0,\n    /** Button B / Circle*/\n    BUTTON_2 = 1,\n    /** Button X / Square*/\n    BUTTON_3 = 2,\n    /** Button Y / Triangle */\n    BUTTON_4 = 3,\n    SHOULDER_TOP_LEFT = 4,\n    SHOULDER_TOP_RIGHT = 5,\n    SHOULDER_BOTTOM_LEFT = 6,\n    SHOULDER_BOTTOM_RIGHT = 7,\n    SELECT = 8,\n    START = 9,\n    STICK_BUTTON_LEFT = 10,\n    STICK_BUTTON_RIGHT = 11,\n    D_PAD_UP = 12,\n    D_PAD_DOWN = 13,\n    D_PAD_LEFT = 14,\n    D_PAD_RIGHT = 15,\n    VENDOR = 16\n}\n\nenum StickAxisId {\n    /** Left stick X axis */\n    LEFT_LEFT_RIGHT = 0,\n    /** Left stick Y axis */\n    LEFT_UP_DOWN = 1,\n    /** Right stick X axis */\n    RIGHT_LEFT_RIGHT = 2,\n    /** Right stick Y axis */\n    RIGHT_UP_DOWN = 3\n}\n\nconst axisMapping = new Map<number, {button1: number|undefined, button2: number|undefined}>();\naxisMapping.set(StickAxisId.LEFT_LEFT_RIGHT, { button1: GamePadButtonId.D_PAD_LEFT, button2: GamePadButtonId.D_PAD_RIGHT });\naxisMapping.set(StickAxisId.LEFT_UP_DOWN, { button1: GamePadButtonId.D_PAD_UP, button2: GamePadButtonId.D_PAD_DOWN });\n\nconst intentMappings = new Map<number, ControllerIntent[]>();\nintentMappings.set(GamePadButtonId.D_PAD_UP, [ControllerIntent.PLAYER_ENTER_DOOR, ControllerIntent.MENU_UP]);\nintentMappings.set(GamePadButtonId.D_PAD_DOWN, [ControllerIntent.PLAYER_DROP, ControllerIntent.MENU_DOWN]);\nintentMappings.set(GamePadButtonId.D_PAD_LEFT, [ControllerIntent.PLAYER_MOVE_LEFT, ControllerIntent.MENU_LEFT]);\nintentMappings.set(GamePadButtonId.D_PAD_RIGHT, [ControllerIntent.PLAYER_MOVE_RIGHT, ControllerIntent.MENU_RIGHT]);\nintentMappings.set(GamePadButtonId.BUTTON_1, [ControllerIntent.PLAYER_JUMP, ControllerIntent.CONFIRM]);\nintentMappings.set(GamePadButtonId.BUTTON_2, [ControllerIntent.ABORT]);\nintentMappings.set(GamePadButtonId.BUTTON_3, [ControllerIntent.PLAYER_RUN]);\nintentMappings.set(GamePadButtonId.BUTTON_4, [ControllerIntent.PLAYER_INTERACT]);\nintentMappings.set(GamePadButtonId.SHOULDER_TOP_LEFT, [ControllerIntent.PLAYER_DANCE_1, ControllerIntent.PLAYER_ACTION]);\nintentMappings.set(GamePadButtonId.SHOULDER_TOP_RIGHT, [ControllerIntent.PLAYER_DANCE_2, ControllerIntent.PLAYER_ACTION]);\nintentMappings.set(GamePadButtonId.START, [ControllerIntent.PAUSE]);\n\nclass GamepadButtonWrapper {\n    public readonly index: number;\n    private pressed: boolean;\n    private gamepad: GamepadWrapper;\n\n    constructor(index: number, wrapped: GamepadButton, gamepad: GamepadWrapper) {\n        this.index = index;\n        this.pressed = wrapped.pressed;\n        this.gamepad = gamepad;\n    }\n\n    public setPressed(pressed: boolean): void {\n        const controllerManager = ControllerManager.getInstance();\n        const oldPressed = this.pressed;\n        this.pressed = pressed;\n\n        if (oldPressed !== pressed) {\n            if (pressed) {\n                controllerManager.onButtonDown.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.DOWN,\n                        intentMappings.get(this.index) || [ControllerIntent.NONE]\n                    )\n                );\n            } else {\n                controllerManager.onButtonUp.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.UP,\n                        intentMappings.get(this.index) || [ControllerIntent.NONE]\n                    )\n                );\n            }\n        }\n    }\n\n}\n\nclass GamepadAxisWrapper {\n    /**\n     * Threshold to use to emulate virtual buttons.\n     * Values between 0.1 (slight touches of the axis trigger button presses)\n     * 0.9 (much force needed) can be used here.\n     *\n     * Avoid using 0.0 and 1.0 as they cannot be reached on some gamepads or\n     * might lead to button flibber flubber...\n     */\n    private threshold = 0.5;\n\n    public readonly index: number;\n    private value: number = 0.0;\n    private gamepad: GamepadWrapper;\n\n    constructor(index: number, gamepad: GamepadWrapper) {\n        this.index = index;\n        this.gamepad = gamepad;\n    }\n\n    public setValue(newValue: number): void {\n        const controllerManager = ControllerManager.getInstance();\n        const oldValue = this.value;\n        this.value = newValue;\n        let emulatedButtonId: number|undefined = undefined;\n\n        if (oldValue <= -this.threshold && newValue > -this.threshold) {\n            // Virtual button 1 released\n            emulatedButtonId = axisMapping.get(this.index)?.button1;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonUp.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.UP,\n                        intentMappings.get(emulatedButtonId) || [ControllerIntent.NONE]\n                    )\n                );\n            }\n        } else if (oldValue > -this.threshold && newValue <= -this.threshold) {\n            // Virtual button 1 pressed\n            emulatedButtonId = axisMapping.get(this.index)?.button1;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonDown.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.DOWN,\n                        intentMappings.get(emulatedButtonId) || [ControllerIntent.NONE]\n                    )\n                );\n            }\n        }\n\n        if (oldValue > this.threshold && newValue <= this.threshold) {\n            // Virtual button 2 released\n            emulatedButtonId = axisMapping.get(this.index)?.button2;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonUp.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.UP,\n                        intentMappings.get(emulatedButtonId) || [ControllerIntent.NONE]\n                    )\n                );\n            }\n        } else if (oldValue < this.threshold && newValue >= this.threshold) {\n            // Virtual button 2 pressed\n            emulatedButtonId = axisMapping.get(this.index)?.button2;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonDown.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.DOWN,\n                        intentMappings.get(emulatedButtonId) || [ControllerIntent.NONE]\n                    )\n                );\n            }\n        }\n    }\n}\n\n/**\n * Some obscure magic to make sure that gamepad buttons and axes are mapped onto unified controller\n * events.\n */\nclass GamepadWrapper {\n    private index: number;\n    private id: string;\n    private buttons: GamepadButtonWrapper[];\n    private axes: GamepadAxisWrapper[];\n    public gamepadModel: GamepadModel;\n    constructor(gamepad: Gamepad) {\n        this.index = gamepad.index;\n        this.id = gamepad.id;\n        this.gamepadModel = GamepadModel.fromString(this.id);\n        this.buttons = new Array(gamepad.buttons.length);\n\n        for (let i = 0; i < this.buttons.length; i++) {\n            this.buttons[i] = new GamepadButtonWrapper(i, gamepad.buttons[i], this);\n        }\n\n        this.axes = new Array(gamepad.axes.length);\n\n        for (let i = 0; i < this.axes.length; i++) {\n            this.axes[i] = new GamepadAxisWrapper(i, this);\n        }\n    }\n\n    public update(): void {\n        const gamepad = navigator.getGamepads()[this.index];\n\n        if (gamepad != null) {\n            this.buttons.forEach(button => button.setPressed(gamepad.buttons[button.index].pressed));\n            this.axes.forEach(axis => axis.setValue(gamepad.axes[axis.index]));\n        }\n    }\n\n    public toString(): string {\n        return `Gamepad (index: ${this.index}, id: ${this.id})`;\n    }\n}\n\nexport class GamepadInput {\n    private gamepads: Map<string, GamepadWrapper>;\n\n    constructor() {\n        this.gamepads = new Map();\n\n        window.addEventListener(\"gamepadconnected\", (e: any) => {\n            console.debug(\"Gamepad connected: \", e);\n            const gamepad = (e as GamepadEventInit).gamepad;\n\n            if (gamepad != null) {\n                this.gamepads.set(gamepad.id, new GamepadWrapper(gamepad));\n            }\n        });\n\n        window.addEventListener(\"gamepaddisconnected\", (e) => {\n            console.debug(\"Gamepad disconnected: \", e);\n            const gamepad = (e as any as GamepadEventInit).gamepad;\n\n            if (gamepad != null) {\n                this.gamepads.delete(gamepad.id);\n            }\n        });\n    }\n\n    public update(): void {\n        this.gamepads.forEach(gamepad => gamepad.update());\n    }\n\n}\n","// See https://gamepad-tester.com/controllers for a list of some possible controller IDs.\n\nimport { GamepadStyle } from \"./GamepadStyle\";\n\nconst typemap: Map<RegExp,GamepadStyle> = new Map();\n\n/* spell-checker: disable */\ntypemap.set(/^.*?[Xx][Ii][Nn][Pp][Uu][Tt].*$/, GamepadStyle.XBOX);\n// Vendor ID of Microsoft Corp.\ntypemap.set(/^.*045e.*$/, GamepadStyle.XBOX);\ntypemap.set(/^.*?[Ss]tadia\\ [Cc]ontroller.*$/, GamepadStyle.STADIA);\n// Anything with playstation in its name\ntypemap.set(/^.*?[Pp][Ll][Aa][Yy][Ss][Tt][Aa][Ii][Oo][Nn].*$/, GamepadStyle.XBOX);\n// Vendor ID of Sony Inc.\ntypemap.set(/^.*054c.*$/, GamepadStyle.PLAYSTATION);\n\n/**\n * Regular expression to extract vendor and product identifier.\n */\nconst productAndVendorMatcher = /^.*?[Vv]endor:?\\s*(?<vendorId>.{4}).*?[Pp]roduct:?\\s*(?<productId>.{4}).*?$/;\n/* spell-checker: enable */\n\nexport class GamepadModel {\n\n    constructor(public style: GamepadStyle, vendorId?: number|undefined, productId?: number|undefined) {\n    }\n\n    /**\n     * Parses a gamepad identifier string and returns an object that encapsulates\n     * @param str\n     *   Gamepad identifier string as reported by the Gamepad API.\n     */\n    public static fromString(str: string): GamepadModel {\n        for (const [key, value] of typemap) {\n            if (key.exec(str)) {\n                const productAndVendorMatch = productAndVendorMatcher.exec(str);\n                let vendorId: string | undefined;\n                let productId;\n                if (productAndVendorMatch !== null) {\n                    vendorId = productAndVendorMatch.groups?.vendorId;\n                    productId = productAndVendorMatch.groups?.productId;\n                }\n                return new GamepadModel(value, parseInt(vendorId || \"-1\", 16), parseInt(productId || \"-1\"));\n            }\n        }\n        // Nothing matches? Well,... that's bad luck...\n        return DEFAULT_GAMEPAD_MODEL;\n    }\n\n}\n\nexport const DEFAULT_GAMEPAD_MODEL: GamepadModel = new GamepadModel(GamepadStyle.UNKNOWN);\n","/**\n * Enumeration of the different gamepad styles.\n *\n * Mainly used to adjust button mappings to offer the best possible *expected* gaming\n * experience and to make sure that graphics are displayed in-game that match the\n * controller being used.\n */\nexport enum GamepadStyle {\n\n    /** Default gamepad type if nothing else matches. */\n    UNKNOWN = \"unknown\",\n\n    XBOX = \"xbox\",\n    PLAYSTATION = \"playstation\",\n    STADIA = \"stadia\"\n\n}\n","import { ControllerEvent } from \"./ControllerEvent\";\nimport { ControllerEventType } from \"./ControllerEventType\";\nimport { ControllerFamily } from \"./ControllerFamily\";\nimport { ControllerIntent } from \"./ControllerIntent\";\nimport { ControllerManager } from \"./ControllerManager\";\nimport { Signal } from \"../Signal\";\n\nconst preventDefaultKeyCodes: string[] = [\n    \"ArrowUp\", \"ArrowDown\", \"ArrowRight\", \"ArrowLeft\", \"Space\"\n];\n\nconst keyToIntentMappings = new Map<string, ControllerIntent[]>();\n\nkeyToIntentMappings.set(\"Space\", [ControllerIntent.PLAYER_JUMP]);\nkeyToIntentMappings.set(\"KeyW\", [ControllerIntent.PLAYER_ENTER_DOOR, ControllerIntent.MENU_UP]);\nkeyToIntentMappings.set(\"KeyA\", [ControllerIntent.PLAYER_MOVE_LEFT, ControllerIntent.MENU_LEFT]);\nkeyToIntentMappings.set(\"KeyS\", [ControllerIntent.PLAYER_DROP, ControllerIntent.MENU_DOWN]);\nkeyToIntentMappings.set(\"KeyD\", [ControllerIntent.PLAYER_MOVE_RIGHT, ControllerIntent.MENU_RIGHT]);\nkeyToIntentMappings.set(\"ArrowUp\", [ControllerIntent.PLAYER_ENTER_DOOR, ControllerIntent.MENU_UP]);\nkeyToIntentMappings.set(\"ArrowDown\", [ControllerIntent.PLAYER_DROP, ControllerIntent.MENU_DOWN]);\nkeyToIntentMappings.set(\"ArrowLeft\", [ControllerIntent.PLAYER_MOVE_LEFT, ControllerIntent.MENU_LEFT]);\nkeyToIntentMappings.set(\"ArrowRight\", [ControllerIntent.PLAYER_MOVE_RIGHT, ControllerIntent.MENU_RIGHT]);\nkeyToIntentMappings.set(\"Enter\", [ControllerIntent.PLAYER_INTERACT, ControllerIntent.CONFIRM]);\nkeyToIntentMappings.set(\"NumpadEnter\", [ControllerIntent.PLAYER_INTERACT, ControllerIntent.CONFIRM]);\nkeyToIntentMappings.set(\"Escape\", [ControllerIntent.ABORT, ControllerIntent.PAUSE]);\nkeyToIntentMappings.set(\"ShiftLeft\", [ControllerIntent.PLAYER_RUN]);\nkeyToIntentMappings.set(\"ShiftRight\", [ControllerIntent.PLAYER_RUN]);\nkeyToIntentMappings.set(\"KeyE\", [ControllerIntent.PLAYER_INTERACT, ControllerIntent.CONFIRM]);\nkeyToIntentMappings.set(\"KeyF\", [ControllerIntent.PLAYER_ACTION]);\nkeyToIntentMappings.set(\"Digit1\", [ControllerIntent.PLAYER_DANCE_1]);\nkeyToIntentMappings.set(\"Digit2\", [ControllerIntent.PLAYER_DANCE_2]);\nkeyToIntentMappings.set(\"Numpad1\", [ControllerIntent.PLAYER_DANCE_1]);\nkeyToIntentMappings.set(\"Numpad2\", [ControllerIntent.PLAYER_DANCE_2]);\n\nexport class Keyboard {\n    public readonly onKeyDown = new Signal<KeyboardEvent>();\n    public readonly onKeyUp = new Signal<KeyboardEvent>();\n    public readonly onKeyPress = new Signal<KeyboardEvent>();\n    private readonly pressed = new Set<string>();\n    private readonly controllerManager = ControllerManager.getInstance();\n\n    public constructor() {\n        document.addEventListener(\"keypress\", event => this.handleKeyPress(event));\n        document.addEventListener(\"keydown\", event => this.handleKeyDown(event));\n        document.addEventListener(\"keyup\", event => this.handleKeyUp(event));\n    }\n\n    private handleKeyPress(event: KeyboardEvent): void {\n        this.onKeyPress.emit(event);\n\n        // Quick workaround to make sure, that modifier keys never trigger a game-related\n        // controller event. Especially necessary to make other non-game related actions\n        // possible. (Shift is used as a modifier key to enable running and is therefore\n        // excluded from the list below)\n        if (event.altKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n\n        this.controllerManager.onButtonPress.emit(\n            new ControllerEvent(\n                ControllerFamily.KEYBOARD, ControllerEventType.PRESS,\n                keyToIntentMappings.get(event.code) || [ControllerIntent.NONE], event.repeat\n            )\n        );\n    }\n\n    private handleKeyDown(event: KeyboardEvent): void {\n        if (preventDefaultKeyCodes.includes(event.code)) {\n            event.preventDefault();\n        }\n\n        if (!event.repeat) {\n            this.pressed.add(event.key);\n        }\n\n        this.onKeyDown.emit(event);\n\n        if (event.altKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n\n        this.controllerManager.onButtonDown.emit(\n            new ControllerEvent(\n                ControllerFamily.KEYBOARD, ControllerEventType.DOWN,\n                keyToIntentMappings.get(event.code) || [ControllerIntent.NONE], event.repeat\n            )\n        );\n    }\n\n    private handleKeyUp(event: KeyboardEvent): void {\n        if (!event.repeat) {\n            this.pressed.delete(event.key);\n        }\n\n        this.onKeyUp.emit(event);\n\n        if (event.altKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n\n        this.controllerManager.onButtonUp.emit(\n            new ControllerEvent(\n                ControllerFamily.KEYBOARD, ControllerEventType.UP,\n                keyToIntentMappings.get(event.code) || [ControllerIntent.NONE], event.repeat\n            )\n        );\n    }\n\n    public isPressed(key: string): boolean {\n        return this.pressed.has(key);\n    }\n}\n","import { Game } from \"../Game\";\nimport { SceneNode, SceneNodeArgs } from \"./SceneNode\";\nimport { Aseprite } from \"../Aseprite\";\n\n/**\n * Constructor arguments for [[AsepriteNode]].\n */\nexport interface AsepriteNodeArgs extends SceneNodeArgs {\n    /** The Aseprite to display. */\n    aseprite: Aseprite;\n\n    /** Optional animation tag to draw. */\n    tag?: string;\n}\n\n/**\n * Scene node for displaying an [[Aseprite]].\n *\n * @param T - Optional owner game class.\n */\nexport class AsepriteNode<T extends Game = Game> extends SceneNode<T> {\n    /** The displayed aseprite. */\n    private aseprite: Aseprite;\n\n    /** The animation tag to draw. Null to draw whole animation. */\n    private tag: string | null;\n\n    /** The current time index of the animation. */\n    private time = 0;\n\n    /**\n     * Creates a new scene node displaying the given Aseprite.\n     */\n    public constructor({ aseprite, ...args }: AsepriteNodeArgs) {\n        super({\n            width: aseprite.width,\n            height: aseprite.height,\n            ...args\n        });\n        this.aseprite = aseprite;\n        this.tag = args.tag ?? null;\n    }\n\n    /**\n     * Returns the displayed Aseprite.\n     *\n     * @return The displayed Aseprite.\n     */\n    public getAseprite(): Aseprite {\n        return this.aseprite;\n    }\n\n    /**\n     * Sets the Aseprite.\n     *\n     * @param aseprite - The Aseprite to draw.\n     */\n    public setAseprite(aseprite: Aseprite): this {\n        if (aseprite !== this.aseprite) {\n            this.aseprite = aseprite;\n            this.resizeTo(aseprite.width, aseprite.height);\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the current animation tag. Null if whole animation is displayed.\n     *\n     * @return The current animation tag or null for whole animation.\n     */\n    public getTag(): string | null {\n        return this.tag;\n    }\n\n    /**\n     * Sets the animation tag. Null to display whole animation.\n     *\n     * @param tag - The animation tag to set. Null to unset.\n     */\n    public setTag(tag: string | null): this {\n        if (tag !== this.tag) {\n            this.tag = tag;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /** @inheritDoc */\n    public update(dt: number) {\n        this.time += dt;\n    }\n\n    /** @inheritDoc */\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (this.tag != null) {\n            this.aseprite.drawTag(ctx, this.tag, 0, 0, this.time * 1000);\n        } else {\n            this.aseprite.draw(ctx, 0, 0, this.time * 1000);\n        }\n    }\n}\n","import { SceneNode, SceneNodeArgs } from \"./SceneNode\";\nimport { FriendlyFire } from \"../FriendlyFire\";\nimport { ControllerAnimationTags, ControllerSpriteMap } from \"../input/ControllerFamily\";\nimport { ControllerManager } from \"../input/ControllerManager\";\nimport { AsepriteNode } from \"./AsepriteNode\";\nimport { TextNode } from \"./TextNode\";\nimport { asset } from \"../Assets\";\nimport { Aseprite } from \"../Aseprite\";\nimport { Direction } from \"../geom/Direction\";\nimport { DIALOG_FONT } from \"../constants\";\nimport { BitmapFont } from \"../BitmapFont\";\n\nexport interface ControlTooltipArgs extends SceneNodeArgs {\n    control: ControllerAnimationTags,\n    label: string\n}\n\nexport class ControlTooltipNode extends SceneNode<FriendlyFire> {\n    @asset(DIALOG_FONT)\n    private static font: BitmapFont;\n\n    @asset([\n        \"sprites/buttons_keyboard.aseprite.json\",\n        \"sprites/buttons_xbox.aseprite.json\",\n        \"sprites/buttons_playstation.aseprite.json\"\n    ])\n    private static buttons: Aseprite[];\n    private controllerSpriteMapRecords: Record<ControllerSpriteMap, Aseprite> = {\n        [ControllerSpriteMap.KEYBOARD]: ControlTooltipNode.buttons[0],\n        [ControllerSpriteMap.XBOX]: ControlTooltipNode.buttons[1],\n        [ControllerSpriteMap.PLAYSTATION]: ControlTooltipNode.buttons[2]\n    };\n\n    private readonly controllerManager = ControllerManager.getInstance();\n    private readonly icon: AsepriteNode;\n    private readonly label: TextNode;\n    private readonly gap = 6;\n\n    public constructor({ control: key, label, ...args }: ControlTooltipArgs) {\n        super({\n            childAnchor: Direction.LEFT,\n            ...args\n        });\n        this.icon = new AsepriteNode({\n            aseprite: this.controllerSpriteMapRecords[this.controllerManager.controllerSprite],\n            tag: key,\n            anchor: Direction.LEFT\n        }).appendTo(this);\n        this.label = new TextNode({\n            font: ControlTooltipNode.font,\n            anchor: Direction.LEFT,\n            text: label,\n            color: \"white\",\n            outlineColor: \"black\",\n            y: -1\n        }).appendTo(this);\n        this.updateLayout();\n    }\n\n    /** @inheritDoc */\n    protected activate(): void {\n        this.controllerManager.onControllerFamilyChange.connect(this.updateControllerFamily, this);\n    }\n\n    /** @inheritDoc */\n    protected deactivate(): void {\n        this.controllerManager.onControllerFamilyChange.disconnect(this.updateControllerFamily, this);\n    }\n\n    private updateControllerFamily(): void {\n        this.icon.setAseprite(this.controllerSpriteMapRecords[this.controllerManager.controllerSprite]);\n        this.updateLayout();\n    }\n\n    private updateLayout(): void {\n        const iconWidth = this.icon.getWidth();\n        this.label.setX(iconWidth + this.gap);\n        this.resizeTo(\n            iconWidth + this.gap + this.label.getWidth(),\n            Math.max(this.icon.getHeight(), this.label.getHeight())\n        );\n    }\n}\n","import { Game } from \"../Game\";\nimport { SceneNode, SceneNodeArgs } from \"./SceneNode\";\n\n/**\n * Constructor arguments for [[ImageNode]].\n */\nexport interface ImageNodeArgs extends SceneNodeArgs {\n    /** The image to be displayed by the image node. */\n    image: HTMLImageElement;\n}\n\n/**\n * Scene node for displaying an HTMLImageElement.\n *\n * @param T - Optional owner game class.\n */\nexport class ImageNode<T extends Game = Game> extends SceneNode<T> {\n    /** The image to display. */\n    private readonly image: HTMLImageElement;\n\n    /**\n     * Creates a new scene node displaying the given image.\n     */\n    public constructor({ image, ...args }: ImageNodeArgs) {\n        super({\n            width: image.width,\n            height: image.height,\n            ...args\n        });\n        this.image = image;\n    }\n\n    /**\n     * Returns the displayed image.\n     *\n     * @return The displayed image.\n     */\n    public getImage(): HTMLImageElement {\n        return this.image;\n    }\n\n    /** @inheritDoc */\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.drawImage(this.image, 0, 0);\n    }\n}\n","import { Game } from \"../Game\";\nimport { SceneNode, SceneNodeArgs } from \"./SceneNode\";\nimport { clamp } from \"../util\";\n\nconst DEFAULT_BACKGROUND_STYLE = \"#111\";\nconst DEFAULT_BORDER_STYLE = \"#222\";\nconst DEFAULT_PROGRESS_STYLE = \"#888\";\nconst DEFAULT_WIDTH = 200;\nconst DEFAULT_HEIGHT = 8;\n\n/**\n * Constructor arguments for [[ProgressBarNode]].\n */\nexport interface ProgressBarNodeArgs extends SceneNodeArgs {\n    backgroundStyle?: string;\n    borderStyle?: string\n    progressStyle?: string;\n}\n\n/**\n * Scene node for displaying a progress bar.\n *\n * @param T - Optional owner game class.\n */\nexport class ProgressBarNode<T extends Game = Game> extends SceneNode<T> {\n    private backgroundStyle: string;\n    private borderStyle: string;\n    private progressStyle: string;\n    private progress: number = 0;\n\n    /**\n     * Creates a new scene node displaying the given image.\n     */\n    public constructor({ backgroundStyle = DEFAULT_BACKGROUND_STYLE, borderStyle = DEFAULT_BORDER_STYLE,\n            progressStyle = DEFAULT_PROGRESS_STYLE, ...args }: ProgressBarNodeArgs = {}) {\n        super({\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT,\n            ...args\n        });\n        this.backgroundStyle = backgroundStyle;\n        this.borderStyle = borderStyle;\n        this.progressStyle = progressStyle;\n    }\n\n    public setProgress(progress: number): this {\n        progress = clamp(progress, 0, 1);\n        if (progress !== this.progress) {\n            this.progress = progress;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    public getProgress(): number {\n        return this.progress;\n    }\n\n    /** @inheritDoc */\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n\n        const width = this.getWidth();\n        const height = this.getHeight();\n\n        // Draw background\n        ctx.fillStyle = this.backgroundStyle;\n        ctx.fillRect(0, 0, width, height);\n\n        // Draw progress bar\n        ctx.fillStyle = this.progressStyle;\n        ctx.fillRect(0, 0, width * this.progress, height);\n\n        // Draw border\n        ctx.save();\n        ctx.strokeStyle = this.borderStyle;\n        ctx.lineWidth = 2;\n        ctx.rect(0, 0, width, height);\n        ctx.clip();\n        ctx.stroke();\n        ctx.restore();\n\n        ctx.restore();\n    }\n}\n","import { Game } from \"../Game\";\nimport { SceneNode, PostDrawHints } from \"./SceneNode\";\nimport { Direction } from \"../geom/Direction\";\nimport { Scene } from \"../Scene\";\n\n/**\n * Function signature for updating the root node. This function is exposed to the scene through the constructor so\n * the scene can call it but no one else can by accident.\n */\nexport type UpdateRootNode = (dt: number) => number;\n\n/**\n * Function signature for drawing the root node.\n */\nexport type DrawRootNode = (ctx: CanvasRenderingContext2D, layer: number, width: number, height: number)\n    => PostDrawHints;\n\n/**\n * The root node of a scene.\n *\n * @param T - Optional owner game class.\n */\nexport class RootNode<T extends Game = Game> extends SceneNode<T> {\n    /**\n     * Creates a new root scene node for the given scene. Functions for updating and drawing the root node (and its\n     * child nodes) is exposed to the scene through the second parameter. Only the scene can use these exposed\n     * functions, no one else can by accident.\n     *\n     * @param scene - The scene this root node is meant for.\n     * @param expose - Callback for exposing the update/draw methods of the root node to the scene so the scene can\n     *                 call it without making the methods public.\n     */\n    public constructor(scene: Scene<T, unknown>, expose: (update: UpdateRootNode, draw: DrawRootNode) => void) {\n        super({ anchor: Direction.TOP_LEFT, childAnchor: Direction.TOP_LEFT });\n        this.scene = scene;\n        expose(this.updateAll.bind(this), this.drawAllWithBounds.bind(this));\n    }\n\n    /**\n     * Draws this node and its child nodes recursively and then renders the node bounds when enabled.\n     *\n     * @param ctx    - The rendering context.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Hints which suggests further actions after drawing.\n     */\n    private drawAllWithBounds(ctx: CanvasRenderingContext2D, layer: number, width: number, height: number):\n            PostDrawHints {\n        const flags = this.drawAll(ctx, layer, width, height);\n        if ((flags & PostDrawHints.DRAW_BOUNDS) !== 0) {\n            this.drawBounds(ctx);\n        }\n        return flags;\n    }\n}\n","import { Scene } from \"../Scene\";\nimport { Game } from \"../Game\";\nimport { Direction } from \"../geom/Direction\";\nimport { AnimationArgs, SceneNodeAnimation } from \"./SceneNodeAnimation\";\nimport { AffineTransform } from \"../graphics/AffineTransform\";\nimport { Polygon2 } from \"../graphics/Polygon2\";\nimport { Vector2 } from \"../graphics/Vector2\";\n\n/**\n * Hints which are returned to the scene after drawing the scene graph. These hints can suggest further actions after\n * drawing like requesting continuous drawing because of running animations.\n */\nexport enum PostDrawHints {\n    /** As long as this hint is present the scene must be continuously redrawn to keep animations running. */\n    CONTINUE_DRAWING = 1,\n\n    /**\n     * When this flag is set then at least one node has the showBounds flag set to true. The root node already\n     * handles this flag by drawing the bounds when this hint is present.\n     */\n    DRAW_BOUNDS = 2\n}\n\n/**\n * Constructor arguments for [[SceneNode]].\n *\n * @param T - Optional owner game class.\n */\nexport interface SceneNodeArgs {\n    /** Optional initial scene node ID. */\n    id?: string | null;\n\n    /** Optional initial horizontal position of the scene node. Defaults to 0. */\n    x?: number;\n\n    /** Optional initial vertical position of the scene node. Defaults to 0. */\n    y?: number;\n\n    /** Optional initial width of the scene node. Defaults to 0. */\n    width?: number;\n\n    /** Optional initial height of the scene node. Defaults to 0. */\n    height?: number;\n\n    /**\n     * Optional initial node anchor. Defaults to CENTER which means the X/Y coordinates of the node define where\n     * the center of this scene node is displayed relative to the parent node.\n     */\n    anchor?: Direction;\n\n    /**\n     * Optional initial child node anchor. Defaults to CENTER which means the child nodes are positioned relative to\n     * the center of this scene node.\n     */\n    childAnchor?: Direction;\n\n    /**\n     * Optional initial node opacity. Must be 0 or higher. 0.0 means fully transparent. Defaults to 1.0 which means\n     * fully opaque. Can be larger than 1.0 to compensate transparency of its parent.\n     */\n    opacity?: number;\n\n    /** Optional initial layer (0-31) to put the node onto. Defaults to 0. */\n    layer?: number;\n\n    /** Optional initial showBounds flag. Set to true to show bounds around the node for debugging purposes. */\n    showBounds?: boolean;\n}\n\n/**\n * Base scene node. Is used as base class for more specialized scene nodes but can also be used standalone as parent\n * node for other nodes (similar to a DIV element in HTML for example).\n *\n * TODO Implement scene invalidation properly.\n */\nexport class SceneNode<T extends Game = Game> {\n    /** The parent node. Null if none. */\n    private parent: SceneNode<T> | null = null;\n\n    /** The next sibling node. Null if none. */\n    private nextSibling: SceneNode<T> | null = null;\n\n    /** The previous sibling node. Null if none. */\n    private previousSibling: SceneNode<T> | null = null;\n\n    /** The first child node. Null if none. */\n    private firstChild: SceneNode<T> | null = null;\n\n    /** The last child node. Null if none. */\n    private lastChild: SceneNode<T> | null = null;\n\n    /** The scene this node is connected to. Null if none. */\n    protected scene: Scene<T, unknown> | null = null;\n\n    /** The ID of the node. Null if none. */\n    private id: string | null;\n\n    /** The horizontal position relative to parent node. */\n    private x: number;\n\n    /** The vertical position relative to parent node. */\n    private y: number;\n\n    /** The node width. */\n    private width: number;\n\n    /** The node height. */\n    private height: number;\n\n    /**\n     * The anchor defining the origin of this scene node. When set to TOP_LEFT for example then the X/Y coordinates of\n     * this node define where to display the upper left corner of it. When set to CENTER then the node is centered at\n     * its X/Y coordinates.\n     */\n    private anchor: Direction;\n\n    /**\n     * The anchor of the local coordinate system. When set to CENTER for example then the X/Y coordinates or child\n     * nodes are relative to the center of this node.\n     */\n    private childAnchor: Direction;\n\n    /**\n     * The bounds polygon. This is updated on demand and automatically invalidated when node size changes. Node\n     * has to call [[invalidateBounds]] manually when something else influences the bounds.\n     */\n    private boundsPolygon: Polygon2 = new Polygon2();\n\n    /**\n     * The transformation matrix of this node. This transformation is applied to the node before moving the node to\n     * its position (X/Y coordinates). So in simple cases this transformation is not needed at all and its up to you\n     * if you want to use the coordinates and/or the transformation matrix.\n     */\n    private readonly transformation = new AffineTransform();\n\n    /**\n     * The transformation matrix combining the nodes transformation with all the parent transformations. This is\n     * calculated on-the-fly when a scene node is updated.\n     */\n    private readonly sceneTransformation = new AffineTransform();\n\n    /** Array with currently active animations. Animations are automatically removed from the array when finished.*/\n    private readonly animations: SceneNodeAnimation<T>[] = [];\n\n    /**\n     * The current opacity of the node. 0.0 means fully transparent and 1.0 means fully opaque. Can be larger\n     * than 1.0 to compensate transparency of its parent.\n     */\n    private opacity: number;\n\n    /** Set to true to show bounds. Useful for debugging. */\n    private showBounds: boolean;\n\n    /**\n     * The layer this node is drawn on. Internal representation is stored in `2^n` while setter and getter works\n     * with `n` instead. This is because the layering system internally works with fast bit masks.\n     */\n    private layer: number;\n\n    /**\n     * Creates a new scene node with the given initial settings.\n     */\n    public constructor({ id = null, x = 0, y = 0, width = 0, height = 0, anchor = Direction.CENTER,\n            childAnchor = Direction.CENTER, opacity = 1, showBounds = false, layer = 0 }: SceneNodeArgs = {}) {\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.opacity = opacity;\n        this.anchor = anchor;\n        this.childAnchor = childAnchor;\n        this.showBounds = showBounds;\n        this.layer = 1 << layer;\n    }\n\n    /**\n     * Returns the node ID.\n     *\n     * @return The ID of the node or null if none.\n     */\n    public getId(): string | null {\n        return this.id;\n    }\n\n    /**\n     * Sets (or removes) the node ID.\n     *\n     * @param id - The id to set or null to unset.\n     */\n    public setId(id: string | null): this {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * Returns the X position of the node relative to the parent node.\n     *\n     * @return The X position.\n     */\n    public getX(): number {\n        return this.x;\n    }\n\n    /**\n     * Sets the horizontal position relative to the parent node.\n     *\n     * @param x - The horizontal position to set.\n     */\n    public setX(x: number): this {\n        if (x !== this.x) {\n            this.x = x;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the Y position of the node relative the parent node.\n     *\n     * @return The Y position.\n     */\n    public getY(): number {\n        return this.y;\n    }\n\n    /**\n     * Sets the vertical position relative to the parent node.\n     *\n     * @param y - The vertical position to set.\n     */\n    public setY(y: number): this {\n        if (y !== this.y) {\n            this.y = y;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Moves the node by the given deltas.\n     *\n     * @param x - The horizontal delta to move the node by.\n     * @param y - The vertical delta to move the node by.\n     */\n    public moveBy(x: number, y: number): this {\n        if (x !== 0 || y !== 0) {\n            this.x += x;\n            this.y += y;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Moves the node to the given position relative to its parent node.\n     *\n     * @param x - The horizontal position to move to.\n     * @param y - The vertical position to move to.\n     */\n    public moveTo(x: number, y: number): this {\n        if (x !== this.x || y !== this.y) {\n            this.x = x;\n            this.y = y;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the width of the node.\n     *\n     * @return The node width.\n     */\n    public getWidth(): number {\n        return this.width;\n    }\n\n    /**\n     * Sets the width of the node.\n     *\n     * @param width - The width to set.\n     */\n    public setWidth(width: number): this {\n        if (width !== this.width) {\n            this.width = width;\n            this.invalidate();\n            this.invalidateBounds();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the width of the node.\n     *\n     * @return The node width.\n     */\n    public getHeight(): number {\n        return this.height;\n    }\n\n    /**\n     * Sets the height of the node.\n     *\n     * @param height - The height to set.\n     */\n    public setHeight(height: number): this {\n        if (height !== this.height) {\n            this.height = height;\n            this.invalidate();\n            this.invalidateBounds();\n        }\n        return this;\n    }\n\n    /**\n     * Resizes the node to the given width and height.\n     *\n     * @param width  - The width to set.\n     * @param height - The height to set.\n     */\n    public resizeTo(width: number, height: number): this {\n        if (width !== this.width || height !== this.height) {\n            this.width = width;\n            this.height = height;\n            this.invalidate();\n            this.invalidateBounds();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the current opacity of the node.\n     *\n     * @return The opacity. 0.0 means fully transparent, 1.0 means fully opaque.\n     */\n    public getOpacity(): number {\n        return this.opacity;\n    }\n\n    /**\n     * Sets the nodes opacity.\n     *\n     * @pram opacity - The opacity to set. 0.0 means fully transparent, 1.0 means fully opaque. Can be larger than 1.0\n     *                 to compensate transparency of its parent.\n     */\n    public setOpacity(opacity: number): this {\n        opacity = Math.max(0, opacity);\n        if (opacity !== this.opacity) {\n            this.opacity = opacity;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the effective node opacity which is the nodes opacity multiplied by the parents effective opacity.\n     *\n     * @return The effective node opacity clamped to valid range of 0.0 to 1.0.\n     */\n    public getEffectiveOpacity(): number {\n        if (this.opacity === Infinity) {\n            return 1;\n        }\n        return Math.max(0, Math.min(1, (this.parent?.getEffectiveOpacity() ?? 1) * this.opacity));\n    }\n\n    /**\n     * Returns the node anchor which defines the meaning of the X/Y coordinates of the node. CENTER means the X/Y\n     * coordinates define the center of the node. TOP_LEFT means the X/Y coordinates define the upper left corner of\n     * the node.\n     *\n     * @return The node anchor.\n     */\n    public getAnchor(): Direction {\n        return this.anchor;\n    }\n\n    /**\n     * Sets the node anchor which defines the meaning of the X/Y coordinates of the node. CENTER means the X/Y\n     * coordinates define the center of the node. TOP_LEFT means the X/Y coordinates define the upper left corner of\n     * the node.\n     *\n     * @param anchor - The node anchor to set.\n     */\n    public setAnchor(anchor: Direction): this {\n        if (anchor !== this.anchor) {\n            this.anchor = anchor;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the child anchor which defines the origin of the local coordinate system to which the coordinates of\n     * child nodes are relative to.\n     *\n     * @return The child anchor.\n     */\n    public getChildAnchor(): Direction {\n        return this.childAnchor;\n    }\n\n    /**\n     * Sets the child anchor which defines the origin of the local coordinate system to which the coordinates of\n     * child nodes are relative to.\n     *\n     * @param childAnchor - The child anchor to set.\n     */\n    public setChildAnchor(childAnchor: Direction): this {\n        if (childAnchor !== this.childAnchor) {\n            this.childAnchor = childAnchor;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the custom transformation of this node which can be manipulated by the [[transform]] method. This\n     * transformation is applied to the node before it is rendered at its intended position. Transformation and\n     * node position can complement each other or you can only use one of them, that's up to you.\n     *\n     * @return The custom node transformation.\n     */\n    public getTransformation(): AffineTransform {\n        return this.transformation;\n    }\n\n    /**\n     * Modifies the custom transformation matrix of this node. Calls the given transformer function which can then\n     * modify the given transformation matrix. After this the node is invalidated to recalculate bounds and redraw it.\n     *\n     * @param transformer - Function to call with transformation matrix as argument.\n     */\n    public transform(transformer: (transformation: AffineTransform) => void): this {\n        transformer(this.transformation);\n        return this.invalidate();\n    }\n\n    /**\n     * Returns the scene the node is currently attached to. Null if none.\n     *\n     * @return The current scene or null if none.\n     */\n    public getScene(): Scene<T> | null {\n        return this.scene;\n    }\n\n    /**\n     * Sets the scene this node and all its children belongs to. This is called internally when a node is added to\n     * the scene.\n     *\n     * @param scene - The scene the node belongs to from now on. null to unset the current scene.\n     */\n    private setScene(scene: Scene<T> | null): void {\n        if (scene !== this.scene) {\n            if (this.scene) {\n                this.deactivate();\n            }\n            this.scene = scene;\n            if (scene) {\n                this.activate();\n            }\n            this.forEachChild(node => node.setScene(scene));\n        }\n    }\n\n    /**\n     * Called when node is added to scene. Can be overwritten to connect event handlers for example.\n     */\n    protected activate(): void {}\n\n    /**\n     * Called when node is removed from scene. Can be overwritten to disconnect event handlers for example.\n     */\n    protected deactivate(): void {}\n\n    /**\n     * Returns the parent node of this node or null if node is not attached to a parent or is the root node.\n     *\n     * @return The parent node or null if unattached or root element.\n     */\n    public getParent(): SceneNode<T> | null {\n        return this.parent;\n    }\n\n    /**\n     * Returns the next node at the same level.\n     *\n     * @return The next sibling or null if none.\n     */\n    public getNextSibling(): SceneNode<T> | null {\n        return this.nextSibling;\n    }\n\n    /**\n     * Returns the previous node at the same level.\n     *\n     * @return The previous sibling or null if none.\n     */\n    public getPreviousSibling(): SceneNode<T> | null {\n        return this.previousSibling;\n    }\n\n    /**\n     * Returns the first child node.\n     *\n     * @return The first child node or null if none.\n     */\n    public getFirstChild(): SceneNode<T> | null {\n        return this.firstChild;\n    }\n\n    /**\n     * Returns the last child node.\n     *\n     * @return The last child node or null if none.\n     */\n    public getLastChild(): SceneNode<T> | null {\n        return this.lastChild;\n    }\n\n    /**\n     * Checks if this node has child nodes.\n     *\n     * @return True if it child nodes are present, false if not.\n     */\n    public hasChildNodes(): boolean {\n        return this.firstChild != null;\n    }\n\n    /**\n     * Appends the given child node so it becomes the last child of this node.\n     *\n     * @param node - The child node to append.\n     */\n    public appendChild(node: SceneNode<T>): this {\n        if (node === this) {\n            throw new Error(\"Node can not be appended to itself\");\n        }\n\n        // Remove from old parent if there is one\n        const oldParent = node.parent;\n        if (oldParent) {\n            oldParent.removeChild(node);\n        }\n\n        // Append the child\n        node.previousSibling = this.lastChild;\n        const oldLastChild = this.lastChild;\n        if (oldLastChild) {\n            oldLastChild.nextSibling = node;\n        }\n        this.lastChild = node;\n        if (!this.firstChild) {\n            this.firstChild = node;\n        }\n        node.parent = this;\n        node.setScene(this.scene);\n\n        node.invalidate();\n        this.invalidate();\n        return this;\n    }\n\n    /**\n     * Prepends the given child node so it becomes the first child of this node.\n     *\n     * @param node - The child node to prepend.\n     */\n    public prependChild(node: SceneNode<T>): this {\n        if (this.firstChild != null) {\n            return this.insertBefore(node, this.firstChild);\n        } else {\n            return this.appendChild(node);\n        }\n    }\n\n    /**\n     * Removes the given child node\n     *\n     * @param child - The child node to remove.\n     */\n    public removeChild(node: SceneNode<T>): this {\n        if (node.parent !== this) {\n            throw new Error(\"Node must be a child node\");\n        }\n\n        // Remove node from linked list\n        const next = node.nextSibling;\n        const prev = node.previousSibling;\n        if (next) {\n            next.previousSibling = prev;\n        }\n        if (prev) {\n            prev.nextSibling = next;\n        }\n\n        // Correct first/last reference\n        if (node === this.firstChild) {\n            this.firstChild = next;\n        }\n        if (node === this.lastChild) {\n            this.lastChild = prev;\n        }\n\n        // Remove all references from node\n        node.parent = null;\n        node.nextSibling = null;\n        node.previousSibling = null;\n        node.setScene(null);\n\n        node.invalidate();\n        this.invalidate();\n\n        return this;\n    }\n\n    /**\n     * Removes this node from the scene. The node is then a detached node ready to be added to the scene (or some\n     * other scene) again.\n     */\n    public remove(): this {\n        if (this.parent) {\n            this.parent.removeChild(this);\n        }\n        return this;\n    }\n\n    /**\n     * Removes all child nodes.\n     */\n    public clear(): this {\n        while (this.lastChild) {\n            this.removeChild(this.lastChild);\n        }\n        return this;\n    }\n\n    /**\n     * Inserts the given child node before the specified reference child node.\n     *\n     * @param newNode - The child node to insert.\n     * @param refNode - The reference node. The child node is inserted before this one.\n     */\n    public insertBefore(newNode: SceneNode<T>, refNode: SceneNode<T>): this {\n        if (newNode === this) {\n            throw new Error(\"Node can not be inserted into itself\");\n        }\n        if (refNode.parent !== this) {\n            throw new Error(\"Reference node must be a child node\");\n        }\n\n        // Remove from old parent if there is one\n        const oldParent = newNode.parent;\n        if (oldParent) {\n            oldParent.removeChild(newNode);\n        }\n\n        // Insert the node\n        const oldPrevious = refNode.previousSibling;\n        if (!oldPrevious) {\n            this.firstChild = newNode;\n        } else {\n            oldPrevious.nextSibling = newNode;\n        }\n        refNode.previousSibling = newNode;\n        newNode.previousSibling = oldPrevious;\n        newNode.nextSibling = refNode;\n        newNode.parent = this;\n        newNode.setScene(this.scene);\n\n        return this.invalidate();\n    }\n\n    /**\n     * Replaces the given child node with a new node.\n     *\n     * @param oldNode - The old child node to replace.\n     * @param newNode - The new node to replace the old one with.\n     */\n    public replaceChild(oldNode: SceneNode<T>, newNode: SceneNode<T>): this {\n        if (newNode === this) {\n            throw new Error(\"newNode must not be the parent node\");\n        }\n        if (oldNode.parent !== this) {\n            throw new Error(\"oldNode must be a child node\");\n        }\n\n        // If new node is the same as the old node then do nothing\n        if (newNode === oldNode) {\n            return this;\n        }\n\n        const next = oldNode.nextSibling;\n        this.removeChild(oldNode);\n        if (next) {\n            this.insertBefore(newNode, next);\n        } else {\n            this.appendChild(newNode);\n        }\n\n        return this;\n    }\n\n    /**\n     * Replace the given node with this one.\n     *\n     * @param node - The node to replace.\n     */\n    public replace(node: SceneNode<T>): this {\n        if (this.parent) {\n            this.parent.replaceChild(this, node);\n        }\n        return this;\n    }\n\n    /**\n     * Appends this node to the given parent node.\n     *\n     * @param node - The parent node to append this node to.\n     */\n    public appendTo(node: SceneNode<T>): this {\n        node.appendChild(this);\n        return this;\n    }\n\n    /**\n     * Prepends this node to the given parent node.\n     *\n     * @param node - The parent node to prepend this node to.\n     */\n    public prependTo(node: SceneNode<T>): this {\n        node.prependChild(this);\n        return this;\n    }\n\n    /**\n     * Iterates over all child nodes and calls the given callback with the currently iterated node as parameter.\n     *\n     * @param callback - The callback to call for each child node.\n     * @param thisArg  - Optional value to use as `this` when executing `callback`.\n     */\n    public forEachChild(callback: (node: SceneNode<T>, index: number) => void, thisArg: any = this): this {\n        let index = 0;\n        let node = this.firstChild;\n        while (node) {\n            const next = node.nextSibling;\n            callback.call(thisArg, node, index++);\n            node = next;\n        }\n        return this;\n    }\n\n    /**\n     * Iterates over all descendant nodes and calls the given callback with the currently iterated node as parameter.\n     *\n     * @param callback - The callback to call for each descendant node.\n     * @param thisArg  - Optional value to use as `this` when executing `callback`.\n     */\n    public forEachDescendant(callback: (node: SceneNode<T>) => void, thisArg: any = this): this {\n        let node = this.firstChild;\n        while (node != null && node !== this) {\n            let next = node.firstChild;\n            if (next == null) {\n                next = node.nextSibling;\n            }\n            if (next == null) {\n                next = node.parent?.nextSibling ?? null;\n            }\n            callback.call(thisArg, node);\n            node = next;\n        }\n        return this;\n    }\n\n    /**\n     * Returns the first child node for which the given callback returns true.\n     *\n     * @param callback - The callback which checks if the iterated node is the one to look for.\n     * @return The found matching child node or null if none.\n     */\n    public findChild(callback: (node: SceneNode<T>, index: number) => boolean, thisArg: unknown = this):\n            SceneNode<T> | null {\n        let index = 0;\n        let node = this.firstChild;\n        while (node) {\n            const next = node.nextSibling;\n            if (callback.call(thisArg, node, index++)) {\n                return node;\n            }\n            node = next;\n        }\n        return null;\n    }\n\n    /**\n     * Returns the first descendant node for which the given callback returns true.\n     *\n     * @param callback - The callback which checks if the iterated node is the one to look for.\n     * @return The found matching descendant node or null if none.\n     */\n    public findDescendant(callback: (node: SceneNode<T>) => boolean, thisArg: unknown = this):\n            SceneNode<T> | null {\n                let node = this.firstChild;\n        while (node != null && node !== this) {\n            let next = node.firstChild;\n            if (next == null) {\n                next = node.nextSibling;\n            }\n            if (next == null) {\n                next = node.parent?.nextSibling ?? null;\n            }\n            if (callback.call(thisArg, node)) {\n                return node;\n            }\n            node = next;\n        }\n        return null;\n    }\n\n    /**\n     * Tests whether at least one child node passes the test implemented by the provided function.\n     *\n     * @param callback - The callback to call for each child node returning a boolean.\n     * @param thisArg  - Optional value to use as `this` when executing `callback`.\n     * @return True if at least one child node returned true in the given callback, false if none did.\n     */\n    public someChildren(callback: (node: SceneNode<T>, index: number) => boolean, thisArg: any = this): boolean {\n        let index = 0;\n        let node = this.firstChild;\n        while (node) {\n            const next = node.nextSibling;\n            if (callback.call(thisArg, node, index++)) {\n                return true;\n            }\n            node = next;\n        }\n        return false;\n    }\n\n    /**\n     * Returns a new array with all child nodes.\n     *\n     * @return All child nodes.\n     */\n    public getChildren(): SceneNode<T>[] {\n        const children: SceneNode<T>[] = [];\n        let node = this.firstChild;\n        while (node) {\n            children.push(node);\n            node = node.nextSibling;\n        }\n        return children;\n    }\n\n    /**\n     * Returns the descendant node with the given id.\n     *\n     * @param id - The ID to look for.\n     * @return The matching descendant node or null if none.\n     */\n    public getDescendantById(id: string): SceneNode<T> | null {\n        return this.findDescendant(node => node.getId() === id);\n    }\n\n    /**\n     * Invalidates the bounds of the node. AUtomatically called when node size is changed. Must be called manually\n     * when some other aspect of the node which may influence the bounds is changed.\n     */\n    public invalidateBounds(): this {\n        this.boundsPolygon.clear();\n        return this;\n    }\n\n    /**\n     * Updates the bounds polygon of the node. The default implementation simply sets a bounding box. Specialized nodes\n     * can overwrite this method to define a more specific polygon.\n     *\n     * @param bounds - The empty bounds polygon to be filled with points by this method.\n     */\n    protected updateBoundsPolygon(bounds: Polygon2): void {\n        bounds.addVertex(new Vector2(0, 0));\n        bounds.addVertex(new Vector2(this.width, 0));\n        bounds.addVertex(new Vector2(this.width, this.height));\n        bounds.addVertex(new Vector2(0, this.height));\n    }\n\n    /**\n     * Returns the bounds polygon of the node.\n     *\n     * @return The bounds polygon.\n     */\n    public getBoundsPolygon(): Polygon2 {\n        if (!this.boundsPolygon.hasVertices()) {\n            this.updateBoundsPolygon(this.boundsPolygon);\n        }\n        return this.boundsPolygon;\n    }\n\n    /**\n     * Marks this node, all parent nodes and the scene as invalid to trigger a scene revalidation. This must be\n     * called every time when some aspect of the node is changed which requires a redraw of the scene node.\n     *\n     * TODO Not yet implemented, currently the scene is constantly redrawn.\n     */\n    public invalidate(): this {\n        /*\n        if (this.valid) {\n            this.valid = false;\n            if (this.parent) {\n                this.parent.invalidate();\n            } else if (this.scene) {\n                void this.scene.invalidate();\n            }\n        }\n        */\n       return this;\n    }\n\n    /**\n     * Adds a new animation to the scene.\n     *\n     * @param animationArgs - The arguments defining the animation to add.\n     */\n    public animate(animationArgs: AnimationArgs<T>): this {\n        this.animations.push(new SceneNodeAnimation(this, animationArgs));\n        return this;\n    }\n\n    /**\n     * Finishes all currently running animations. This calls all animator functions with their last animation index\n     * (1.0) and then removes the animations.\n     */\n    public finishAnimations(): this {\n        for (const animation of this.animations) {\n            animation.finish();\n        }\n        return this.forEachChild(child => child.finishAnimations());\n    }\n\n    /**\n     * Checks if node has running animations.\n     *\n     * @return True if node has animations, false if not.\n     */\n    public hasAnimations(): boolean {\n        return this.animations.length > 0 || this.someChildren(child => child.hasAnimations());\n    }\n\n    /**\n     * Enables or disables showing node bounds. This may be useful for debugging.\n     *\n     * @param showBounds - True to enable showing node bounds, false to disable it.\n     */\n    public setShowBounds(showBounds: boolean): this {\n        if(showBounds !== this.showBounds) {\n            this.showBounds = showBounds;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns true if node bounds are currently shown for debugging purposes.\n     *\n     * @return True if node bounds are shown, false if not.\n     */\n    public isShowBounds(): boolean {\n        return this.showBounds;\n    }\n\n    /**\n     * Returns the layer of this node.\n     *\n     * @return The node's layer (0-31).\n     */\n    public getLayer(): number {\n        return Math.log2(this.layer);\n    }\n\n    /**\n     * Sets the layer this node should appear on.\n     *\n     * @param layer - The layer to set (0-31).\n     */\n    public setLayer(layer: number): this {\n        if (layer < 0 || layer > 31) {\n            throw new Error(`Valid layer range is 0-31 but was ${layer}`);\n        }\n        layer = 1 << layer;\n        if (layer !== this.layer) {\n            this.layer = layer;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Updates the animations and removes finished animations.\n     */\n    private updateAnimations(dt: number): void {\n        const animations = this.animations;\n        let numAnimations = animations.length;\n        let i = 0;\n        while (i < numAnimations) {\n            if (animations[i].update(dt)) {\n                animations.splice(i, 1);\n                numAnimations--;\n            } else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Updates this node and its child nodes recursively.\n     *\n     * @param dt - The time in seconds since the last update.\n     * @return Bit mask with used layers.\n     */\n    protected updateAll(dt: number): number {\n        // Update this node and run animations\n        const postUpdate = this.update(dt);\n        this.updateAnimations(dt);\n\n        // Update the scene transformation for this node\n        const parent = this.parent;\n        if (parent != null) {\n            this.sceneTransformation.setMatrix(parent.sceneTransformation);\n            this.sceneTransformation.translate(\n                (Direction.getX(parent.childAnchor) + 1) / 2 * parent.width,\n                (Direction.getY(parent.childAnchor) + 1) / 2 * parent.height\n            );\n        } else {\n            this.sceneTransformation.reset();\n        }\n        this.sceneTransformation.translate(this.x, this.y);\n        this.sceneTransformation.mul(this.transformation);\n        this.sceneTransformation.translate(\n            -(Direction.getX(this.anchor) + 1) / 2 * this.width,\n            -(Direction.getY(this.anchor) + 1) / 2 * this.height\n        );\n\n        // Update child nodes\n        const layers = this.updateChildren(dt) | this.layer;\n\n        // When update method returned a post-update function then call it now\n        if (postUpdate != null) {\n            postUpdate();\n        }\n\n        return layers;\n    }\n\n    /**\n     * Updates the child nodes of this node recursively.\n     *\n     * @param dt - The time in seconds since the last update.\n     * @return Bit mask with used layers.\n     */\n    protected updateChildren(dt: number): number {\n        let layers = 0;\n        this.forEachChild(child => {\n            layers |= child.updateAll(dt);\n        });\n        return layers;\n    }\n\n    /**\n     * Updates this node. This is done before updating the child nodes of this node. The method can return an optional\n     * function which is called after the child nodes are updated so this can be used for post-updating operations.\n     *\n     * @param dt - The time in seconds since the last update.\n     * @return Optional post-update function which is called after updating the child nodes.\n     */\n    protected update(dt: number): void | (() => void) {}\n\n    /**\n     * Recursively draws the bounds for this node and alls its child nodes as long as the [[showBounds]] for the node\n     * is set to true.\n     *\n     * @param ctx - The rendering context.\n     */\n    protected drawBounds(ctx: CanvasRenderingContext2D): this {\n        if (this.showBounds) {\n            const bounds = this.getBoundsPolygon();\n            ctx.save();\n            this.sceneTransformation.setCanvasTransform(ctx);\n            ctx.beginPath();\n            bounds.draw(ctx);\n            ctx.clip();\n            ctx.save();\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = \"red\";\n            ctx.stroke();\n            ctx.setLineDash([4, 4]);\n            ctx.strokeStyle = \"white\";\n            ctx.lineDashOffset = Math.round(Date.now() / 100) % 8;\n            ctx.stroke();\n            ctx.restore();\n            ctx.restore();\n        }\n        return this.forEachChild(child => child.drawBounds(ctx));\n    }\n\n    /**\n     * Draws this scene node and its child nodes recursively\n     *\n     * @param ctx    - The rendering context.\n     * @param layer  - The layer to render. Nodes which doesn't belong to this layer are not drawn.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Hints which suggests further actions after drawing.\n     */\n    protected drawAll(ctx: CanvasRenderingContext2D, layer: number, width: number, height: number): PostDrawHints {\n        ctx.save();\n        ctx.globalAlpha *= this.getEffectiveOpacity();\n        ctx.translate(this.x, this.y);\n        this.transformation.transformCanvas(ctx);\n        ctx.translate(\n            -(Direction.getX(this.anchor) + 1) / 2 * this.width,\n            -(Direction.getY(this.anchor) + 1) / 2 * this.height\n        );\n        const postDraw = layer === this.layer ? this.draw(ctx, width, height) : null;\n        ctx.save();\n        ctx.translate(\n            (Direction.getX(this.childAnchor) + 1) / 2 * this.width,\n            (Direction.getY(this.childAnchor) + 1) / 2 * this.height\n        );\n        let flags = this.drawChildren(ctx, layer, width, height);\n        ctx.restore();\n        if (postDraw != null) {\n            if (postDraw === true) {\n                flags |= PostDrawHints.CONTINUE_DRAWING;\n            } else if (postDraw !== false) {\n                postDraw();\n            }\n        }\n        ctx.restore();\n        return this.showBounds ? flags | PostDrawHints.DRAW_BOUNDS | PostDrawHints.CONTINUE_DRAWING : flags;\n    }\n\n    /**\n     * Draws all child nodes of this scene node recursively.\n     *\n     * @param ctx    - The rendering context.\n     * @param layer  - The layer to render. Nodes which doesn't belong to this layer are not drawn.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Hints which suggests further actions after drawing.\n     */\n    protected drawChildren(ctx: CanvasRenderingContext2D, layer: number, width: number, height: number):\n            PostDrawHints {\n        let flags = 0;\n        this.forEachChild(child => {\n            flags |= child.drawAll(ctx, layer, width, height);\n        });\n        return flags;\n    }\n\n    /**\n     * Draws this node. This is done before drawing the child nodes of this node. The method can return a boolean\n     * which indicates if the scene is not finished yet and must be drawn continuously (for animations for example).\n     * The method can also return an optional function which is called after the child nodes are drawn so this can be\n     * used for post-drawing operations. This post-draw function then can again return an optional boolean which\n     * indicates that scene must be continuously draw itself.\n     *\n     * @param ctx    - The rendering context.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Optional boolean to indicate if scene must be redrawn continuously (Defaults to false) or a post-draw\n     *         function which is called after drawing the child nodes and which again can return a flag indicating\n     *         continuos redraw.\n     */\n    protected draw(ctx: CanvasRenderingContext2D, width: number, height: number):\n        void | boolean | (() => void | boolean) {}\n}\n","import { Game } from \"../Game\";\nimport { SceneNode } from \"./SceneNode\";\nimport { linear, Easing } from \"../easings\";\n\n/**\n * Function signature for a scene node animator. Function is called with the scene node to animate as first parameter,\n * the current animation time index (0.0 - 1.0) and the elapsed time in seconds as third parameter.\n */\nexport type SceneNodeAnimator<T extends Game = Game> = (sceneNode: SceneNode<T>, value: number,\n    elapsed: number) => void;\n\n/**\n * Constructor arguments for [[SceneNodeAnimation]]\n */\nexport interface AnimationArgs<T extends Game = Game> {\n    /** The animator function. */\n    animator: SceneNodeAnimator<T>;\n\n    /** Number of seconds to wait until animations starts. Defaults to 0. */\n    delay?: number;\n\n    /** Duration of the animation in seconds. Defaults to 1. */\n    duration?: number;\n\n    /** The easing function to use. Defaults to linear. */\n    easing?: Easing;\n}\n\n/**\n * Scene node animation. Instance is created internally within [[SceneNode]] when you call [[SceneNode.animate]].\n *\n * @param T - Optional owner game class.\n */\nexport class SceneNodeAnimation<T extends Game = Game> {\n    /** The scene node to animate. */\n    private readonly sceneNode: SceneNode<T>;\n\n    /** The animator function. */\n    private readonly animator: SceneNodeAnimator<T>;\n\n    /** The delay in seconds before actual animation starts. */\n    private readonly delay: number;\n\n    /** The duration of the animation in seconds. */\n    private readonly duration: number;\n\n    /** The total lifetime of the animation (delay + duration). */\n    private readonly lifetime: number;\n\n    /** The easing function to use for easing the animation. */\n    private readonly easing: Easing;\n\n    /** Time elapsed so far within the animation (including delay). */\n    private elapsed: number = 0;\n\n    /**\n     * Creates scene node animation for the given scene node and with the given animation arguments. You usually\n     * don't create an instance of this class yourself. Instead you have to use the [[SceneNode.animate]] method.\n     */\n    public constructor(sceneNode: SceneNode<T>, { animator, delay = 0, duration = 1, easing = linear }:\n            AnimationArgs<T>) {\n        this.sceneNode = sceneNode;\n        this.animator = animator;\n        this.delay = delay;\n        this.duration = duration;\n        this.easing = easing;\n        this.lifetime = delay + duration;\n    }\n\n    /**\n     * Updates the animation.\n     *\n     * @param dt - The time in seconds since the last update.\n     */\n    public update(dt: number): boolean {\n        this.elapsed += dt;\n        if (this.elapsed < this.lifetime) {\n            if (this.elapsed > this.delay) {\n                const timeIndex = ((this.elapsed - this.delay) / this.duration) % 1;\n                this.animator(this.sceneNode, this.easing(timeIndex), this.elapsed);\n            }\n            return false;\n        } else {\n            this.animator(this.sceneNode, 1, this.lifetime);\n            return true;\n        }\n    }\n\n    /**\n     * Finishes the animation by fast-forwarding the animation index to the end of the animation lifetime.\n     */\n    public finish(): void {\n        this.elapsed = this.lifetime;\n    }\n}\n","import { Game } from \"../Game\";\nimport { SceneNode, SceneNodeArgs } from \"./SceneNode\";\nimport { BitmapFont } from \"../BitmapFont\";\n\n/**\n * Constructor arguments for [[TextNode]].\n */\nexport interface TextNodeArgs extends SceneNodeArgs {\n    /** The initial font used to draw the text. */\n    font: BitmapFont;\n\n    /** Optional initial text to draw. Defaults to empty string. */\n    text?: string;\n\n    /** Optional initial text color. Defaults to \"white\". */\n    color?: string;\n\n    /** Optional initial outline text color. Default is null which means no outline is drawn. */\n    outlineColor?: string | null;\n}\n\n/**\n * Scene node for displaying a text with an optional icon left to it.\n *\n * @param T - Optional owner game class.\n */\nexport class TextNode<T extends Game = Game> extends SceneNode<T> {\n    /** The font used to draw the text. */\n    private font: BitmapFont;\n\n    /** The text to draw. */\n    private text: string;\n\n    /** The text color. */\n    private color: string;\n\n    /** Optional outline color. */\n    private outlineColor: string | null;\n\n    /**\n     * Creates a new scene node displaying the given image.\n     */\n    public constructor({ font, text = \"\", color = \"white\", outlineColor = null, ...args } : TextNodeArgs) {\n        super(args);\n        this.font = font;\n        this.text = text;\n        this.color = color;\n        this.outlineColor = outlineColor;\n        this.updateSize();\n    }\n\n    /**\n     * Returns the displayed text.\n     *\n     * @return The displayed text.\n     */\n    public getText(): string {\n        return this.text;\n    }\n\n    /**\n     * Sets the displayed text.\n     *\n     * @param text - The text to set.\n     */\n    public setText(text: string): this {\n        if (text !== this.text) {\n            this.text = text;\n            this.updateSize();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the bitmap font used to draw the text.\n     *\n     * @return The used bitmap font.\n     */\n    public getFont(): BitmapFont {\n        return this.font;\n    }\n\n    /**\n     * Sets the bitmap font used to draw the text.\n     *\n     * @param font - The bitmap font to use.\n     */\n    public setFont(font: BitmapFont): this {\n        if (font !== this.font) {\n            this.font = font;\n            this.updateSize();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the text color.\n     *\n     * @return The text color.\n     */\n    public getColor(): string {\n        return this.color;\n    }\n\n    /**\n     * Sets the text color.\n     *\n     * @param color - The text color to set.\n     */\n    public setColor(color: string): this {\n        if (color !== this.color) {\n            this.color = color;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the text outline color. Null if none.\n     *\n     * @return The text outline color. Null if none.\n     */\n    public getOutlineColor(): string | null {\n        return this.outlineColor;\n    }\n\n    /**\n     * Sets the text outline color.\n     *\n     * @param outlineColor - The text outline color to set.\n     */\n    public setOutlineColor(outlineColor: string | null): this {\n        if (outlineColor !== this.outlineColor) {\n            this.outlineColor = outlineColor;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Updates the node size according to the text measurements.\n     */\n    private updateSize(): void {\n        const size = this.font.measureText(this.text);\n        this.resizeTo(size.width, size.height);\n    }\n\n    /** @inheritDoc */\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (this.outlineColor != null) {\n            this.font.drawTextWithOutline(ctx, this.text, 0, 0, this.color, this.outlineColor);\n        } else {\n            this.font.drawText(ctx, this.text, 0, 0, this.color);\n        }\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { CharacterAsset, VoiceAsset } from \"../Campaign\";\nimport { ControllerAnimationTags } from \"../input/ControllerFamily\";\nimport { ControllerEvent } from \"../input/ControllerEvent\";\nimport { DIALOG_FONT } from \"../constants\";\nimport { easeOutCubic } from \"../easings\";\nimport { FriendlyFire } from \"../FriendlyFire\";\nimport { GameScene } from \"./GameScene\";\nimport { MenuItem, MenuList } from \"../Menu\";\nimport { Scene } from \"../Scene\";\nimport { SlideTransition } from \"../transitions/SlideTransition\";\nimport { TitleScene } from \"./TitleScene\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { Direction } from \"../geom/Direction\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { ControlTooltipNode } from \"../scene/ControlTooltipNode\";\nimport { AsepriteNode } from \"../scene/AsepriteNode\";\nimport { Sound } from \"../Sound\";\n\nenum MenuItemKey {\n    CHARACTER = \"character\",\n    VOICE = \"voice\",\n    START = \"start\"\n}\n\nconst menuItemX = 12;\nconst characterMenuItemY = 20;\nconst voiceMenuItemY = 50;\nconst startMenuItemY = 124;\nconst selectionItemsYDistance = 12;\nconst selectionItemsXDistance = 12;\n\nexport class CharacterSelectionScene extends Scene<FriendlyFire> {\n    @asset(DIALOG_FONT)\n    private static font: BitmapFont;\n\n    @asset(\"fonts/credits.font.json\")\n    private static headlineFont: BitmapFont;\n\n    @asset([\n        \"sprites/pc/female.aseprite.json\",\n        \"sprites/pc/male.aseprite.json\"\n    ])\n    public static playerSprites: Aseprite[];\n\n    @asset([\n        \"sounds/jumping/jumping_female.mp3\",\n        \"sounds/jumping/jumping.mp3\"\n    ])\n    private static voices: Sound[];\n\n    @asset(\"images/panel.png\")\n    private static panelImage: HTMLImageElement;\n\n    private menu!: MenuList;\n    private variant1!: TextNode;\n    private variant2!: TextNode;\n    private voice1!: TextNode;\n    private voice2!: TextNode;\n    private character!: AsepriteNode;\n\n    public activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n        this.menu.onActivated.connect(this.handleMenuAction, this);\n    }\n\n    public deactivate(): void {\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n        this.menu.onActivated.disconnect(this.handleMenuAction, this);\n    }\n\n    public async handleMenuAction(buttonId: string): Promise<void> {\n        switch (buttonId) {\n            case MenuItemKey.CHARACTER:\n                this.game.campaign.toggleCharacterAsset();\n                this.updateSelection();\n                break;\n            case MenuItemKey.VOICE:\n                this.game.campaign.toggleVoiceAsset();\n                this.updateSelection();\n                CharacterSelectionScene.voices[this.game.campaign.selectedVoice].play();\n                break;\n            case MenuItemKey.START:\n                await this.game.scenes.popScene({ noTransition: false });\n                TitleScene.music.stop();\n                this.game.scenes.setScene(GameScene);\n        }\n    }\n\n    private async handleButtonDown(event: ControllerEvent): Promise<void> {\n        if (event.isAbort) {\n            this.scenes.popScene();\n        } else if (event.isConfirm) {\n            this.menu.executeAction();\n        } else if (event.isMenuUp) {\n            this.menu.prev();\n        } else if (event.isMenuDown) {\n            this.menu.next();\n        }\n    }\n\n    private updateSelection(): void {\n        if (this.game.campaign.selectedCharacter === CharacterAsset.MALE) {\n            this.variant1.setColor(\"grey\").setOutlineColor(null);\n            this.variant2.setColor(\"white\").setOutlineColor(\"black\");\n        } else {\n            this.variant1.setColor(\"white\").setOutlineColor(\"black\");\n            this.variant2.setColor(\"grey\").setOutlineColor(null);\n        }\n\n        if (this.game.campaign.selectedVoice === VoiceAsset.MALE) {\n            this.voice1.setColor(\"grey\").setOutlineColor(null);\n            this.voice2.setColor(\"white\").setOutlineColor(\"black\");\n        } else {\n            this.voice1.setColor(\"white\").setOutlineColor(\"black\");\n            this.voice2.setColor(\"grey\").setOutlineColor(null);\n        }\n\n        this.character.setAseprite(CharacterSelectionScene.playerSprites[this.game.campaign.selectedCharacter]);\n    }\n\n    public setup(): void {\n        this.setBackgroundStyle(\"rgba(0, 0, 0, 0.8)\");\n\n        this.zIndex = 2;\n        this.inTransition = new SlideTransition({ duration: 0.5, direction: \"top\", easing: easeOutCubic });\n        this.outTransition = new SlideTransition({ duration: 0.25 });\n\n        const charSelectionTextY = characterMenuItemY + selectionItemsYDistance;\n        const charSelectionTextX = menuItemX + selectionItemsXDistance;\n        const charSelectionTextGap = 55;\n\n        const voiceSelectionTextY = voiceMenuItemY + selectionItemsYDistance;\n        const voiceSelectionTextX = menuItemX + selectionItemsXDistance;\n        const voiceSelectionTextGap = 55;\n\n        const character = this.game.campaign.selectedCharacter;\n\n        const panel = new ImageNode({\n            image: CharacterSelectionScene.panelImage,\n            childAnchor: Direction.TOP_LEFT,\n            x: this.game.width >> 1,\n            y: (this.game.height >> 1) - 16\n        }).appendChild(\n            new TextNode({\n                font: CharacterSelectionScene.headlineFont,\n                text: \"CHARACTER CUSTOMIZATION\",\n                anchor: Direction.BOTTOM_LEFT,\n                y: -5,\n                color: \"white\"\n            })\n        ).appendChild(\n            this.variant1 = new TextNode({\n                font: CharacterSelectionScene.font,\n                text: \"Variant 1\",\n                anchor: Direction.TOP_LEFT,\n                x: charSelectionTextX,\n                y: charSelectionTextY,\n                color: \"grey\"\n            })\n        ).appendChild(\n            this.variant2 = new TextNode({\n                font: CharacterSelectionScene.font,\n                text: \"Variant 2\",\n                anchor: Direction.TOP_LEFT,\n                x: charSelectionTextX + charSelectionTextGap,\n                y: charSelectionTextY,\n                color: \"grey\"\n            })\n        ).appendChild(\n            this.voice1 = new TextNode({\n                font: CharacterSelectionScene.font,\n                text: \"High Pitch\",\n                anchor: Direction.TOP_LEFT,\n                x: voiceSelectionTextX,\n                y: voiceSelectionTextY,\n                color: \"grey\"\n            })\n        ).appendChild(\n            this.voice2 = new TextNode({\n                font: CharacterSelectionScene.font,\n                text: \"Low Pitch\",\n                anchor: Direction.TOP_LEFT,\n                x: voiceSelectionTextX + voiceSelectionTextGap,\n                y: voiceSelectionTextY,\n                color: \"grey\"\n            })\n        ).appendChild(\n            this.character = new AsepriteNode({\n                aseprite: CharacterSelectionScene.playerSprites[character],\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: 213,\n                y: 46\n            })\n        ).appendChild(\n            new ControlTooltipNode({\n                control: ControllerAnimationTags.CONFIRM,\n                label: \"Select or Change\",\n                anchor: Direction.TOP_LEFT,\n                y: CharacterSelectionScene.panelImage.height + 2\n            })\n        ).appendChild(\n            new ControlTooltipNode({\n                control: ControllerAnimationTags.BACK,\n                label: \"Back\",\n                anchor: Direction.TOP_LEFT,\n                y: CharacterSelectionScene.panelImage.height + 18\n            })\n        ).appendTo(this.rootNode);\n\n        this.menu = new MenuList().setItems(\n            new MenuItem(\n                MenuItemKey.CHARACTER, \"Character:\", CharacterSelectionScene.font, \"black\",\n                menuItemX, characterMenuItemY\n            ),\n            new MenuItem(\n                MenuItemKey.VOICE, \"Voice:\", CharacterSelectionScene.font, \"black\",\n                menuItemX, voiceMenuItemY\n            ),\n            new MenuItem(\n                MenuItemKey.START, \"Start Game\", CharacterSelectionScene.font, \"black\",\n                menuItemX, startMenuItemY\n            )\n        ).appendTo(panel);\n\n        this.updateSelection();\n    }\n\n    public cleanup(): void {\n        this.rootNode.clear();\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { ControllerAnimationTags } from \"../input/ControllerFamily\";\nimport { ControllerEvent } from \"../input/ControllerEvent\";\nimport { ControllerManager } from \"../input/ControllerManager\";\nimport { DIALOG_FONT } from \"../constants\";\nimport { easeOutCubic } from \"../easings\";\nimport { FriendlyFire } from \"../FriendlyFire\";\nimport { Scene } from \"../Scene\";\nimport { SlideTransition } from \"../transitions/SlideTransition\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { AsepriteNode } from \"../scene/AsepriteNode\";\nimport { Direction } from \"../geom/Direction\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { ControlTooltipNode } from \"../scene/ControlTooltipNode\";\n\nexport class ControlsScene extends Scene<FriendlyFire> {\n    @asset(DIALOG_FONT)\n    private static font: BitmapFont;\n\n    @asset(\"images/controls.png\")\n    private static panelImage: HTMLImageElement;\n\n    @asset(\"images/controls_keyboard.png\")\n    private static keyboardKeys: HTMLImageElement;\n\n    @asset(\"images/gamepad_selection.aseprite.json\")\n    private static gamepadSelection: Aseprite;\n\n    @asset(\"images/controls_gamepad.aseprite.json\")\n    private static gamepadControls: Aseprite;\n\n    private controls: string[] = [\n        \"Walk\",\n        \"Jump\",\n        \"Interact\",\n        \"Run\",\n        \"Throw\",\n        \"Enter doors\",\n        \"Pause\"\n    ];\n\n    private gamepadSelection!: AsepriteNode;\n    private gamepadControls!: AsepriteNode;\n\n    public setup(): void {\n        this.setBackgroundStyle(\"rgba(0, 0, 0, 0.8)\");\n        this.zIndex = 2;\n        this.inTransition = new SlideTransition({ duration: 0.5, direction: \"top\", easing: easeOutCubic });\n        this.outTransition = new SlideTransition({ duration: 0.25 });\n\n        const controllerManager = ControllerManager.getInstance();\n        const gamepadStyle = controllerManager.selectedGamepadStyle;\n\n        const panel = new ImageNode({\n            image: ControlsScene.panelImage,\n            x: this.game.width / 2,\n            y: this.game.height / 2 - 16,\n            childAnchor: Direction.TOP_LEFT\n        }).appendChild(\n            this.gamepadSelection = new AsepriteNode({\n                aseprite: ControlsScene.gamepadSelection,\n                tag: gamepadStyle,\n                anchor: Direction.TOP_LEFT,\n                x: 204,\n                y: 2\n            })\n        ).appendChild(\n            new ImageNode({\n                image: ControlsScene.keyboardKeys,\n                anchor: Direction.TOP_LEFT,\n                x: 123,\n                y: 35\n            })\n        ).appendChild(\n            this.gamepadControls = new AsepriteNode({\n                aseprite: ControlsScene.gamepadControls,\n                tag: gamepadStyle,\n                anchor: Direction.TOP_LEFT,\n                x: 206,\n                y: 35\n            })\n        ).appendChild(\n            new ControlTooltipNode({\n                label: \"Toggle Gamepad Button Prompts\",\n                control: ControllerAnimationTags.ACTION,\n                anchor: Direction.TOP_LEFT,\n                y: ControlsScene.panelImage.height + 2\n            })\n        ).appendChild(\n            new ControlTooltipNode({\n                label: \"Back\",\n                control: ControllerAnimationTags.BACK,\n                anchor: Direction.TOP_LEFT,\n                y: ControlsScene.panelImage.height + 18\n            })\n        ).appendTo(this.rootNode);\n\n        this.controls.forEach((label, index) => {\n            panel.appendChild(new TextNode({\n                font: ControlsScene.font,\n                text: label,\n                anchor: Direction.TOP_LEFT,\n                x: 10,\n                y: 35 + index * 20,\n                color: \"black\"\n            }));\n        });\n    }\n\n    public cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n    }\n\n    public deactivate(): void {\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n    }\n\n    private handleButtonDown(event: ControllerEvent): void {\n        if (event.isAbort || event.isPause) {\n            this.scenes.popScene();\n        }\n        if (event.isPlayerAction) {\n            const controllerManager = ControllerManager.getInstance();\n            controllerManager.toggleSelectedGamepadStyle();\n            this.gamepadControls.setTag(controllerManager.selectedGamepadStyle);\n            this.gamepadSelection.setTag(controllerManager.selectedGamepadStyle);\n        }\n    }\n}\n","import { AppInfoJSON } from \"appinfo.json\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { ControllerEvent } from \"../input/ControllerEvent\";\nimport { DIALOG_FONT } from \"../constants\";\nimport { easeOutCubic } from \"../easings\";\nimport { FadeTransition } from \"../transitions/FadeTransition\";\nimport { FriendlyFire } from \"../FriendlyFire\";\nimport { isDev } from \"../util\";\nimport { Scene } from \"../Scene\";\nimport { Sound } from \"../Sound\";\nimport { TitleScene } from \"./TitleScene\";\nimport { Direction } from \"../geom/Direction\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { SceneNode } from \"../scene/SceneNode\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { AsepriteNode } from \"../scene/AsepriteNode\";\n\nexport class CreditsScene extends Scene<FriendlyFire> {\n    @asset(\"music/a-vision-of-fire-acoustic.ogg\")\n    public static music: Sound;\n\n    @asset([\n        \"sprites/stars/star1.aseprite.json\",\n        \"sprites/stars/star2.aseprite.json\",\n        \"sprites/stars/star3.aseprite.json\",\n        \"sprites/stars/star4.aseprite.json\",\n        \"sprites/stars/star5.aseprite.json\"\n    ])\n    private static stars: Aseprite[];\n\n    @asset(\"sprites/credits/leaf.aseprite.json\")\n    private static leaf: Aseprite;\n\n    private starPositions: number[][] = [\n        [318, 10],\n        [288, 19],\n        [260, 100],\n        [370, 91],\n        [409, 49],\n        [446, 19],\n        [436, 97],\n        [185, 93],\n        [159, 49],\n        [322, 72],\n        [153, 10],\n        [211, 20],\n        [59, 22],\n        [17, 11],\n        [102, 108]\n    ];\n\n    @asset(\"images/credits/bg.png\")\n    private static backgroundImage: HTMLImageElement;\n\n    @asset(\"images/credits/overlay.png\")\n    private static overlayImage: HTMLImageElement;\n\n    @asset(\"fonts/headline.font.json\")\n    private static headlineFont: BitmapFont;\n\n    @asset(DIALOG_FONT)\n    private static standardFont: BitmapFont;\n\n    @asset(\"fonts/credits.font.json\")\n    private static creditsFont: BitmapFont;\n\n    @asset(\"appinfo.json\")\n    private static appInfo: AppInfoJSON;\n\n    private lineSpacing = 4;\n\n    public async setup(): Promise<void> {\n        this.zIndex = 2;\n        this.inTransition = new FadeTransition({ duration: 0.5, easing: easeOutCubic });\n        this.outTransition = new FadeTransition({ duration: 0.25 });\n\n        // The background\n        new ImageNode({\n            image: CreditsScene.backgroundImage,\n            anchor: Direction.TOP_LEFT\n        }).appendTo(this.rootNode);\n\n        // The blinking stars\n        this.starPositions.forEach((pos, index) => {\n            new AsepriteNode({\n                aseprite: CreditsScene.stars[index % CreditsScene.stars.length],\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: pos[0],\n                y: pos[1]\n            }).appendTo(this.rootNode);\n        });\n\n        // The tree leaf\n        new AsepriteNode({\n            aseprite: CreditsScene.leaf,\n            tag: \"idle\",\n            anchor: Direction.TOP_LEFT,\n            x: 414,\n            y: 163\n        }).appendTo(this.rootNode);\n\n        // The gradient background behind the scrolling credits text\n        new ImageNode({\n            image: CreditsScene.overlayImage,\n            anchor: Direction.TOP_LEFT,\n            opacity: 0.75\n        }).appendTo(this.rootNode);\n\n        // The scrolling credits text\n        this.createCreditsNode().appendTo(this.rootNode);\n\n        // Shortened Git commit hash to provide support\n        new TextNode({\n            font: CreditsScene.standardFont,\n            text: CreditsScene.appInfo.gitCommitHash.substr(0, 16),\n            anchor: Direction.BOTTOM_RIGHT,\n            x: this.game.width - 7,\n            y: this.game.height - 4,\n            color: \"white\"\n        }).appendTo(this.rootNode);\n    }\n\n    public cleanup() {\n        this.rootNode.clear();\n    }\n\n    private createCreditsNode(): SceneNode {\n        const startY = this.game.height + 50;\n        let totalCrawlHeight = 0;\n\n        const credits = new SceneNode().appendTo(this.rootNode).animate({\n            animator: (node, value, elapsed) => {\n                node.setY(startY - (elapsed * 1000 / 36) % (totalCrawlHeight + startY));\n            },\n            duration: Infinity\n        });\n\n        const x = 20;\n        let y = this.addTitle(credits, 0, x);\n\n        y = this.addParagraph(credits, y, x, [\n            \"Originally made as a team\",\n            \"effort for Ludum Dare 46\",\n            \"in three days by\"\n        ]);\n\n        y = this.addParagraph(credits, y, x, [\n            \"Eduard But, Nico Hülscher,\",\n            \"Benjamin Jung, Nils Kreutzer,\",\n            \"Bastian Lang, Ranjit Mevius,\",\n            \"Markus Over, Klaus Reimer,\",\n            \"and Jennifer van Veen\"\n        ], 50);\n\n        y = this.addCredit(credits, y, x, \"GAME DESIGN\", [\"Everyone\"]);\n\n        y = this.addCredit(credits, y, x, \"STORY\", [\n            \"Markus Over\",\n            \"Jennifer van Veen\",\n            \"Ranjit Mevius\",\n            \"Nils Kreutzer\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"PROGRAMMING\", [\n            \"Nico Hülscher\",\n            \"Benjamin Jung\",\n            \"Nils Kreutzer\",\n            \"Ranjit Mevius\",\n            \"Markus Over\",\n            \"Klaus Reimer\",\n            \"Eduard But\",\n            \"Matthias Wetter\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"SCRIPTING\", [\n            \"Markus Over\",\n            \"Eduard But\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"ART DIRECTION\", [\"Eduard But\"]);\n\n        y = this.addCredit(credits, y, x, \"2D ART\", [\n            \"Eduard But\",\n            \"Nils Kreutzer\",\n            \"Christina Schneider\",\n            \"Jennifer van Veen\",\n            \"Matthias Wetter\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"WRITING\", [\n            \"Markus Over\",\n            \"Jennifer van Veen\",\n            \"Eduard But\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"LEVEL DESIGN\", [\n            \"Eduard But\",\n            \"Nils Kreutzer\",\n            \"Jennifer van Veen\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"DISTRIBUTION\", [\n            \"Benjamin Jung\",\n        ]);\n\n        y = this.addCredit(credits, y, x, \"MUSIC\", [\n            \"Bastian Lang\",\n            \"Benjamin Jung\",\n            \"Eduard But\",\n            \"Matthias Wetter\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"QA\", [\n            \"Jennifer van Veen\",\n            \"Matthias Wetter\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"SFX\", [\"freesound.org\"]);\n\n        totalCrawlHeight = y;\n\n        return credits;\n    }\n\n    public activate(): void {\n        CreditsScene.music.setLoop(true);\n        CreditsScene.music.setVolume(1);\n        CreditsScene.music.play();\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n    }\n\n    public deactivate(): void {\n        CreditsScene.music.stop();\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n    }\n\n    private async handleButtonDown(event: ControllerEvent): Promise<void> {\n        if (this.game.scenes.getPreviousScene() instanceof TitleScene) {\n            this.game.scenes.popScene();\n        } else {\n            await this.game.scenes.popScene({ noTransition: true });\n            this.game.scenes.setScene(TitleScene);\n        }\n    }\n\n    private addTitle(credits: SceneNode, y: number, x: number): number {\n        const gap = 5;\n        const titleText = \"Friendly Fire\";\n        const versionText = isDev() ? \"DEVELOPMENT VERSION\" : `Version ${CreditsScene.appInfo.version}`;\n\n        y += new TextNode({\n            font: CreditsScene.headlineFont,\n            text: titleText,\n            anchor: Direction.TOP_LEFT,\n            x, y,\n            color: \"white\"\n        }).appendTo(credits).getHeight();\n\n        y += gap;\n\n        y += new TextNode({\n            font: CreditsScene.standardFont,\n            text: versionText,\n            anchor: Direction.TOP_LEFT,\n            x, y,\n            color: \"white\"\n        }).appendTo(credits).getHeight();\n\n        return y + gap + 20;\n    }\n\n    private addParagraph(credits: SceneNode, y: number, x: number, lines: string[], marginBottom = 10): number {\n        lines.forEach(line => {\n            y += new TextNode({\n                font: CreditsScene.standardFont,\n                text: line,\n                anchor: Direction.TOP_LEFT,\n                x, y,\n                color: \"white\"\n            }).appendTo(credits).getHeight();\n        });\n        return y + marginBottom;\n    }\n\n    private addCredit(credits: SceneNode, y: number, x: number, title: string, names: string[]): number {\n        const gap = 5;\n\n        y += new TextNode({\n            font: CreditsScene.creditsFont,\n            text: title,\n            anchor: Direction.TOP_LEFT,\n            x, y,\n            color: \"white\"\n        }).appendTo(credits).getHeight();\n\n        y += this.lineSpacing + gap;\n\n        names.forEach(name => {\n            y += new TextNode({\n                font: CreditsScene.standardFont,\n                text: name,\n                anchor: Direction.TOP_LEFT,\n                x, y,\n                color: \"white\"\n            }).appendTo(credits).getHeight();\n        });\n\n        return y + 40;\n    }\n}\n","import { asset } from \"../Assets\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { ControllerFamily } from \"../input/ControllerFamily\";\nimport { CreditsScene } from \"./CreditsScene\";\nimport { DIALOG_FONT } from \"../constants\";\nimport { FriendlyFire } from \"../FriendlyFire\";\nimport { Scene } from \"../Scene\";\nimport { Sound } from \"../Sound\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { easeOutQuad } from \"../easings\";\nimport { Direction } from \"../geom/Direction\";\n\nexport class EndScene extends Scene<FriendlyFire> {\n    @asset(DIALOG_FONT)\n    private static font: BitmapFont;\n\n    @asset(\"images/ending/ff.png\")\n    private static logo: HTMLImageElement;\n\n    @asset(\"sounds/ending/boom.mp3\")\n    private static boom: Sound;\n\n    private subtitleDelay = 2;\n    private inputDelay = 4;\n\n    public setup(): void {\n        const ending = this.game.campaign.quests.find(q => q.isFinished());\n\n        // The logo image\n        new ImageNode({\n            image: EndScene.logo,\n            x: this.game.width >> 1,\n            y: (this.game.height >> 1) - 15\n        }).appendTo(this.rootNode);\n\n        // Fade in subtitle after a delay\n        new TextNode({\n            font: EndScene.font,\n            text: ending?.title ?? \"Unknown [E]nding\",\n            x: this.game.width >> 1,\n            y: (this.game.height >> 1) + 11,\n            color: \"red\",\n            opacity: 0\n        }).animate({\n            animator: (node, value) => node.setOpacity(value),\n            delay: this.subtitleDelay,\n            duration: 0.5,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // Inform the user, that it's possible to return to the title\n        const text = `Press any ${this.input.currentControllerFamily === ControllerFamily.KEYBOARD\n            ? \"key\" : \"button\"} to continue.`;\n        new TextNode({\n            font: EndScene.font,\n            text,\n            anchor: Direction.BOTTOM,\n            x: this.game.width >> 1,\n            y: this.game.height - 15,\n            color: \"darkgrey\",\n            opacity: 0\n        }).animate({\n            animator: (node, value) => node.setOpacity(value),\n            delay: this.inputDelay,\n            duration: 0.5,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n    }\n\n    public activate(): void {\n        setTimeout(() => {\n            EndScene.boom.setLoop(false);\n            EndScene.boom.play();\n        }, this.subtitleDelay * 1000);\n\n        setTimeout(() => {\n            this.input.onButtonDown.connect(this.gotoCreditsScene, this);\n        }, this.inputDelay * 1000);\n    }\n\n    public deactivate(): void {\n        this.input.onButtonDown.disconnect(this.gotoCreditsScene, this);\n    }\n\n    private gotoCreditsScene(): void {\n        this.game.scenes.setScene(CreditsScene);\n    }\n}\n","import { Player } from \"../Player\";\nimport { asset } from \"../Assets\";\nimport { Bird } from \"../Bird\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { Bone } from \"../Bone\";\nimport { Bounds, createEntity } from \"../Entity\";\nimport { boundsFromMapObject, clamp, isDev, rnd, rndItem, timedRnd } from \"../util\";\nimport { Camera } from \"../Camera\";\nimport { Campfire } from \"../Campfire\";\nimport { Caveman } from \"../Caveman\";\nimport { Chicken } from \"../Chicken\";\nimport { Cloud } from \"../Cloud\";\nimport { ControllerEvent } from \"../input/ControllerEvent\";\nimport { Conversation } from \"../Conversation\";\nimport { DIALOG_FONT } from \"../constants\";\nimport { EndScene } from \"./EndScene\";\nimport { Fire, FireState } from \"../Fire\";\nimport { FireGfx } from \"../FireGfx\";\nimport { FlameBoy } from \"../FlameBoy\";\nimport { FriendlyFire } from \"../FriendlyFire\";\nimport { GameObjectInfo, MapInfo } from \"../MapInfo\";\nimport { MenuList } from \"../Menu\";\nimport { Mimic } from \"../Mimic\";\nimport { MountainRiddle } from \"../MountainRiddle\";\nimport { MovingPlatform } from \"../MovingPlatform\";\nimport { ParticleEmitter, Particles, valueCurves } from \"../Particles\";\nimport { PauseScene } from \"./PauseScene\";\nimport { Portal } from \"../Portal\";\nimport { PowerShiba } from \"../PowerShiba\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { Radio } from \"../Radio\";\nimport { Renderer, RenderingLayer, RenderingType } from \"../Renderer\";\nimport { RiddleStone } from \"../RiddleStone\";\nimport { Scene } from \"../Scene\";\nimport { Seed } from \"../Seed\";\nimport { ShadowPresence } from \"../ShadowPresence\";\nimport { Shiba, ShibaState } from \"../Shiba\";\nimport { Skull } from \"../Skull\";\nimport { Sound } from \"../Sound\";\nimport { SoundEmitter } from \"../SoundEmitter\";\nimport { Stone } from \"../Stone\";\nimport { StoneDisciple } from \"../StoneDisciple\";\nimport { SuperThrow } from \"../SuperThrow\";\nimport { Tree } from \"../Tree\";\nimport { Wing } from \"../Wing\";\nimport { World } from \"../World\";\n\nexport enum FadeDirection { FADE_IN, FADE_OUT }\n\nexport interface GameObject {\n    draw(ctx: CanvasRenderingContext2D, width: number, height: number): void;\n    update(dt: number): void;\n}\n\nexport interface CollidableGameObject extends GameObject {\n    collidesWith(x: number, y: number): number;\n}\n\nexport function isCollidableGameObject(object: GameObject): object is CollidableGameObject  {\n    return typeof (object as CollidableGameObject).collidesWith === \"function\";\n}\n\nexport enum BgmId {\n    OVERWORLD = \"overworld\",\n    INFERNO = \"inferno\",\n    CAVE = \"cave\",\n    RIDDLE = \"riddle\",\n    RADIO = \"radio\",\n    WINGS = \"wings\"\n}\n\nexport enum AmbientSoundId {\n    STREAM = \"stream\",\n    WIND = \"wind\",\n}\n\nexport type BackgroundTrack = {\n    active: boolean;\n    id: BgmId;\n    sound: Sound,\n    baseVolume: number;\n};\n\nexport class GameScene extends Scene<FriendlyFire> {\n    @asset(\"music/theme_01.ogg\")\n    public static bgm1: Sound;\n\n    @asset(\"music/inferno.ogg\")\n    public static bgm2: Sound;\n\n    @asset(\"music/cave.ogg\")\n    public static bgmCave: Sound;\n\n    @asset(\"music/riddle.ogg\")\n    public static bgmRiddle: Sound;\n\n    @asset(\"music/radio.ogg\")\n    public static bgmRadio: Sound;\n\n    @asset(\"music/wings.ogg\")\n    public static bgmWings: Sound;\n\n    @asset(\"sounds/ambient/stream.ogg\")\n    public static ambientStream: Sound;\n\n    @asset(\"sounds/ambient/wind.ogg\")\n    public static ambientWind: Sound;\n\n    public readonly ambientSounds: Record<AmbientSoundId, Sound> = {\n        [AmbientSoundId.STREAM]: GameScene.ambientStream,\n        [AmbientSoundId.WIND]: GameScene.ambientWind\n    };\n\n    private readonly backgroundTracks: BackgroundTrack[] = [\n        {\n            active: false,\n            id: BgmId.OVERWORLD,\n            sound: GameScene.bgm1,\n            baseVolume: 0.25\n        },\n        {\n            active: false,\n            id: BgmId.CAVE,\n            sound: GameScene.bgmCave,\n            baseVolume: 1\n        },\n        {\n            active: false,\n            id: BgmId.INFERNO,\n            sound: GameScene.bgm2,\n            baseVolume: 0.10\n        },\n        {\n            active: false,\n            id: BgmId.RIDDLE,\n            sound: GameScene.bgmRiddle,\n            baseVolume: 1\n        },\n        {\n            active: false,\n            id: BgmId.RADIO,\n            sound: GameScene.bgmRadio,\n            baseVolume: 1\n        },\n        {\n            active: false,\n            id: BgmId.WINGS,\n            sound: GameScene.bgmWings,\n            baseVolume: 0.75\n        }\n    ];\n\n    @asset(DIALOG_FONT)\n    private static font: BitmapFont;\n\n    @asset(\"sounds/ending/swell.mp3\")\n    private static swell: Sound;\n\n    @asset(\"sounds/gate/wrong.ogg\")\n    public static wrong: Sound;\n\n    /* Total game time (time passed while game not paused) */\n    public gameTime = 0;\n\n    public gameObjects: GameObject[] = [];\n    public soundEmitters: SoundEmitter[] = [];\n    public pointsOfInterest: GameObjectInfo[] = [];\n    public triggerObjects: GameObjectInfo[] = [];\n    public boundObjects: GameObjectInfo[] = [];\n    public gateObjects: GameObjectInfo[] = [];\n    public paused = false;\n    public world!: World;\n    public camera!: Camera;\n    public player!: Player;\n    public stone!: Stone;\n    public stoneDisciple!: StoneDisciple;\n    public tree!: Tree;\n    public seed!: Seed;\n    public bone!: Bone;\n    public flameboy!: FlameBoy;\n    public wing!: Wing;\n    public bird!: Bird;\n    public shiba!: Shiba;\n    public powerShiba!: PowerShiba;\n    public mimic!: Mimic;\n    public shadowPresence!: ShadowPresence;\n    public caveman!: Caveman;\n    public particles = new Particles(this);\n    public fire!: Fire;\n    public fireFuryEndTime = 0;\n    public apocalypse = false;\n    public friendshipCutscene = false;\n    private apocalypseFactor = 1;\n    private fireEffects: FireGfx[] = [];\n    private fireEmitter!: ParticleEmitter;\n    private frameCounter = 0;\n    private framesPerSecond = 0;\n    public showBounds = false;\n    private scale = 1;\n    private mapInfo!: MapInfo;\n    public dt: number = 0;\n    private fpsInterval: any = null;\n    private fadeToBlackEndTime = 0;\n    private fadeToBlackStartTime = 0;\n    private fadeToBlackFactor = 0;\n    private faceToBlackDirection: FadeDirection = FadeDirection.FADE_OUT;\n    public readonly renderer = new Renderer(this);\n    public readonly mountainRiddle = new MountainRiddle();\n\n    public setup(): void {\n        this.mapInfo = new MapInfo();\n        this.soundEmitters = this.mapInfo.getSounds().map(o => SoundEmitter.fromGameObjectInfo(this, o));\n        this.pointsOfInterest = this.mapInfo.getPointers();\n        this.triggerObjects = this.mapInfo.getTriggerObjects();\n        this.boundObjects = this.mapInfo.getBoundObjects();\n        this.gateObjects = this.mapInfo.getGateObjects();\n\n        this.gameTime = 0;\n        this.fadeToBlackEndTime = 0;\n        this.fadeToBlackStartTime = 0;\n        this.fadeToBlackFactor = 0;\n        this.apocalypse = false;\n        this.fireFuryEndTime = 0;\n        Conversation.resetGlobals();\n\n        this.gameObjects = [\n            this.world = new World(this),\n            this.particles,\n            ...this.soundEmitters,\n            ...this.mapInfo.getEntities().map(entity => {\n                switch (entity.name) {\n                    case \"riddlestone\":\n                        return new RiddleStone(this, entity.x, entity.y, entity.properties);\n                    case \"campfire\":\n                        return new Campfire(this, entity.x, entity.y);\n                    case \"radio\":\n                        return new Radio(this, entity.x, entity.y);\n                    case \"movingplatform\":\n                        return new MovingPlatform(this, entity.x, entity.y, entity.properties);\n                    case \"skull\":\n                        return new Skull(this, entity.x, entity.y);\n                    case \"chicken\":\n                        return new Chicken(this, entity.x, entity.y);\n                    case \"superthrow\":\n                        return new SuperThrow(this, entity.x, entity.y);\n                    case \"portal\":\n                        return new Portal(this, entity.x, entity.y);\n                    default:\n                        return createEntity(entity.name, this, entity.x, entity.y, entity.properties);\n                }\n            })\n        ];\n\n        this.player = this.getGameObject(Player);\n        this.fire = this.getGameObject(Fire);\n        this.stone = this.getGameObject(Stone);\n        this.stoneDisciple = this.getGameObject(StoneDisciple);\n        this.tree = this.getGameObject(Tree);\n        this.flameboy = this.getGameObject(FlameBoy);\n        this.wing = this.getGameObject(Wing);\n        this.bird = this.getGameObject(Bird);\n        this.shiba = this.getGameObject(Shiba);\n        this.powerShiba = this.getGameObject(PowerShiba);\n        this.shadowPresence = this.getGameObject(ShadowPresence);\n        this.mimic = this.getGameObject(Mimic);\n        this.caveman = this.getGameObject(Caveman);\n        this.bone = this.getGameObject(Bone);\n\n        this.camera = new Camera(this, this.player);\n        this.camera.setBounds(this.player.getCurrentMapBounds());\n\n        this.fpsInterval = setInterval(() => {\n            this.framesPerSecond = this.frameCounter;\n            this.frameCounter = 0;\n        }, 1000);\n\n        this.game.campaign.begin(this);\n\n        this.playBackgroundTrack(BgmId.CAVE);\n\n        Conversation.setGlobal(\"devmode\", isDev() + \"\");\n        this.loadApocalypse();\n    }\n\n    public cleanup(): void {\n        if (this.fpsInterval != null) {\n            clearInterval(this.fpsInterval);\n        }\n    }\n\n    public addGameObject(object: GameObject): void {\n        // Insert new item right before the player so player is always in front\n        this.gameObjects.splice(this.gameObjects.indexOf(this.player) - 1, 0, object);\n    }\n\n    public removeGameObject(object: GameObject): void {\n        const index = this.gameObjects.indexOf(object);\n\n        if (index >= 0) {\n            this.gameObjects.splice(index, 1);\n        }\n    }\n\n    public getBackgroundTrack(id: BgmId): BackgroundTrack {\n        const found = this.backgroundTracks.find(track => track.id === id);\n\n        if (!found) {\n            console.error(`Missing background track with ID '${id}'.`);\n\n            return this.backgroundTracks[0];\n        }\n\n        return found;\n    }\n\n    public fadeActiveBackgroundTrack(fade: number, inverse = false): void {\n        this.backgroundTracks.forEach(t => {\n            if (t.active) {\n                if (inverse) {\n                    t.sound.setVolume(t.baseVolume * (1 - fade));\n                } else {\n                    t.sound.setVolume(t.baseVolume * fade);\n                }\n            }\n        });\n    }\n\n    public setActiveBgmTrack(id: BgmId): void {\n        this.backgroundTracks.forEach(t => { t.active = false; });\n        const track = this.backgroundTracks.find(t => t.id === id);\n\n        if (track) {\n            track.active = true;\n\n            if (!track.sound.isPlaying()) {\n                track.sound.setLoop(true);\n                track.sound.play();\n            }\n        }\n    }\n\n    public fadeToBackgroundTrack(id: BgmId): void {\n        const track = this.getBackgroundTrack(id);\n        this.muteMusic();\n        this.backgroundTracks.forEach(t => { t.active = false; });\n        track.active = true;\n        track.sound.setVolume(track.baseVolume);\n\n        if (!track.sound.isPlaying()) {\n            track.sound.setLoop(true);\n            track.sound.play();\n        }\n    }\n\n    public playBackgroundTrack(id: BgmId): void {\n        const track = this.getBackgroundTrack(id);\n        this.backgroundTracks.forEach(t => t.sound.stop());\n        track.active = true;\n        track.sound.setVolume(track.baseVolume);\n        track.sound.setLoop(true);\n        track.sound.play();\n    }\n\n    private getGameObject<T>(type: new (...args: any[]) => T): T {\n        for (const gameObject of this.gameObjects) {\n            if (gameObject instanceof type) {\n                return gameObject;\n            }\n        }\n\n        throw new Error(`Game object of type ${type.name} not found.`);\n    }\n\n    public activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n        this.input.onButtonDown.connect(this.player.handleButtonDown, this.player);\n        this.input.onButtonUp.connect(this.player.handleButtonUp, this.player);\n        this.resume();\n    }\n\n    public deactivate(): void {\n        this.pause();\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n        this.input.onButtonDown.disconnect(this.player.handleButtonDown, this.player);\n        this.input.onButtonUp.disconnect(this.player.handleButtonUp, this.player);\n    }\n\n    private handleButtonDown(event: ControllerEvent): void {\n        if (event.isAbort || event.isPause) {\n            if (this.player.getDance()) {\n                this.player.getDance()?.resetMusic();\n                this.player.cancelDance();\n            }\n        }\n\n        if (event.isPause) {\n            this.scenes.pushScene(PauseScene);\n        }\n    }\n\n    public gameOver(): void {\n        GameScene.bgm1.stop();\n        GameScene.bgm2.stop();\n        GameScene.swell.setVolume(0.5);\n        GameScene.swell.play();\n\n        setTimeout(() => {\n            this.game.scenes.setScene(EndScene);\n        }, 2000);\n    }\n\n    public isActive(): boolean {\n        return !this.paused;\n    }\n\n    public update(dt: number): void {\n        if (this.paused) {\n            dt = 0;\n        }\n\n        this.dt = dt;\n        this.gameTime += dt;\n\n        for (const obj of this.gameObjects) {\n            obj.update(dt);\n        }\n\n        this.camera.update(dt, this.gameTime);\n\n        if (this.fadeToBlackEndTime > this.gameTime) {\n            let fade = (this.gameTime - this.fadeToBlackStartTime) / (this.fadeToBlackEndTime - this.fadeToBlackStartTime);\n\n            if (this.faceToBlackDirection === FadeDirection.FADE_IN) {\n                fade = 1 - fade;\n            }\n\n            this.fadeToBlackFactor = fade;\n        }\n\n        if (this.friendshipCutscene) {\n            this.updateFriendshipEndingCutscene(dt);\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        ctx.save();\n\n        // Center coordinate system\n        ctx.translate(ctx.canvas.width / 2, ctx.canvas.height / 2);\n\n        // Scale by three because everything was based on 480x300 canvas and now its three times larger\n        ctx.scale(this.scale, this.scale);\n\n        // Draw stuff\n        this.camera.applyTransform(ctx);\n\n        for (const obj of this.gameObjects) {\n            obj.draw(ctx, width, height);\n        }\n\n        // Add all particle emitters to rendering queue\n        this.particles.addEmittersToRenderingQueue();\n\n        // Add all debug bounds to rendering queue\n        this.addAllDebugBoundsToRenderingQueue();\n\n        // Apocalypse\n        if (this.fireFuryEndTime) {\n            this.camera.setCinematicBar(1);\n            // Fade out\n            const diff = this.fireFuryEndTime - this.gameTime;\n            const p = diff / 16;\n            const fade = valueCurves.trapeze(0.4).get(p);\n            this.drawFade(ctx, fade, \"black\");\n        }\n\n        if (this.apocalypse) {\n            this.drawApocalypseOverlay(ctx);\n        }\n\n        // Gate Fade\n        if (this.fadeToBlackFactor > 0) {\n            this.fadeActiveBackgroundTrack(this.fadeToBlackFactor, true);\n            this.drawFade(ctx, this.fadeToBlackFactor, \"black\");\n        }\n\n        // Cinematic bars\n        this.camera.addCinematicBarsToRenderer();\n\n        // Draw stuff from Rendering queue\n        this.renderer.draw(ctx);\n\n        ctx.restore();\n\n        // Display FPS counter\n        if (isDev()) {\n            GameScene.font.drawText(\n                ctx,\n                `${this.framesPerSecond} FPS`,\n                2 * this.scale, 2 * this.scale - 3,\n                \"white\"\n            );\n        }\n\n        this.frameCounter++;\n    }\n\n    private addSingleDebugBoundsToRenderingQueue(bounds: Bounds, color: string): void {\n        this.renderer.add({\n            type: RenderingType.RECT,\n            layer: RenderingLayer.DEBUG,\n            position: {\n                x: bounds.x,\n                y: -bounds.y\n            },\n            lineColor: color,\n            dimension: {\n                width: bounds.width,\n                height: bounds.height\n            }\n        });\n    }\n\n    private addAllDebugBoundsToRenderingQueue(): void {\n        if (this.showBounds) {\n            // Draw trigger bounds for collisions\n            for (const obj of this.triggerObjects) {\n                const bounds = boundsFromMapObject(obj);\n                this.addSingleDebugBoundsToRenderingQueue(bounds, \"blue\");\n            }\n\n            for (const obj of this.boundObjects) {\n                const bounds = boundsFromMapObject(obj);\n                this.addSingleDebugBoundsToRenderingQueue(bounds, \"yellow\");\n            }\n\n            for (const obj of this.gateObjects) {\n                const bounds = boundsFromMapObject(obj);\n                this.addSingleDebugBoundsToRenderingQueue(bounds, \"green\");\n            }\n        }\n    }\n\n    public startApocalypseMusic(): void {\n        this.playBackgroundTrack(BgmId.INFERNO);\n    }\n\n    public startFriendshipMusic(): void {\n        this.playBackgroundTrack(BgmId.WINGS);\n    }\n\n    public muteMusic(): void {\n        this.backgroundTracks.forEach(t => t.sound.setVolume(0));\n    }\n\n    public resetMusicVolumes(): void {\n        this.backgroundTracks.forEach(t => {\n            if (t.active) t.sound.setVolume(t.baseVolume);\n        });\n    }\n\n    public async fadeToBlack(duration: number, direction: FadeDirection): Promise<void> {\n        return new Promise((resolve) => {\n            this.fadeToBlackStartTime = this.gameTime;\n            this.fadeToBlackEndTime = this.gameTime + duration;\n            this.faceToBlackDirection = direction;\n\n            setTimeout(() => {\n                if (direction === FadeDirection.FADE_OUT) {\n                    this.fadeToBlackFactor = 1;\n                } else {\n                    this.fadeToBlackFactor = 0;\n                }\n\n                resolve();\n            }, duration * 1000);\n        });\n    }\n\n    private updateApocalypse(): void {\n        this.fireEmitter.setPosition(this.player.x, this.player.y);\n        this.fireEffects.forEach(e => e.update());\n\n        if (timedRnd(this.dt, 0.8)) {\n            this.fireEmitter.emit();\n        }\n\n        this.fire.growthTarget = Math.max(2, 20 - 6 * this.gameObjects.filter(\n            o => o instanceof Cloud && o.isRaining()\n        ).length);\n\n        if (this.fire.intensity < 6) {\n            this.fire.intensity = Math.max(this.fire.intensity, 4);\n            this.apocalypseFactor = clamp((this.fire.intensity - 4) / 2, 0, 1);\n\n            if (this.apocalypseFactor <= 0.001) {\n                // End apocalypse\n                this.apocalypseFactor = 0;\n                this.apocalypse = false;\n                this.fire.state = FireState.PUT_OUT;\n\n                this.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.BEAT_FIRE);\n                this.game.campaign.runAction(\"enable\", null, [ \"fire\", \"fire3\" ]);\n\n                // Music\n                GameScene.bgm2.stop();\n            }\n        }\n    }\n\n    private updateFriendshipEndingCutscene(dt: number): void {\n        this.camera.setCinematicBar(1);\n    }\n\n    private drawApocalypseOverlay(ctx: CanvasRenderingContext2D): void {\n        this.updateApocalypse();\n        this.camera.setCinematicBar(this.apocalypseFactor);\n\n        this.renderer.add({\n            type: RenderingType.RECT,\n            layer: RenderingLayer.FULLSCREEN_FX,\n            position: { x: 0, y: 0 },\n            fillColor: \"darkred\",\n            globalCompositeOperation: \"color\",\n            alpha: 0.7 * this.apocalypseFactor,\n            relativeToScreen: true,\n            dimension: { width: ctx.canvas.width, height: ctx.canvas.height }\n        });\n    }\n\n    private drawFade(ctx: CanvasRenderingContext2D, alpha: number, color = \"black\"): void {\n        this.renderer.add({\n            type: RenderingType.RECT,\n            layer: RenderingLayer.FULLSCREEN_FX,\n            position: { x: 0, y: 0 },\n            fillColor: color,\n            alpha,\n            relativeToScreen: true,\n            dimension: { width: ctx.canvas.width, height: ctx.canvas.height }\n        });\n    }\n\n    public loadApocalypse(): void {\n        this.fireEffects = [1, 2].map(num =>  new FireGfx(32, 24, true, 2));\n\n        this.fireEmitter = this.particles.createEmitter({\n            position: {x: this.player.x, y: this.player.y},\n            offset: () => ({x: rnd(-1, 1) * 300, y: 200}),\n            velocity: () => ({ x: 0, y: -25}),\n            color: () => rndItem(this.fireEffects).getImage(),\n            size: () => rnd(16, 32),\n            gravity: {x: -10, y: -30},\n            lifetime: () => rnd(5, 15),\n            alpha: 1,\n            breakFactor: 0.9,\n            alphaCurve: valueCurves.cos(0.2, 0.1),\n            update: particle => {\n                if (\n                    this.world.collidesWith(particle.x, particle.y - particle.size / 4)\n                ) {\n                    particle.vx = 0;\n                    particle.vy = 0;\n                }\n            }\n        });\n    }\n\n    public beginFriendshipEnding(): void {\n        this.friendshipCutscene = true;\n        this.shiba.setState(ShibaState.ON_MOUNTAIN);\n        this.shiba.nextState();\n\n        const playerTargetPos = this.pointsOfInterest.find(poi => poi.name === \"friendship_player_position\");\n\n        if (!playerTargetPos) {\n            throw new Error (\"cannot initiate friendship ending because some points of interest are missing\");\n        }\n\n        this.player.startAutoMove(playerTargetPos.x, true);\n        this.player.setControllable(false);\n    }\n\n    public beginApocalypse(): void {\n        this.apocalypse = true;\n        this.world.stopRain();\n\n        const bossPosition = this.pointsOfInterest.find(poi => poi.name === \"boss_spawn\");\n        const cloudPositions = this.pointsOfInterest.filter(poi => poi.name === \"bosscloud\");\n\n        if (bossPosition && cloudPositions.length > 0) {\n            cloudPositions.forEach(pos => {\n                const cloud = new Cloud(\n                    this,\n                    pos.x, pos.y,\n                    {\n                        velocity: 0,\n                        distance: 1\n                    },\n                    true\n                );\n\n                this.gameObjects.push(cloud);\n            });\n\n            // Teleport player and fire to boss spawn position\n            this.player.x = bossPosition.x - 36;\n            this.player.y = bossPosition.y;\n\n            this.player.removePowerUps();\n            this.player.enableRainDance();\n            this.fire.x = bossPosition.x;\n            this.fire.y = bossPosition.y;\n\n            this.camera.setBounds(this.player.getCurrentMapBounds());\n\n            // Some helpful thoughts\n            setTimeout(() => this.player.think(\"This is not over…\", 2000), 9000);\n            setTimeout(() => this.player.think(\"There's still something I can do.\", 4000), 12000);\n        } else {\n            throw new Error(\"Cannot begin apocalypse because boss_spawn or bosscloud trigger is missing in map.\");\n        }\n    }\n\n    private togglePause(paused = !this.paused): void {\n        this.paused = paused;\n    }\n\n    public pause(): void {\n        this.muteMusic();\n        MenuList.pause.stop();\n        MenuList.pause.play();\n        this.togglePause(true);\n    }\n\n    public resume(): void {\n        this.resetMusicVolumes();\n        this.togglePause(false);\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { DIALOG_FONT } from \"../constants\";\nimport { easeInExpo, easeOutExpo } from \"../easings\";\nimport { FriendlyFire } from \"../FriendlyFire\";\nimport { Scene } from \"../Scene\";\nimport { SlideTransition } from \"../transitions/SlideTransition\";\nimport { Sound } from \"../Sound\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { Direction } from \"../geom/Direction\";\nimport { AsepriteNode } from \"../scene/AsepriteNode\";\nimport { SceneNode } from \"../scene/SceneNode\";\nimport { TextNode } from \"../scene/TextNode\";\n\nexport enum Item { RUNNING, DOUBLEJUMP, MULTIJUMP, RAINDANCE, FRIENDSHIP }\n\nexport class GotItemScene extends Scene<FriendlyFire, Item> {\n    @asset(DIALOG_FONT)\n    private static font: BitmapFont;\n\n    @asset(\"fonts/headline.font.json\")\n    private static headlineFont: BitmapFont;\n\n    @asset(\"sounds/item/fanfare.mp3\")\n    private static sound: Sound;\n\n    @asset([\n        \"sprites/powerup_running.png\",\n        \"sprites/powerup_doublejump.png\",\n        \"sprites/powerup_multijump.png\",\n        \"sprites/powerup_raindance.png\",\n        \"sprites/powerup_friendship.aseprite.json\"\n    ])\n    private static itemImages: (HTMLImageElement | Aseprite)[];\n\n    private floatAmount = 3;\n    private floatSpeed = 4;\n\n    private titles = [\n        \"Fear of the Dark\",\n        \"Double-Jump Boots\",\n        \"Flying Wings Knock-off\",\n        \"Dancing Dave\",\n        \"Eternal Friendship\"\n    ];\n\n    private subtitles = [\n        [\n            \"Run and never look back\",\n            \"An exceptional ally\",\n            \"There is something in that dark corner\"\n        ],\n        [\n            \"Not suitable for step dancing\",\n            \"An all-time classic\",\n            \"Still in mint condition\",\n            \"Even work without wearing them\",\n            \"Why would a tree have those?\"\n        ],\n        [\n            \"Birds love it!\",\n            \"Feels like cheating\",\n            \"Free stuff is the best\",\n            \"M-m-m-multi-jump\"\n        ],\n        [\n            \"Like tears in the rain\"\n        ],\n        [\n            \"Dogs are the best!\",\n            \"What might this be good for?\",\n            \"Powered by unconditional love\",\n            \"Nothing can stop us!\"\n        ]\n    ];\n\n    public setup(item: Item): void {\n        GotItemScene.sound.setVolume(0.7);\n        GotItemScene.sound.play();\n\n        this.inTransition = new SlideTransition({ duration: .5, direction: \"bottom\", easing: easeOutExpo });\n        this.outTransition = new SlideTransition({ duration: .5, direction: \"bottom\", easing: easeInExpo });\n\n        const subtitle = \"“\" + this.subtitles[item][Math.floor(Math.random() * this.subtitles[item].length)] + \"”\";\n        const image = GotItemScene.itemImages[item];\n\n        // The powerup name\n        new TextNode({\n            font: GotItemScene.headlineFont,\n            text: this.titles[item],\n            x: this.game.width >> 1,\n            y: (this.game.height >> 1) + 17,\n            color: \"white\"\n        }).appendTo(this.rootNode);\n\n        // The powerup subtitle\n        new TextNode({\n            font: GotItemScene.font,\n            text: subtitle,\n            color: \"white\",\n            x: this.game.width >> 1,\n            y: (this.game.height >> 1) + 36\n        }).appendTo(this.rootNode);\n\n        // The power up image bobbling up and down\n        new SceneNode({\n            x: this.game.width >> 1,\n            y: this.game.height >> 1\n        }).animate({\n            animator: node => node.transform(m => m.setScale(2).translateY(Math.sin(Date.now() / 1000\n                * this.floatSpeed) * this.floatAmount)),\n            duration: Infinity\n        }).appendChild(image instanceof HTMLImageElement\n            ? new ImageNode({ image, anchor: Direction.BOTTOM })\n            : new AsepriteNode({ aseprite: image, tag: \"idle\", anchor: Direction.BOTTOM })\n        ).appendTo(this.rootNode);\n    }\n\n    public activate(): void {\n        // Close this scene after 4 seconds\n        setTimeout(() => this.scenes.popScene(), 4000);\n    }\n\n    public cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        ctx.save();\n        ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\";\n        ctx.fillRect(0, (height >> 1) - 1, width, 50);\n        ctx.restore();\n        super.draw(ctx, width, height);\n    }\n}\n","import { FriendlyFire } from \"../FriendlyFire\";\nimport { Scene } from \"../Scene\";\nimport { TitleScene } from \"./TitleScene\";\nimport { ProgressBarNode } from \"../scene/ProgressBarNode\";\n\nexport class LoadingScene extends Scene<FriendlyFire> {\n    private progressBar!: ProgressBarNode;\n\n    public setup(): void {\n        this.progressBar = new ProgressBarNode({\n            x: this.game.width >> 1,\n            y: this.game.height >> 1\n        }).appendTo(this.rootNode);\n    }\n\n    public cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public async activate(): Promise<void> {\n        await this.game.assets.load(this.updateProgress.bind(this));\n        this.game.scenes.setScene(TitleScene);\n    }\n\n    private updateProgress(total: number, loaded: number): void {\n        if (loaded < total) {\n            this.progressBar.setProgress(loaded / total);\n        } else {\n            this.progressBar.remove();\n        }\n    }\n}\n","import { AppInfoJSON } from \"appinfo.json\";\nimport { asset } from \"../Assets\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { ControllerEvent } from \"../input/ControllerEvent\";\nimport { ControlsScene } from \"./ControlsScene\";\nimport { DIALOG_FONT } from \"../constants\";\nimport { easeOutBounce } from \"../easings\";\nimport { FriendlyFire } from \"../FriendlyFire\";\nimport { isDev } from \"../util\";\nimport { MenuItem, MenuList } from \"../Menu\";\nimport { Scene } from \"../Scene\";\nimport { SlideTransition } from \"../transitions/SlideTransition\";\nimport { Sound } from \"../Sound\";\nimport { TitleScene } from \"./TitleScene\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { Direction } from \"../geom/Direction\";\n\nenum MenuItemKey {\n    RESUME = \"resume\",\n    CONTROLS = \"controls\",\n    EXIT = \"exit\"\n}\n\nexport class PauseScene extends Scene<FriendlyFire> {\n    @asset(\"music/pause.ogg\")\n    private static music: Sound;\n\n    @asset(DIALOG_FONT)\n    private static font: BitmapFont;\n\n    @asset(\"fonts/headline.font.json\")\n    private static headlineFont: BitmapFont;\n\n    @asset(\"appinfo.json\")\n    private static appInfo: AppInfoJSON;\n\n    private menu!: MenuList;\n\n    public cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public setup(): void {\n        this.setBackgroundStyle(\"rgba(0, 0, 0, 0.8)\");\n\n        this.inTransition = new SlideTransition({ duration: 1, direction: \"top\", easing: easeOutBounce });\n        this.outTransition = new SlideTransition({ duration: 0.25 });\n\n        PauseScene.music.setLoop(true);\n        PauseScene.music.setVolume(0.5);\n        PauseScene.music.play();\n\n        new TextNode({\n            font: PauseScene.headlineFont,\n            text: \"GAME PAUSED\",\n            color: \"white\",\n            anchor: Direction.TOP_LEFT,\n            x: 75,\n            y: 100\n        }).appendTo(this.rootNode);\n\n        new TextNode({\n            font: PauseScene.font,\n            text: isDev() ? \"DEVELOPMENT VERSION\" : PauseScene.appInfo.version,\n            color: \"white\",\n            anchor: Direction.BOTTOM_RIGHT,\n            x: this.game.width - 7,\n            y: this.game.height - 4,\n            opacity: 0.6\n        }).appendTo(this.rootNode);\n\n        this.menu = new MenuList().appendTo(this.rootNode).setItems(\n            new MenuItem(MenuItemKey.RESUME, \"Resume\", PauseScene.font, \"white\", 75, 130),\n            new MenuItem(MenuItemKey.CONTROLS, \"Controls and Options\", PauseScene.font, \"white\", 75, 145),\n            new MenuItem(MenuItemKey.EXIT, \"Back to title\", PauseScene.font, \"white\", 75, 160),\n        );\n    }\n\n    public activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n        this.menu.onActivated.connect(this.handleMenuAction, this);\n    }\n\n    public deactivate(): void {\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n        this.menu.onActivated.disconnect(this.handleMenuAction, this);\n    }\n\n    public async handleMenuAction(buttonId: string): Promise<void> {\n        switch (buttonId) {\n            case MenuItemKey.RESUME:\n                PauseScene.music.stop();\n                this.scenes.popScene();\n                break;\n            case MenuItemKey.CONTROLS:\n                this.game.scenes.pushScene(ControlsScene);\n                break;\n            case MenuItemKey.EXIT:\n                PauseScene.music.stop();\n                await this.game.scenes.popScene({ noTransition: true });\n                this.game.scenes.setScene(TitleScene);\n                break;\n        }\n    }\n\n    private handleButtonDown(event: ControllerEvent): void {\n        if (event.isAbort || event.isPause) {\n            PauseScene.music.stop();\n            this.scenes.popScene();\n        } else if (event.isConfirm) {\n            this.menu.executeAction();\n        } else if (event.isMenuUp) {\n            this.menu.prev();\n        } else if (event.isMenuDown) {\n            this.menu.next();\n        }\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { ControllerEvent } from \"../input/ControllerEvent\";\nimport { ControlsScene } from \"./ControlsScene\";\nimport { CreditsScene } from \"./CreditsScene\";\nimport { CurtainTransition } from \"../transitions/CurtainTransition\";\nimport { DIALOG_FONT } from \"../constants\";\nimport { easeInSine, easeOutQuad } from \"../easings\";\nimport { FadeTransition } from \"../transitions/FadeTransition\";\nimport { FriendlyFire } from \"../FriendlyFire\";\nimport { isElectron } from \"../util\";\nimport { MenuAlignment, MenuItem, MenuList } from \"../Menu\";\nimport { Scene } from \"../Scene\";\nimport { Sound } from \"../Sound\";\nimport { CharacterSelectionScene } from \"./CharacterSelectionScene\";\nimport { AsepriteNode } from \"../scene/AsepriteNode\";\nimport { Direction } from \"../geom/Direction\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { SceneNode } from \"../scene/SceneNode\";\n\ntype MainMenuParams = {\n    label: string;\n    electronOnly?: boolean;\n};\n\nenum MenuItemKey {\n    START = \"start\",\n    CONTROLS = \"controls\",\n    CREDITS = \"credits\",\n    EXIT = \"exit\"\n}\n\nconst MenuLabels: Record<MenuItemKey, MainMenuParams> = {\n    [MenuItemKey.START]: { label: \"Start Game\" },\n    [MenuItemKey.CONTROLS]: { label: \"Controls and Options\" },\n    [MenuItemKey.CREDITS]: { label: \"Credits\" },\n    [MenuItemKey.EXIT]: { label: \"Exit Game\", electronOnly: true },\n};\n\nexport class TitleScene extends Scene<FriendlyFire> {\n    @asset(\"music/cerulean-expanse.ogg\")\n    public static music: Sound;\n\n    @asset(\"images/title/layer1.aseprite.json\")\n    private static titleLayer1: Aseprite;\n\n    @asset(\"images/title/layer2.aseprite.json\")\n    private static titleLayer2: Aseprite;\n\n    @asset(\"images/title/island1.aseprite.json\")\n    private static titleIsland1: Aseprite;\n\n    @asset(\"images/title/island2.aseprite.json\")\n    private static titleIsland2: Aseprite;\n\n    @asset(\"images/title/layer3.aseprite.json\")\n    private static titleLayer3: Aseprite;\n\n    @asset(\"images/title/person.aseprite.json\")\n    private static person: Aseprite;\n\n    @asset(\"images/logo.png\")\n    private static logoImage: HTMLImageElement;\n\n    @asset(\"sprites/flameicon.aseprite.json\")\n    private static flameicon: Aseprite;\n\n    @asset(DIALOG_FONT)\n    private static font: BitmapFont;\n\n    private menu!: MenuList;\n\n    private animationDuration = 3;\n\n    private titleBasePosition = {\n        x: this.game.width / 2 - TitleScene.logoImage.width / 2,\n        y: 60\n    };\n\n    private titleLayer1Position = { x: 0, y: 70 };\n    private titleLayer2Position = { x: 0, y: 163 };\n    private titleLayer3Position = { x: 0, y: -125 };\n\n    private menuBasePosition = {\n        x: this.game.width / 2,\n        y: 190,\n        gap: 15,\n    };\n\n    public cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public setup(): void {\n        this.zIndex = 1;\n        this.inTransition = new FadeTransition();\n        this.outTransition = new CurtainTransition({ easing: easeInSine });\n\n        // The sky background layer\n        new AsepriteNode({\n            id: \"titleLayer3\",\n            aseprite: TitleScene.titleLayer3,\n            tag: \"idle\",\n            x: this.titleLayer3Position.x,\n            y: this.titleLayer3Position.y,\n            anchor: Direction.TOP_LEFT\n        }).animate({\n            animator: (node, value) => node.setY(this.titleLayer3Position.y + (1 - value) * 100),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // The background layer with the sea animated to move in from the bottom\n        new AsepriteNode({\n            id: \"titleLayer2\",\n            aseprite: TitleScene.titleLayer2,\n            tag: \"idle\",\n            x: this.titleLayer2Position.x,\n            y: this.titleLayer2Position.y,\n            anchor: Direction.TOP_LEFT\n        }).animate({\n            animator: (node, value) => node.setY(this.titleLayer2Position.y + (1 - value) * 200),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // The two floating islands in the background animated to moving in from the bottom\n        new SceneNode().appendChild(\n            new AsepriteNode({\n                id: \"titleIsland1\",\n                aseprite: TitleScene.titleIsland1,\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: 90,\n                y: 168\n            })\n        ).appendChild(\n            new AsepriteNode({\n                id: \"titleIsland2\",\n                aseprite: TitleScene.titleIsland2,\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: 323,\n                y: 178\n            })\n        ).animate({\n            animator: (node, value) => node.setY((1 - value) * 250),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // The girl standing on the ground animated to move in from the bottom\n        new AsepriteNode({\n            id: \"person\",\n            aseprite: TitleScene.person,\n            tag: \"idle\",\n            x: 22,\n            y: 155,\n            anchor: Direction.TOP_LEFT\n        }).animate({\n            animator: (node, value) => node.setY(155 + (1 - value) * 330),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // The ground layer animated to move in from the bottom\n        new AsepriteNode({\n            id: \"titleLayer1\",\n            aseprite: TitleScene.titleLayer1,\n            tag: \"idle\",\n            x: this.titleLayer1Position.x,\n            y: this.titleLayer1Position.y,\n            anchor: Direction.TOP_LEFT\n        }).animate({\n            animator: (node, value) => node.setY(this.titleLayer1Position.y + (1 - value) * 300),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // The title text with flame icon fading in and moving to the top\n        new SceneNode({\n            opacity: 0,\n            x: this.titleBasePosition.x,\n            y: this.titleBasePosition.y\n        }).appendChild(\n            new AsepriteNode({\n                id: \"flameicon\",\n                aseprite: TitleScene.flameicon,\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: 147,\n                y: -10\n            })\n        ).appendChild(\n            new ImageNode({\n                id: \"logoImage\",\n                image: TitleScene.logoImage,\n                anchor: Direction.TOP_LEFT\n            })\n        ).animate({\n            animator: (node, value) => node.setY(this.titleBasePosition.y - 10 + 150 * (1 - value)),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).animate({\n            animator: (node, value) => node.setOpacity(value),\n            delay: this.animationDuration / 2,\n            duration: this.animationDuration / 2,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        this.menu = new MenuList({\n            id: \"menu\",\n            opacity:0,\n            align: MenuAlignment.CENTER\n        }).animate({\n            animator: (node, value) => node.setOpacity(value),\n            delay: 2.5,\n            duration: 0.5,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        Object.values(MenuItemKey).forEach((key, index) => {\n            if (!MenuLabels[key].electronOnly || (isElectron() || window.opener)) {\n                this.menu.addItems(\n                    new MenuItem(\n                        key,\n                        MenuLabels[key].label,\n                        TitleScene.font,\n                        \"white\",\n                        this.menuBasePosition.x, this.menuBasePosition.y + this.menuBasePosition.gap * index\n                    )\n                );\n            }\n        });\n    }\n\n    public animationIsDone(): boolean {\n        return !this.rootNode.hasAnimations();\n    }\n\n    public finishAnimation(): void {\n        this.rootNode.finishAnimations();\n    }\n\n    public handleMenuAction(buttonId: string): void {\n        switch (buttonId) {\n            case MenuItemKey.START:\n                // this.stopMusicTrack();\n                this.game.scenes.pushScene(CharacterSelectionScene);\n                // this.game.scenes.setScene(GameScene);\n                break;\n            case MenuItemKey.CONTROLS:\n                this.game.scenes.pushScene(ControlsScene);\n                break;\n            case MenuItemKey.CREDITS:\n                this.stopMusicTrack();\n                this.game.scenes.pushScene(CreditsScene);\n                break;\n            case MenuItemKey.EXIT:\n                window.close();\n                break;\n        }\n    }\n\n    public activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n        this.menu.onActivated.connect(this.handleMenuAction, this);\n        this.playMusicTrack();\n    }\n\n    public deactivate(): void {\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n        this.menu.onActivated.disconnect(this.handleMenuAction, this);\n    }\n\n    private handleButtonDown(event: ControllerEvent): void {\n        if (this.animationIsDone()) {\n            if (event.isConfirm) {\n                this.menu.executeAction();\n            } else if (event.isMenuUp) {\n                this.menu.prev();\n            } else if (event.isMenuDown) {\n                this.menu.next();\n            }\n        } else {\n            if (event.isConfirm) {\n                this.finishAnimation();\n            }\n        }\n\n    }\n\n    private stopMusicTrack(): void {\n        TitleScene.music.stop();\n    }\n\n    private playMusicTrack(): void {\n        TitleScene.music.setLoop(true);\n        TitleScene.music.setVolume(0.30);\n        TitleScene.music.play();\n    }\n}\n","import { Transition, TransitionOptions } from \"../Transition\";\n\nexport type CurtainDirection = \"horizontal\" | \"vertical\";\n\nexport interface CurtainTransitionOptions extends TransitionOptions {\n    direction?: CurtainDirection;\n}\n\nexport class CurtainTransition extends Transition {\n    private readonly direction: CurtainDirection;\n\n    public constructor({ direction = \"horizontal\", ...options }: CurtainTransitionOptions) {\n        super(options);\n\n        this.direction = direction;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, draw: () => void, width: number, height: number) {\n        const value = this.valueOf();\n        if (this.direction === \"horizontal\") {\n            // Draw left half\n            ctx.save();\n            ctx.translate(Math.round(-width * value / 2), 0);\n            ctx.beginPath();\n            ctx.rect(0, 0, Math.round(width / 2), height);\n            ctx.clip();\n            draw();\n            ctx.restore();\n\n            // Draw right half\n            ctx.save();\n            ctx.translate(Math.round(width * value / 2), 0);\n            ctx.beginPath();\n            ctx.rect(Math.round(width / 2), 0, Math.round(width), height);\n            ctx.clip();\n            draw();\n            ctx.restore();\n        } else if (this.direction === \"vertical\") {\n            // Draw upper half\n            ctx.save();\n            ctx.translate(0, Math.round(-height * value / 2));\n            ctx.beginPath();\n            ctx.rect(0, 0, width, Math.round(height / 2));\n            ctx.clip();\n            draw();\n            ctx.restore();\n\n            // Draw lower half\n            ctx.save();\n            ctx.translate(0, Math.round(height * value / 2));\n            ctx.beginPath();\n            ctx.rect(0, Math.round(height / 2), width, Math.round(height / 2));\n            ctx.clip();\n            draw();\n            ctx.restore();\n        }\n    }\n}\n","import { Transition } from \"../Transition\";\n\nexport class FadeTransition extends Transition {\n    public draw(ctx: CanvasRenderingContext2D, draw: () => void): void {\n        ctx.globalAlpha = 1 - this.valueOf();\n        draw();\n    }\n}\n","import { Transition, TransitionOptions } from \"../Transition\";\n\nexport type SlideDirection = \"top\" | \"left\" | \"bottom\" | \"right\";\n\nexport interface SlideTransitionOptions extends TransitionOptions {\n    direction?: SlideDirection;\n}\n\nexport class SlideTransition extends Transition {\n    private readonly direction: SlideDirection;\n\n    public constructor({ direction = \"top\", ...options }: SlideTransitionOptions = {}) {\n        super(options);\n        this.direction = direction;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, draw: () => void, width: number, height: number) {\n        const value = this.valueOf();\n        if (this.direction === \"top\") {\n            ctx.translate(0, -height * value);\n        } else if (this.direction === \"bottom\") {\n            ctx.translate(0, height * value);\n        } else if (this.direction === \"left\") {\n            ctx.translate(-width * value, 0);\n        } else if (this.direction === \"right\") {\n            ctx.translate(width * value, 0);\n        }\n\n        draw();\n    }\n}\n","import { Bounds } from \"./Entity\";\nimport { GameObjectInfo } from \"./MapInfo\";\nimport { MapObjectJSON } from \"*/level.json\";\nimport { METER_PER_PIXEL, SOUND_INTENSITY_MULTIPLIER } from \"./constants\";\n\nexport function rnd(minOrMax = 1, max?: number): number {\n    if (max != null) {\n        return minOrMax + Math.random() * (max - minOrMax);\n    } else {\n        return Math.random() * minOrMax;\n    }\n}\n\nexport function rndInt(minOrMax: number, max?: number): number {\n    if (max != null) {\n        return Math.floor(minOrMax + Math.random() * (max - minOrMax));\n    } else {\n        return Math.floor(Math.random() * minOrMax);\n    }\n}\n\nexport function rndItem(array: any[] | string) {\n    const index = Math.floor(Math.random() * array.length);\n\n    return array[index];\n}\n\nexport function timedRnd(dt: number, averageDelay: number): number {\n    let count = 0;\n    let chance = dt - Math.random() * averageDelay;\n\n    while (chance > 0) {\n        count++;\n        chance -= Math.random() * averageDelay;\n    }\n\n    return count;\n}\n\nexport function clamp(v: number, min: number, max: number): number {\n    return v < min ? min : v > max ? max : v;\n}\n\nexport function orientPow(v: number, exp: number): number {\n    if (v < 0) {\n        return -((-v) ** exp);\n    } else {\n        return v ** exp;\n    }\n}\n\nconst timeDelta = Date.now() - performance.now();\n\nexport function now(): number {\n    return performance.now() + timeDelta;\n}\n\nexport function shiftValue(v: number, trg: number, inc: number): number {\n    if (v === trg) {\n        return trg;\n    }\n\n    if (v < trg) {\n        v += inc;\n        if (v >= trg) {\n            return trg;\n        }\n    } else {\n        v -= inc;\n        if (v <= trg) {\n            return trg;\n        }\n    }\n\n    return v;\n}\n\nexport async function sleep(ms = 0): Promise<void> {\n    await new Promise((resolve) => {\n        setTimeout(() => resolve(), ms);\n    });\n}\n\n/**\n * Inplace array shuffling.\n * @param array The array.\n * @return The same array. But shuffled.\n */\nexport function shuffle<T>(array: T[]): T[] {\n    for (let i = 1; i < array.length; i++) {\n        const j = Math.floor(Math.random() * (i + 1));\n\n        if (i !== j) {\n            const tmp = array[i];\n            array[i] = array[j];\n            array[j] = tmp;\n        }\n    }\n\n    return array;\n}\n\nexport function boundsFromMapObject(o: MapObjectJSON | GameObjectInfo, margin = 0): Bounds {\n    const width = o.width + (margin * 2);\n    const height = o.height + (margin * 2);\n    const x = o.x - margin;\n    const y = o.y + margin;\n\n    return { x, y, width, height };\n}\n\nexport function isElectron(): boolean {\n    return !!navigator.userAgent.match(/\\belectron\\b/i);\n}\n\n/**\n * Figures out if development mode is enabled or not.\n */\nexport function isDev(): boolean {\n    // Legacy behavior.\n    if (window.location.port === \"8000\") {\n        return true;\n    }\n\n    if (!!window.location.search) {\n        return !!window.location.search.substr(1).split(\"&\").find(key => {\n            if (key.toLowerCase().startsWith(\"dev\")) {\n                return key.length === 3 || key.endsWith(\"=true\");\n            }\n            return false;\n        });\n    }\n\n    return false;\n}\n\n/**\n * Calculates the volume of a sound in regards to a distance and some additional properties.\n * @param distance  - the distance of the audio source to the audio listener (px)\n * @param intensity - Defines how \"loud\" the sound is or in other terms, how far it can be heard. Defaults to 1.\n * @param maxVolume - Defines the maximum volume of the sound (when distance is 0).\n *                    The sound will never be louder than this. Defaults to 1.\n */\nexport function calculateVolume(\n    distance: number, maxVolume: number = 1, intensity: number = 1\n): number {\n    return Math.max(\n        0,\n        maxVolume - ((distance * METER_PER_PIXEL) / (SOUND_INTENSITY_MULTIPLIER * intensity))\n    );\n}\n\n/** Factor to convert radians to degrees. */\nconst RAD_TO_DEG = 180 / Math.PI;\n\n/**\n * Converts degrees to radians.\n *\n * @param degrees - The value in degrees to convert to radians.\n * @return The given value converted to radians.\n */\nexport function radians(degrees: number): number {\n    return degrees / RAD_TO_DEG;\n}\n\n/**\n * Converts radians to degrees.\n *\n * @param radians - The value in radians to convert to degrees.\n * @return The given value converted to degrees.\n */\nexport function degrees(radians: number): number {\n    return radians * RAD_TO_DEG;\n}\n\n/**\n * Normalizes an angle in radians so it is between 0 (inclusive) and 2*PI (exclusive).\n *\n * @param degrees - The angle to normalize.\n * @return The normalized angle.\n */\nexport function normalizeRadians(angle: number): number {\n    const pi2 = Math.PI * 2;\n    return ((angle % pi2) + pi2) % pi2;\n}\n\n/**\n * Normalizes an angle in degrees so it is between 0 (inclusive) and 360 (exclusive).\n *\n * @param degrees - The angle to normalize.\n * @return The normalized angle.\n */\nexport function normalizeDegrees(degrees: number): number {\n    return ((degrees % 360) + 360) % 360;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}